Tue 27 Feb 2024 10:22:37 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['_7_point_criteria']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB4
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb4 (Functional)  (None, 1792)              17673823  
_________________________________________________________________
dense (Dense)                (None, 512)               918016    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 18,726,753
Trainable params: 1,051,394
Non-trainable params: 17,675,359
_________________________________________________________________
Fitting _7_point_criteria_aug_EfficientNetB4_150h_150w_None model...
model_name: _7_point_criteria_aug_EfficientNetB4_150h_150w_None
Epoch: 1 loss: 0.6950 accuracy: 0.5341 val_loss: 0.6846 val_accuracy: 0.6995
Epoch: 2 loss: 0.6799 accuracy: 0.5857 val_loss: 0.6771 val_accuracy: 0.6995
Epoch: 3 loss: 0.6806 accuracy: 0.5308 val_loss: 0.6709 val_accuracy: 0.6995
Epoch: 4 loss: 0.6837 accuracy: 0.5641 val_loss: 0.6644 val_accuracy: 0.6995
Epoch: 5 loss: 0.6844 accuracy: 0.5740 val_loss: 0.6605 val_accuracy: 0.6995
Epoch: 6 loss: 0.6733 accuracy: 0.5707 val_loss: 0.6564 val_accuracy: 0.6995
Epoch: 7 loss: 0.6768 accuracy: 0.5740 val_loss: 0.6527 val_accuracy: 0.6995
Epoch: 8 loss: 0.6700 accuracy: 0.6206 val_loss: 0.6485 val_accuracy: 0.6995
Epoch: 9 loss: 0.6727 accuracy: 0.5923 val_loss: 0.6453 val_accuracy: 0.6995
Epoch: 10 loss: 0.6537 accuracy: 0.6398 val_loss: 0.6424 val_accuracy: 0.6995
Epoch: 11 loss: 0.6637 accuracy: 0.6140 val_loss: 0.6397 val_accuracy: 0.6995
Epoch: 12 loss: 0.6525 accuracy: 0.6256 val_loss: 0.6372 val_accuracy: 0.6995
Epoch: 13 loss: 0.6488 accuracy: 0.6323 val_loss: 0.6363 val_accuracy: 0.6995
Epoch: 14 loss: 0.6523 accuracy: 0.6256 val_loss: 0.6345 val_accuracy: 0.6995
Epoch: 15 loss: 0.6410 accuracy: 0.6339 val_loss: 0.6328 val_accuracy: 0.6995
Epoch: 16 loss: 0.6538 accuracy: 0.6206 val_loss: 0.6331 val_accuracy: 0.6995
Epoch: 17 loss: 0.6345 accuracy: 0.6522 val_loss: 0.6335 val_accuracy: 0.6995
Epoch: 18 loss: 0.6353 accuracy: 0.6539 val_loss: 0.6341 val_accuracy: 0.6995
Epoch: 19 loss: 0.6406 accuracy: 0.6356 val_loss: 0.6315 val_accuracy: 0.6995
Epoch: 20 loss: 0.6313 accuracy: 0.6522 val_loss: 0.6325 val_accuracy: 0.6995
Job ended!
