Fri 01 Mar 2024 08:40:32 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'PH2']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB4
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb4 (Functional)  (None, 1792)              17673823  
_________________________________________________________________
dense (Dense)                (None, 512)               918016    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 18,726,753
Trainable params: 1,051,394
Non-trainable params: 17,675,359
_________________________________________________________________
Fitting ISIC2016+PH2_aug_EfficientNetB4_150h_150w_None model...
model_name: ISIC2016+PH2_aug_EfficientNetB4_150h_150w_None
Epoch: 1 loss: 0.7800 accuracy: 0.6410 val_loss: 0.5214 val_accuracy: 0.7667
Epoch: 2 loss: 0.6407 accuracy: 0.7152 val_loss: 0.5449 val_accuracy: 0.7778
Epoch: 3 loss: 0.6076 accuracy: 0.7268 val_loss: 0.5822 val_accuracy: 0.7333
Epoch: 4 loss: 0.5386 accuracy: 0.7509 val_loss: 0.5625 val_accuracy: 0.7333
Epoch: 5 loss: 0.4996 accuracy: 0.7666 val_loss: 0.5388 val_accuracy: 0.7389
Epoch: 6 loss: 0.4713 accuracy: 0.7831 val_loss: 0.4950 val_accuracy: 0.7833
Epoch: 7 loss: 0.4309 accuracy: 0.8003 val_loss: 0.5205 val_accuracy: 0.7722
Epoch: 8 loss: 0.3980 accuracy: 0.8195 val_loss: 0.4902 val_accuracy: 0.7944
Epoch: 9 loss: 0.3990 accuracy: 0.8220 val_loss: 0.4747 val_accuracy: 0.7944
Epoch: 10 loss: 0.3624 accuracy: 0.8449 val_loss: 0.4627 val_accuracy: 0.8167
Epoch: 11 loss: 0.3713 accuracy: 0.8270 val_loss: 0.4688 val_accuracy: 0.7944
Epoch: 12 loss: 0.3618 accuracy: 0.8367 val_loss: 0.4672 val_accuracy: 0.7944
Epoch: 13 loss: 0.3430 accuracy: 0.8463 val_loss: 0.4772 val_accuracy: 0.7833
Epoch: 14 loss: 0.3500 accuracy: 0.8511 val_loss: 0.4808 val_accuracy: 0.8111
Epoch: 15 loss: 0.3104 accuracy: 0.8586 val_loss: 0.4859 val_accuracy: 0.8167
Epoch: 16 loss: 0.3126 accuracy: 0.8662 val_loss: 0.4721 val_accuracy: 0.8000
Epoch: 17 loss: 0.2754 accuracy: 0.8765 val_loss: 0.4918 val_accuracy: 0.8000
Epoch: 18 loss: 0.2851 accuracy: 0.8833 val_loss: 0.5492 val_accuracy: 0.7500
Epoch: 19 loss: 0.2897 accuracy: 0.8751 val_loss: 0.4897 val_accuracy: 0.7778
Epoch: 20 loss: 0.2698 accuracy: 0.8792 val_loss: 0.4950 val_accuracy: 0.8056
Job ended!
