Mon 26 Feb 2024 11:19:44 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['HAM10000']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet121
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet121 (Functional)     (None, 1024)              7037504   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,697,218
Trainable params: 658,178
Non-trainable params: 7,039,040
_________________________________________________________________
Fitting HAM10000_aug_DenseNet121_150h_150w_None model...
model_name: HAM10000_aug_DenseNet121_150h_150w_None
Epoch: 1 loss: 0.7493 accuracy: 0.6282 val_loss: 0.2541 val_accuracy: 0.9694
Epoch: 2 loss: 0.6295 accuracy: 0.6850 val_loss: 0.2076 val_accuracy: 0.9524
Epoch: 3 loss: 0.5731 accuracy: 0.7189 val_loss: 0.1814 val_accuracy: 0.9468
Epoch: 4 loss: 0.5544 accuracy: 0.7315 val_loss: 0.1609 val_accuracy: 0.9490
Epoch: 5 loss: 0.5455 accuracy: 0.7347 val_loss: 0.1974 val_accuracy: 0.9536
Epoch: 6 loss: 0.5213 accuracy: 0.7444 val_loss: 0.1431 val_accuracy: 0.9570
Epoch: 7 loss: 0.5125 accuracy: 0.7533 val_loss: 0.2424 val_accuracy: 0.9094
Epoch: 8 loss: 0.5111 accuracy: 0.7490 val_loss: 0.1952 val_accuracy: 0.9558
Epoch: 9 loss: 0.4915 accuracy: 0.7629 val_loss: 0.1981 val_accuracy: 0.9343
Epoch: 10 loss: 0.4838 accuracy: 0.7680 val_loss: 0.1531 val_accuracy: 0.9570
Epoch: 11 loss: 0.4765 accuracy: 0.7706 val_loss: 0.1501 val_accuracy: 0.9604
Epoch: 12 loss: 0.4783 accuracy: 0.7696 val_loss: 0.1284 val_accuracy: 0.9638
Epoch: 13 loss: 0.4679 accuracy: 0.7719 val_loss: 0.1478 val_accuracy: 0.9592
Epoch: 14 loss: 0.4692 accuracy: 0.7672 val_loss: 0.1453 val_accuracy: 0.9513
Epoch: 15 loss: 0.4524 accuracy: 0.7899 val_loss: 0.2087 val_accuracy: 0.9287
Epoch: 16 loss: 0.4538 accuracy: 0.7830 val_loss: 0.1211 val_accuracy: 0.9626
Epoch: 17 loss: 0.4536 accuracy: 0.7839 val_loss: 0.1811 val_accuracy: 0.9354
Epoch: 18 loss: 0.4522 accuracy: 0.7913 val_loss: 0.2118 val_accuracy: 0.9411
Epoch: 19 loss: 0.4424 accuracy: 0.7955 val_loss: 0.1357 val_accuracy: 0.9547
Epoch: 20 loss: 0.4386 accuracy: 0.7913 val_loss: 0.1499 val_accuracy: 0.9558
Job ended!
