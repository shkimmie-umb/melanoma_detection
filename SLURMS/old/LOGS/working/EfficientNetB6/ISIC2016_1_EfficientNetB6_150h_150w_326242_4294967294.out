Fri 01 Mar 2024 10:51:08 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB6
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb6 (Functional)  (None, 2304)              40960143  
_________________________________________________________________
dense (Dense)                (None, 512)               1180160   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 42,275,217
Trainable params: 1,313,538
Non-trainable params: 40,961,679
_________________________________________________________________
Fitting ISIC2016_aug_EfficientNetB6_150h_150w_None model...
model_name: ISIC2016_aug_EfficientNetB6_150h_150w_None
Epoch: 1 loss: 0.7865 accuracy: 0.6557 val_loss: 0.5530 val_accuracy: 0.8056
Epoch: 2 loss: 0.6737 accuracy: 0.6947 val_loss: 0.5418 val_accuracy: 0.7944
Epoch: 3 loss: 0.6471 accuracy: 0.7095 val_loss: 0.4902 val_accuracy: 0.8222
Epoch: 4 loss: 0.5772 accuracy: 0.7476 val_loss: 0.4490 val_accuracy: 0.8056
Epoch: 5 loss: 0.5255 accuracy: 0.7702 val_loss: 0.4484 val_accuracy: 0.8056
Epoch: 6 loss: 0.5209 accuracy: 0.7624 val_loss: 0.4473 val_accuracy: 0.8111
Epoch: 7 loss: 0.4794 accuracy: 0.7944 val_loss: 0.4207 val_accuracy: 0.8389
Epoch: 8 loss: 0.5000 accuracy: 0.7710 val_loss: 0.4258 val_accuracy: 0.8278
Epoch: 9 loss: 0.4800 accuracy: 0.7823 val_loss: 0.4174 val_accuracy: 0.8111
Epoch: 10 loss: 0.4200 accuracy: 0.8144 val_loss: 0.4035 val_accuracy: 0.8389
Epoch: 11 loss: 0.4544 accuracy: 0.7931 val_loss: 0.4000 val_accuracy: 0.8444
Epoch: 12 loss: 0.4174 accuracy: 0.8118 val_loss: 0.4261 val_accuracy: 0.8167
Epoch: 13 loss: 0.4437 accuracy: 0.7971 val_loss: 0.4192 val_accuracy: 0.8167
Epoch: 14 loss: 0.4224 accuracy: 0.8031 val_loss: 0.4695 val_accuracy: 0.8111
Epoch: 15 loss: 0.3993 accuracy: 0.8291 val_loss: 0.4219 val_accuracy: 0.8333
Epoch: 16 loss: 0.4123 accuracy: 0.8118 val_loss: 0.4445 val_accuracy: 0.8278
Epoch: 17 loss: 0.3772 accuracy: 0.8300 val_loss: 0.4548 val_accuracy: 0.7889
Epoch: 18 loss: 0.3394 accuracy: 0.8517 val_loss: 0.4439 val_accuracy: 0.8222
Epoch: 19 loss: 0.3840 accuracy: 0.8213 val_loss: 0.4862 val_accuracy: 0.8167
Epoch: 20 loss: 0.3496 accuracy: 0.8526 val_loss: 0.4410 val_accuracy: 0.8000
Job ended!
