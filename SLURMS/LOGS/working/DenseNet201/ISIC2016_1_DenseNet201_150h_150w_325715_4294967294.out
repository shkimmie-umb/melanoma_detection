Thu 29 Feb 2024 02:22:06 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet201
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet201 (Functional)     (None, 1920)              18321984  
_________________________________________________________________
dense (Dense)                (None, 512)               983552    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 19,440,450
Trainable params: 1,116,930
Non-trainable params: 18,323,520
_________________________________________________________________
Fitting ISIC2016_aug_DenseNet201_150h_150w_None model...
model_name: ISIC2016_aug_DenseNet201_150h_150w_None
Epoch: 1 loss: 0.8574 accuracy: 0.6123 val_loss: 0.4536 val_accuracy: 0.8000
Epoch: 2 loss: 0.6685 accuracy: 0.6947 val_loss: 0.4193 val_accuracy: 0.8167
Epoch: 3 loss: 0.5828 accuracy: 0.7311 val_loss: 0.4160 val_accuracy: 0.8333
Epoch: 4 loss: 0.5498 accuracy: 0.7502 val_loss: 0.3990 val_accuracy: 0.8389
Epoch: 5 loss: 0.4692 accuracy: 0.7762 val_loss: 0.3900 val_accuracy: 0.8056
Epoch: 6 loss: 0.4134 accuracy: 0.8196 val_loss: 0.4120 val_accuracy: 0.8222
Epoch: 7 loss: 0.3943 accuracy: 0.8222 val_loss: 0.4324 val_accuracy: 0.8056
Epoch: 8 loss: 0.3429 accuracy: 0.8543 val_loss: 0.4312 val_accuracy: 0.8222
Epoch: 9 loss: 0.3191 accuracy: 0.8621 val_loss: 0.4148 val_accuracy: 0.8333
Epoch: 10 loss: 0.2887 accuracy: 0.8812 val_loss: 0.4531 val_accuracy: 0.8111
Epoch: 11 loss: 0.2378 accuracy: 0.9020 val_loss: 0.4444 val_accuracy: 0.8167
Epoch: 12 loss: 0.2467 accuracy: 0.9011 val_loss: 0.4531 val_accuracy: 0.8333
Epoch: 13 loss: 0.2549 accuracy: 0.8812 val_loss: 0.4645 val_accuracy: 0.8167
Epoch: 14 loss: 0.2446 accuracy: 0.9011 val_loss: 0.4698 val_accuracy: 0.8056
Epoch: 15 loss: 0.1757 accuracy: 0.9332 val_loss: 0.4563 val_accuracy: 0.8111
Epoch: 16 loss: 0.1796 accuracy: 0.9193 val_loss: 0.4512 val_accuracy: 0.8167
Epoch: 17 loss: 0.1699 accuracy: 0.9434 val_loss: 0.4542 val_accuracy: 0.8056
Epoch: 18 loss: 0.1611 accuracy: 0.9384 val_loss: 0.4747 val_accuracy: 0.8222
Epoch: 19 loss: 0.1458 accuracy: 0.9428 val_loss: 0.4514 val_accuracy: 0.8167
Epoch: 20 loss: 0.1401 accuracy: 0.9471 val_loss: 0.4795 val_accuracy: 0.8111
Job ended!
