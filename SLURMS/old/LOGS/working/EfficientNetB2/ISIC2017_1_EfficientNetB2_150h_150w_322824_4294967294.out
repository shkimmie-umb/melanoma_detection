Tue 27 Feb 2024 08:33:58 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2017']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB2
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb2 (Functional)  (None, 1408)              7768569   
_________________________________________________________________
dense (Dense)                (None, 512)               721408    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 8,624,891
Trainable params: 854,786
Non-trainable params: 7,770,105
_________________________________________________________________
Fitting ISIC2017_aug_EfficientNetB2_150h_150w_None model...
model_name: ISIC2017_aug_EfficientNetB2_150h_150w_None
Epoch: 1 loss: 0.6849 accuracy: 0.5461 val_loss: 0.6345 val_accuracy: 0.8000
Epoch: 2 loss: 0.6667 accuracy: 0.6132 val_loss: 0.5978 val_accuracy: 0.8000
Epoch: 3 loss: 0.6578 accuracy: 0.6436 val_loss: 0.5810 val_accuracy: 0.8000
Epoch: 4 loss: 0.6536 accuracy: 0.6423 val_loss: 0.5689 val_accuracy: 0.8000
Epoch: 5 loss: 0.6524 accuracy: 0.6436 val_loss: 0.5670 val_accuracy: 0.8000
Epoch: 6 loss: 0.6523 accuracy: 0.6440 val_loss: 0.5468 val_accuracy: 0.8000
Epoch: 7 loss: 0.6504 accuracy: 0.6463 val_loss: 0.5506 val_accuracy: 0.8000
Epoch: 8 loss: 0.6484 accuracy: 0.6463 val_loss: 0.5502 val_accuracy: 0.8000
Epoch: 9 loss: 0.6501 accuracy: 0.6440 val_loss: 0.5540 val_accuracy: 0.8000
Epoch: 10 loss: 0.6500 accuracy: 0.6446 val_loss: 0.5382 val_accuracy: 0.8000
Epoch: 11 loss: 0.6503 accuracy: 0.6456 val_loss: 0.5242 val_accuracy: 0.8000
Epoch: 12 loss: 0.6488 accuracy: 0.6443 val_loss: 0.5545 val_accuracy: 0.8000
Epoch: 13 loss: 0.6505 accuracy: 0.6440 val_loss: 0.5674 val_accuracy: 0.8000
Epoch: 14 loss: 0.6491 accuracy: 0.6450 val_loss: 0.5555 val_accuracy: 0.8000
Epoch: 15 loss: 0.6448 accuracy: 0.6476 val_loss: 0.5398 val_accuracy: 0.8000
Epoch: 16 loss: 0.6477 accuracy: 0.6456 val_loss: 0.5391 val_accuracy: 0.8000
Epoch: 17 loss: 0.6465 accuracy: 0.6456 val_loss: 0.5530 val_accuracy: 0.8000
Epoch: 18 loss: 0.6485 accuracy: 0.6433 val_loss: 0.5378 val_accuracy: 0.8000
Epoch: 19 loss: 0.6440 accuracy: 0.6473 val_loss: 0.5469 val_accuracy: 0.8000
Epoch: 20 loss: 0.6468 accuracy: 0.6443 val_loss: 0.5553 val_accuracy: 0.8000
Job ended!
