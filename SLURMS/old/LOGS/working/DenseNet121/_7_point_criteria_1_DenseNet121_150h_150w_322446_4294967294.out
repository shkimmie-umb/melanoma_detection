Mon 26 Feb 2024 11:19:44 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['_7_point_criteria']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet121
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet121 (Functional)     (None, 1024)              7037504   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,697,218
Trainable params: 658,178
Non-trainable params: 7,039,040
_________________________________________________________________
Fitting _7_point_criteria_aug_DenseNet121_150h_150w_None model...
model_name: _7_point_criteria_aug_DenseNet121_150h_150w_None
Epoch: 1 loss: 0.9005 accuracy: 0.5724 val_loss: 0.6737 val_accuracy: 0.6995
Epoch: 2 loss: 0.8221 accuracy: 0.6123 val_loss: 0.6619 val_accuracy: 0.6995
Epoch: 3 loss: 0.7754 accuracy: 0.6290 val_loss: 0.6499 val_accuracy: 0.6995
Epoch: 4 loss: 0.7762 accuracy: 0.6256 val_loss: 0.6369 val_accuracy: 0.6995
Epoch: 5 loss: 0.7531 accuracy: 0.6373 val_loss: 0.6400 val_accuracy: 0.6995
Epoch: 6 loss: 0.7274 accuracy: 0.6323 val_loss: 0.6252 val_accuracy: 0.6995
Epoch: 7 loss: 0.6950 accuracy: 0.6439 val_loss: 0.6236 val_accuracy: 0.6995
Epoch: 8 loss: 0.7087 accuracy: 0.6556 val_loss: 0.6119 val_accuracy: 0.6995
Epoch: 9 loss: 0.7567 accuracy: 0.6406 val_loss: 0.6042 val_accuracy: 0.6995
Epoch: 10 loss: 0.6859 accuracy: 0.6672 val_loss: 0.6054 val_accuracy: 0.6995
Epoch: 11 loss: 0.6747 accuracy: 0.6839 val_loss: 0.5999 val_accuracy: 0.6995
Epoch: 12 loss: 0.6914 accuracy: 0.6539 val_loss: 0.6022 val_accuracy: 0.6995
Epoch: 13 loss: 0.6796 accuracy: 0.6839 val_loss: 0.5972 val_accuracy: 0.7044
Epoch: 14 loss: 0.6655 accuracy: 0.6656 val_loss: 0.5907 val_accuracy: 0.7044
Epoch: 15 loss: 0.6877 accuracy: 0.6755 val_loss: 0.5981 val_accuracy: 0.7044
Epoch: 16 loss: 0.6382 accuracy: 0.6689 val_loss: 0.5992 val_accuracy: 0.7044
Epoch: 17 loss: 0.6775 accuracy: 0.6755 val_loss: 0.5868 val_accuracy: 0.7044
Epoch: 18 loss: 0.6657 accuracy: 0.6988 val_loss: 0.5829 val_accuracy: 0.7044
Epoch: 19 loss: 0.6590 accuracy: 0.6689 val_loss: 0.5688 val_accuracy: 0.7044
Epoch: 20 loss: 0.6640 accuracy: 0.6722 val_loss: 0.5698 val_accuracy: 0.7143
Job ended!
