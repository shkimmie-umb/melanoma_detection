Fri 01 Mar 2024 06:28:39 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['PAD_UFES_20']
IMG_SIZE: [150, 150]
CLASSIFIER: MobileNetV2
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
mobilenetv2_1.00_224 (Functi (None, 1280)              2257984   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 3,048,770
Trainable params: 789,250
Non-trainable params: 2,259,520
_________________________________________________________________
Fitting PAD_UFES_20_aug_MobileNetV2_150h_150w_None model...
model_name: PAD_UFES_20_aug_MobileNetV2_150h_150w_None
Epoch: 1 loss: 0.7689 accuracy: 0.6448 val_loss: 0.4062 val_accuracy: 0.8674
Epoch: 2 loss: 0.5919 accuracy: 0.7263 val_loss: 0.3419 val_accuracy: 0.9087
Epoch: 3 loss: 0.4838 accuracy: 0.7864 val_loss: 0.4146 val_accuracy: 0.8630
Epoch: 4 loss: 0.4259 accuracy: 0.8148 val_loss: 0.2787 val_accuracy: 0.9087
Epoch: 5 loss: 0.3687 accuracy: 0.8550 val_loss: 0.2542 val_accuracy: 0.9196
Epoch: 6 loss: 0.3157 accuracy: 0.8830 val_loss: 0.2440 val_accuracy: 0.9217
Epoch: 7 loss: 0.2784 accuracy: 0.9021 val_loss: 0.1990 val_accuracy: 0.9609
Epoch: 8 loss: 0.2467 accuracy: 0.9111 val_loss: 0.1986 val_accuracy: 0.9413
Epoch: 9 loss: 0.2101 accuracy: 0.9341 val_loss: 0.1683 val_accuracy: 0.9543
Epoch: 10 loss: 0.1993 accuracy: 0.9333 val_loss: 0.1913 val_accuracy: 0.9413
Epoch: 11 loss: 0.1837 accuracy: 0.9404 val_loss: 0.1639 val_accuracy: 0.9565
Epoch: 12 loss: 0.1652 accuracy: 0.9458 val_loss: 0.1351 val_accuracy: 0.9609
Epoch: 13 loss: 0.1316 accuracy: 0.9591 val_loss: 0.1475 val_accuracy: 0.9652
Epoch: 14 loss: 0.1322 accuracy: 0.9575 val_loss: 0.1303 val_accuracy: 0.9652
Epoch: 15 loss: 0.1168 accuracy: 0.9626 val_loss: 0.1291 val_accuracy: 0.9652
Epoch: 16 loss: 0.1151 accuracy: 0.9669 val_loss: 0.1367 val_accuracy: 0.9500
Epoch: 17 loss: 0.0985 accuracy: 0.9692 val_loss: 0.1284 val_accuracy: 0.9522
Epoch: 18 loss: 0.0993 accuracy: 0.9735 val_loss: 0.1003 val_accuracy: 0.9696
Epoch: 19 loss: 0.0868 accuracy: 0.9719 val_loss: 0.0921 val_accuracy: 0.9717
Epoch: 20 loss: 0.0783 accuracy: 0.9770 val_loss: 0.1034 val_accuracy: 0.9652
Job ended!
