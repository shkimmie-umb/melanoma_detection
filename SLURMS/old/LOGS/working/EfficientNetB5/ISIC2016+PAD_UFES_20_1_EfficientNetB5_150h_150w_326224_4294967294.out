Fri 01 Mar 2024 10:34:12 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'PAD_UFES_20']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB5
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb5 (Functional)  (None, 2048)              28513527  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 29,697,529
Trainable params: 1,182,466
Non-trainable params: 28,515,063
_________________________________________________________________
Fitting ISIC2016+PAD_UFES_20_aug_EfficientNetB5_150h_150w_None model...
model_name: ISIC2016+PAD_UFES_20_aug_EfficientNetB5_150h_150w_None
Epoch: 1 loss: 0.7717 accuracy: 0.6680 val_loss: 0.2869 val_accuracy: 0.9281
Epoch: 2 loss: 0.5899 accuracy: 0.7386 val_loss: 0.2439 val_accuracy: 0.9297
Epoch: 3 loss: 0.5118 accuracy: 0.7773 val_loss: 0.2363 val_accuracy: 0.9250
Epoch: 4 loss: 0.4473 accuracy: 0.8075 val_loss: 0.2335 val_accuracy: 0.9219
Epoch: 5 loss: 0.4314 accuracy: 0.8163 val_loss: 0.2425 val_accuracy: 0.9125
Epoch: 6 loss: 0.3694 accuracy: 0.8437 val_loss: 0.2225 val_accuracy: 0.9266
Epoch: 7 loss: 0.3717 accuracy: 0.8360 val_loss: 0.2280 val_accuracy: 0.9219
Epoch: 8 loss: 0.3416 accuracy: 0.8653 val_loss: 0.2216 val_accuracy: 0.9250
Epoch: 9 loss: 0.3513 accuracy: 0.8485 val_loss: 0.2050 val_accuracy: 0.9312
Epoch: 10 loss: 0.3297 accuracy: 0.8539 val_loss: 0.2109 val_accuracy: 0.9250
Epoch: 11 loss: 0.3174 accuracy: 0.8656 val_loss: 0.2232 val_accuracy: 0.9187
Epoch: 12 loss: 0.3205 accuracy: 0.8693 val_loss: 0.2165 val_accuracy: 0.9250
Epoch: 13 loss: 0.3044 accuracy: 0.8664 val_loss: 0.2191 val_accuracy: 0.9281
Epoch: 14 loss: 0.2869 accuracy: 0.8760 val_loss: 0.2110 val_accuracy: 0.9281
Epoch: 15 loss: 0.2784 accuracy: 0.8779 val_loss: 0.2194 val_accuracy: 0.9297
Epoch: 16 loss: 0.2642 accuracy: 0.8888 val_loss: 0.2153 val_accuracy: 0.9172
Epoch: 17 loss: 0.2728 accuracy: 0.8848 val_loss: 0.2067 val_accuracy: 0.9219
Epoch: 18 loss: 0.2700 accuracy: 0.8829 val_loss: 0.2222 val_accuracy: 0.9312
Epoch: 19 loss: 0.2464 accuracy: 0.8923 val_loss: 0.2411 val_accuracy: 0.9297
Epoch: 20 loss: 0.2375 accuracy: 0.8981 val_loss: 0.2183 val_accuracy: 0.9156
Job ended!
