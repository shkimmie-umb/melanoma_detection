Mon 06 May 2024 09:30:57 PM EDT
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'ISIC2017', 'ISIC2018']
IMG_SIZE: [384, 384]
CLASSIFIER: EfficientNetB4
JOB_INDEX: None
Start training augmented images
Combining...
Combining 1th db out of 3 dbs
Combining 2th db out of 3 dbs
Combining 3th db out of 3 dbs
Stacking data
Combining complete
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb4 (Functional)  (None, 1792)              17673823  
_________________________________________________________________
dense (Dense)                (None, 512)               918016    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 18,726,753
Trainable params: 1,051,394
Non-trainable params: 17,675,359
_________________________________________________________________
Fitting ISIC2016+ISIC2017+ISIC2018_aug_EfficientNetB4_384h_384w_None model...
model_name: ISIC2016+ISIC2017+ISIC2018_aug_EfficientNetB4_384h_384w_None
Epoch: 1 loss: 1.2982 accuracy: 0.5457 val_loss: 0.8704 val_accuracy: 0.8413
Epoch: 2 loss: 1.1051 accuracy: 0.6187 val_loss: 0.8225 val_accuracy: 0.8413
Epoch: 3 loss: 1.0448 accuracy: 0.6521 val_loss: 0.8144 val_accuracy: 0.8413
Epoch: 4 loss: 1.0108 accuracy: 0.6671 val_loss: 0.8044 val_accuracy: 0.8413
Epoch: 5 loss: 0.9938 accuracy: 0.6692 val_loss: 0.7645 val_accuracy: 0.8413
Epoch: 6 loss: 0.9656 accuracy: 0.6758 val_loss: 0.7518 val_accuracy: 0.8413
Epoch: 7 loss: 0.9416 accuracy: 0.6876 val_loss: 0.7546 val_accuracy: 0.8413
Epoch: 8 loss: 0.9163 accuracy: 0.6944 val_loss: 0.7206 val_accuracy: 0.8413
Epoch: 9 loss: 0.9064 accuracy: 0.6839 val_loss: 0.7686 val_accuracy: 0.8413
Epoch: 10 loss: 0.8779 accuracy: 0.6954 val_loss: 0.8181 val_accuracy: 0.8413
Epoch: 11 loss: 0.8618 accuracy: 0.7001 val_loss: 0.7971 val_accuracy: 0.8413
Epoch: 12 loss: 0.8446 accuracy: 0.6955 val_loss: 0.6711 val_accuracy: 0.8413
Epoch: 13 loss: 0.8291 accuracy: 0.6963 val_loss: 0.6660 val_accuracy: 0.8413
Epoch: 14 loss: 0.8129 accuracy: 0.6986 val_loss: 0.6709 val_accuracy: 0.8413
Epoch: 15 loss: 0.7925 accuracy: 0.7025 val_loss: 0.6313 val_accuracy: 0.8413
Epoch: 16 loss: 0.7752 accuracy: 0.7087 val_loss: 0.7044 val_accuracy: 0.8413
Epoch: 17 loss: 0.7688 accuracy: 0.6971 val_loss: 0.6535 val_accuracy: 0.8413
Epoch: 18 loss: 0.7518 accuracy: 0.6999 val_loss: 0.6009 val_accuracy: 0.8413
Epoch: 19 loss: 0.7309 accuracy: 0.7068 val_loss: 0.6505 val_accuracy: 0.8413
Epoch: 20 loss: 0.7184 accuracy: 0.7095 val_loss: 0.6287 val_accuracy: 0.8413
Epoch: 21 loss: 0.7135 accuracy: 0.7029 val_loss: 0.6045 val_accuracy: 0.8413
Epoch: 22 loss: 0.7004 accuracy: 0.7066 val_loss: 0.5815 val_accuracy: 0.8413
Epoch: 23 loss: 0.6932 accuracy: 0.7025 val_loss: 0.5430 val_accuracy: 0.8413
Epoch: 24 loss: 0.6892 accuracy: 0.6990 val_loss: 0.5839 val_accuracy: 0.8413
Epoch: 25 loss: 0.6757 accuracy: 0.7079 val_loss: 0.5218 val_accuracy: 0.8413
Epoch: 26 loss: 0.6661 accuracy: 0.7100 val_loss: 0.5920 val_accuracy: 0.8413
Epoch: 27 loss: 0.6705 accuracy: 0.7004 val_loss: 0.5658 val_accuracy: 0.8413
Epoch: 28 loss: 0.6642 accuracy: 0.7023 val_loss: 0.4868 val_accuracy: 0.8413
Epoch: 29 loss: 0.6561 accuracy: 0.7086 val_loss: 0.5257 val_accuracy: 0.8413
Epoch: 30 loss: 0.6540 accuracy: 0.7062 val_loss: 0.4913 val_accuracy: 0.8413
Epoch: 31 loss: 0.6532 accuracy: 0.7025 val_loss: 0.5736 val_accuracy: 0.8413
Epoch: 32 loss: 0.6473 accuracy: 0.7087 val_loss: 0.5073 val_accuracy: 0.8413
Epoch: 33 loss: 0.6437 accuracy: 0.7079 val_loss: 0.5719 val_accuracy: 0.8413

Epoch 00033: ReduceLROnPlateau reducing learning rate to 7.999999797903001e-05.
Epoch: 34 loss: 0.6414 accuracy: 0.7087 val_loss: 0.5014 val_accuracy: 0.8413
Epoch: 35 loss: 0.6448 accuracy: 0.7023 val_loss: 0.5068 val_accuracy: 0.8413
Epoch: 36 loss: 0.6330 accuracy: 0.7144 val_loss: 0.5320 val_accuracy: 0.8413
Epoch: 37 loss: 0.6430 accuracy: 0.7023 val_loss: 0.4829 val_accuracy: 0.8413
Epoch: 38 loss: 0.6374 accuracy: 0.7071 val_loss: 0.5343 val_accuracy: 0.8413
Epoch: 39 loss: 0.6373 accuracy: 0.7046 val_loss: 0.5492 val_accuracy: 0.8413
Epoch: 40 loss: 0.6336 accuracy: 0.7059 val_loss: 0.5132 val_accuracy: 0.8413
Epoch: 41 loss: 0.6306 accuracy: 0.7084 val_loss: 0.4904 val_accuracy: 0.8413
Epoch: 42 loss: 0.6308 accuracy: 0.7083 val_loss: 0.6156 val_accuracy: 0.8413

Epoch 00042: ReduceLROnPlateau reducing learning rate to 6.399999838322402e-05.
Epoch: 43 loss: 0.6348 accuracy: 0.7033 val_loss: 0.5514 val_accuracy: 0.8413
Epoch: 44 loss: 0.6234 accuracy: 0.7143 val_loss: 0.5152 val_accuracy: 0.8413
Epoch: 45 loss: 0.6280 accuracy: 0.7075 val_loss: 0.5100 val_accuracy: 0.8413
Epoch: 46 loss: 0.6302 accuracy: 0.7043 val_loss: 0.5243 val_accuracy: 0.8413
Epoch: 47 loss: 0.6279 accuracy: 0.7081 val_loss: 0.4955 val_accuracy: 0.8413

Epoch 00047: ReduceLROnPlateau reducing learning rate to 5.119999987073243e-05.
End of augmented training
Finish
Job ended!
