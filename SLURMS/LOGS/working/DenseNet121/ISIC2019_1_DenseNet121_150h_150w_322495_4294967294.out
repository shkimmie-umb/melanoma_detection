Tue 27 Feb 2024 01:23:14 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2019']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet121
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet121 (Functional)     (None, 1024)              7037504   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,697,218
Trainable params: 658,178
Non-trainable params: 7,039,040
_________________________________________________________________
Fitting ISIC2019_aug_DenseNet121_150h_150w_None model...
model_name: ISIC2019_aug_DenseNet121_150h_150w_None
Epoch: 1 loss: 0.7318 accuracy: 0.6243 val_loss: 0.5282 val_accuracy: 0.7486
Epoch: 2 loss: 0.6495 accuracy: 0.6612 val_loss: 0.4325 val_accuracy: 0.8234
Epoch: 3 loss: 0.6216 accuracy: 0.6754 val_loss: 0.5382 val_accuracy: 0.7125
Epoch: 4 loss: 0.5950 accuracy: 0.6894 val_loss: 0.4928 val_accuracy: 0.7819
Epoch: 5 loss: 0.5754 accuracy: 0.7080 val_loss: 0.4673 val_accuracy: 0.7993
Epoch: 6 loss: 0.5644 accuracy: 0.7131 val_loss: 0.4479 val_accuracy: 0.8236
Epoch: 7 loss: 0.5563 accuracy: 0.7161 val_loss: 0.4642 val_accuracy: 0.8137
Epoch: 8 loss: 0.5485 accuracy: 0.7251 val_loss: 0.4758 val_accuracy: 0.8169
Epoch: 9 loss: 0.5378 accuracy: 0.7330 val_loss: 0.4162 val_accuracy: 0.8263
Epoch: 10 loss: 0.5327 accuracy: 0.7363 val_loss: 0.4401 val_accuracy: 0.8149
Epoch: 11 loss: 0.5298 accuracy: 0.7393 val_loss: 0.4358 val_accuracy: 0.8145
Epoch: 12 loss: 0.5217 accuracy: 0.7414 val_loss: 0.4158 val_accuracy: 0.8218
Epoch: 13 loss: 0.5197 accuracy: 0.7431 val_loss: 0.4398 val_accuracy: 0.8129
Epoch: 14 loss: 0.5143 accuracy: 0.7497 val_loss: 0.4181 val_accuracy: 0.8251
Epoch: 15 loss: 0.5122 accuracy: 0.7545 val_loss: 0.4187 val_accuracy: 0.8238
Epoch: 16 loss: 0.5124 accuracy: 0.7523 val_loss: 0.4080 val_accuracy: 0.8338
Epoch: 17 loss: 0.5079 accuracy: 0.7545 val_loss: 0.4063 val_accuracy: 0.8330
Epoch: 18 loss: 0.5063 accuracy: 0.7561 val_loss: 0.4442 val_accuracy: 0.7997
Epoch: 19 loss: 0.5037 accuracy: 0.7594 val_loss: 0.4339 val_accuracy: 0.8149
Epoch: 20 loss: 0.5031 accuracy: 0.7612 val_loss: 0.4232 val_accuracy: 0.8196
Job ended!
