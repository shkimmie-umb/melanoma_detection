Fri 01 Mar 2024 05:52:03 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['_7_point_criteria']
IMG_SIZE: [150, 150]
CLASSIFIER: MobileNetV2
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
mobilenetv2_1.00_224 (Functi (None, 1280)              2257984   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 3,048,770
Trainable params: 789,250
Non-trainable params: 2,259,520
_________________________________________________________________
Fitting _7_point_criteria_aug_MobileNetV2_150h_150w_None model...
model_name: _7_point_criteria_aug_MobileNetV2_150h_150w_None
Epoch: 1 loss: 0.8380 accuracy: 0.6073 val_loss: 0.6215 val_accuracy: 0.6798
Epoch: 2 loss: 0.6155 accuracy: 0.7354 val_loss: 0.5960 val_accuracy: 0.7143
Epoch: 3 loss: 0.5032 accuracy: 0.7714 val_loss: 0.5748 val_accuracy: 0.6995
Epoch: 4 loss: 0.4285 accuracy: 0.8070 val_loss: 0.5711 val_accuracy: 0.7094
Epoch: 5 loss: 0.3550 accuracy: 0.8502 val_loss: 0.5617 val_accuracy: 0.7241
Epoch: 6 loss: 0.3593 accuracy: 0.8319 val_loss: 0.5568 val_accuracy: 0.7291
Epoch: 7 loss: 0.3397 accuracy: 0.8369 val_loss: 0.5595 val_accuracy: 0.7340
Epoch: 8 loss: 0.3012 accuracy: 0.8702 val_loss: 0.5522 val_accuracy: 0.7291
Epoch: 9 loss: 0.2704 accuracy: 0.8802 val_loss: 0.5530 val_accuracy: 0.7340
Epoch: 10 loss: 0.2333 accuracy: 0.9068 val_loss: 0.5679 val_accuracy: 0.7291
Epoch: 11 loss: 0.2129 accuracy: 0.9218 val_loss: 0.5755 val_accuracy: 0.7389
Epoch: 12 loss: 0.1882 accuracy: 0.9368 val_loss: 0.5768 val_accuracy: 0.7488
Epoch: 13 loss: 0.1949 accuracy: 0.9201 val_loss: 0.5880 val_accuracy: 0.7340
Epoch: 14 loss: 0.1982 accuracy: 0.9260 val_loss: 0.5850 val_accuracy: 0.7340
Epoch: 15 loss: 0.1440 accuracy: 0.9468 val_loss: 0.5909 val_accuracy: 0.7340
Epoch: 16 loss: 0.1453 accuracy: 0.9517 val_loss: 0.6200 val_accuracy: 0.7438
Epoch: 17 loss: 0.1134 accuracy: 0.9584 val_loss: 0.6323 val_accuracy: 0.7438
Epoch: 18 loss: 0.1178 accuracy: 0.9634 val_loss: 0.6313 val_accuracy: 0.7438
Epoch: 19 loss: 0.1283 accuracy: 0.9584 val_loss: 0.6257 val_accuracy: 0.7340
Epoch: 20 loss: 0.1026 accuracy: 0.9717 val_loss: 0.6286 val_accuracy: 0.7389
Job ended!
