Thu 29 Feb 2024 11:31:41 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['_7_point_criteria']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet121
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet121 (Functional)     (None, 1024)              7037504   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,697,218
Trainable params: 658,178
Non-trainable params: 7,039,040
_________________________________________________________________
Fitting _7_point_criteria_aug_DenseNet121_150h_150w_None model...
model_name: _7_point_criteria_aug_DenseNet121_150h_150w_None
Epoch: 1 loss: 0.9561 accuracy: 0.5491 val_loss: 0.6906 val_accuracy: 0.6404
Epoch: 2 loss: 0.7074 accuracy: 0.6755 val_loss: 0.6716 val_accuracy: 0.6847
Epoch: 3 loss: 0.6386 accuracy: 0.6839 val_loss: 0.6515 val_accuracy: 0.6749
Epoch: 4 loss: 0.5652 accuracy: 0.7354 val_loss: 0.6433 val_accuracy: 0.6897
Epoch: 5 loss: 0.4732 accuracy: 0.7920 val_loss: 0.6372 val_accuracy: 0.7192
Epoch: 6 loss: 0.4422 accuracy: 0.8070 val_loss: 0.6271 val_accuracy: 0.7291
Epoch: 7 loss: 0.4318 accuracy: 0.8037 val_loss: 0.6204 val_accuracy: 0.7488
Epoch: 8 loss: 0.3639 accuracy: 0.8419 val_loss: 0.6154 val_accuracy: 0.7438
Epoch: 9 loss: 0.3761 accuracy: 0.8220 val_loss: 0.5956 val_accuracy: 0.7389
Epoch: 10 loss: 0.3553 accuracy: 0.8536 val_loss: 0.6132 val_accuracy: 0.7438
Epoch: 11 loss: 0.3270 accuracy: 0.8552 val_loss: 0.6027 val_accuracy: 0.7241
Epoch: 12 loss: 0.2990 accuracy: 0.8835 val_loss: 0.5939 val_accuracy: 0.7192
Epoch: 13 loss: 0.2419 accuracy: 0.9035 val_loss: 0.5949 val_accuracy: 0.7291
Epoch: 14 loss: 0.2637 accuracy: 0.8852 val_loss: 0.5979 val_accuracy: 0.7438
Epoch: 15 loss: 0.2632 accuracy: 0.9002 val_loss: 0.6079 val_accuracy: 0.7488
Epoch: 16 loss: 0.2035 accuracy: 0.9201 val_loss: 0.6151 val_accuracy: 0.7488
Epoch: 17 loss: 0.1984 accuracy: 0.9285 val_loss: 0.6107 val_accuracy: 0.7438
Epoch: 18 loss: 0.2003 accuracy: 0.9285 val_loss: 0.6155 val_accuracy: 0.7438
Epoch: 19 loss: 0.1751 accuracy: 0.9301 val_loss: 0.6081 val_accuracy: 0.7438
Epoch: 20 loss: 0.1689 accuracy: 0.9318 val_loss: 0.6276 val_accuracy: 0.7488
Job ended!
