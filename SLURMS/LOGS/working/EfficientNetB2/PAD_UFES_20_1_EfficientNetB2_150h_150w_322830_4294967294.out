Tue 27 Feb 2024 08:37:07 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['PAD_UFES_20']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB2
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb2 (Functional)  (None, 1408)              7768569   
_________________________________________________________________
dense (Dense)                (None, 512)               721408    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 8,624,891
Trainable params: 854,786
Non-trainable params: 7,770,105
_________________________________________________________________
Fitting PAD_UFES_20_aug_EfficientNetB2_150h_150w_None model...
model_name: PAD_UFES_20_aug_EfficientNetB2_150h_150w_None
Epoch: 1 loss: 0.6635 accuracy: 0.6269 val_loss: 0.5916 val_accuracy: 0.9804
Epoch: 2 loss: 0.6042 accuracy: 0.7762 val_loss: 0.5014 val_accuracy: 0.9804
Epoch: 3 loss: 0.5495 accuracy: 0.8257 val_loss: 0.4231 val_accuracy: 0.9804
Epoch: 4 loss: 0.5102 accuracy: 0.8292 val_loss: 0.3567 val_accuracy: 0.9804
Epoch: 5 loss: 0.4862 accuracy: 0.8281 val_loss: 0.3149 val_accuracy: 0.9804
Epoch: 6 loss: 0.4673 accuracy: 0.8300 val_loss: 0.2717 val_accuracy: 0.9804
Epoch: 7 loss: 0.4630 accuracy: 0.8288 val_loss: 0.2548 val_accuracy: 0.9804
Epoch: 8 loss: 0.4598 accuracy: 0.8288 val_loss: 0.2475 val_accuracy: 0.9804
Epoch: 9 loss: 0.4613 accuracy: 0.8285 val_loss: 0.2423 val_accuracy: 0.9804
Epoch: 10 loss: 0.4600 accuracy: 0.8288 val_loss: 0.2339 val_accuracy: 0.9804
Epoch: 11 loss: 0.4572 accuracy: 0.8292 val_loss: 0.2088 val_accuracy: 0.9804
Epoch: 12 loss: 0.4575 accuracy: 0.8288 val_loss: 0.2080 val_accuracy: 0.9804
Epoch: 13 loss: 0.4588 accuracy: 0.8287 val_loss: 0.2105 val_accuracy: 0.9804
Epoch: 14 loss: 0.4568 accuracy: 0.8300 val_loss: 0.2092 val_accuracy: 0.9804
Epoch: 15 loss: 0.4579 accuracy: 0.8288 val_loss: 0.2218 val_accuracy: 0.9804
Epoch: 16 loss: 0.4540 accuracy: 0.8316 val_loss: 0.2194 val_accuracy: 0.9804
Epoch: 17 loss: 0.4575 accuracy: 0.8292 val_loss: 0.2208 val_accuracy: 0.9804
Epoch: 18 loss: 0.4570 accuracy: 0.8296 val_loss: 0.2185 val_accuracy: 0.9804
Epoch: 19 loss: 0.4570 accuracy: 0.8292 val_loss: 0.2212 val_accuracy: 0.9804
Epoch: 20 loss: 0.4578 accuracy: 0.8292 val_loss: 0.2196 val_accuracy: 0.9804
Job ended!
