Mon 26 Feb 2024 08:39:13 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID:  1
DB: ['ISIC2016']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet121
SELF_AUG: 0
JOB_INDEX: 1
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet121 (Functional)     (None, 1024)              7037504   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,697,218
Trainable params: 658,178
Non-trainable params: 7,039,040
_________________________________________________________________
Fitting ISIC2016_noaug_DenseNet121_150h_150w_1 model...
model_name: ISIC2016_noaug_DenseNet121_150h_150w_1
Epoch: 1 loss: 1.0317 accuracy: 0.5044 val_loss: 0.6777 val_accuracy: 0.8000
Epoch: 2 loss: 0.9117 accuracy: 0.5218 val_loss: 0.6507 val_accuracy: 0.8000
Epoch: 3 loss: 0.8797 accuracy: 0.5247 val_loss: 0.6343 val_accuracy: 0.8000
Epoch: 4 loss: 0.8724 accuracy: 0.5355 val_loss: 0.6205 val_accuracy: 0.8000
Epoch: 5 loss: 0.8090 accuracy: 0.5422 val_loss: 0.6127 val_accuracy: 0.8000
Epoch: 6 loss: 0.7701 accuracy: 0.5654 val_loss: 0.5909 val_accuracy: 0.8000
Epoch: 7 loss: 0.7502 accuracy: 0.5727 val_loss: 0.5802 val_accuracy: 0.8000
Epoch: 8 loss: 0.7679 accuracy: 0.5872 val_loss: 0.5675 val_accuracy: 0.8000
Epoch: 9 loss: 0.7500 accuracy: 0.5901 val_loss: 0.5580 val_accuracy: 0.8000
Epoch: 10 loss: 0.7442 accuracy: 0.6061 val_loss: 0.5479 val_accuracy: 0.8000
Epoch: 11 loss: 0.7287 accuracy: 0.6076 val_loss: 0.5314 val_accuracy: 0.8000
Epoch: 12 loss: 0.7033 accuracy: 0.6235 val_loss: 0.5302 val_accuracy: 0.8000
Epoch: 13 loss: 0.6763 accuracy: 0.6410 val_loss: 0.5240 val_accuracy: 0.8000
Epoch: 14 loss: 0.6683 accuracy: 0.6584 val_loss: 0.5085 val_accuracy: 0.8000
Epoch: 15 loss: 0.6831 accuracy: 0.6497 val_loss: 0.5117 val_accuracy: 0.8000
Epoch: 16 loss: 0.6801 accuracy: 0.6424 val_loss: 0.5063 val_accuracy: 0.8000
Epoch: 17 loss: 0.6233 accuracy: 0.6744 val_loss: 0.5049 val_accuracy: 0.8000
Epoch: 18 loss: 0.6420 accuracy: 0.6730 val_loss: 0.4964 val_accuracy: 0.8000
Epoch: 19 loss: 0.6321 accuracy: 0.6759 val_loss: 0.5016 val_accuracy: 0.8000
Epoch: 20 loss: 0.6281 accuracy: 0.6962 val_loss: 0.5006 val_accuracy: 0.8000
Job ended!
