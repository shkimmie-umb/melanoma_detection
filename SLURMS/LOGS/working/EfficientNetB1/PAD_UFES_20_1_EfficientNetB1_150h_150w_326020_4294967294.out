Fri 01 Mar 2024 04:09:24 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['PAD_UFES_20']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB1
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb1 (Functional)  (None, 1280)              6575239   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,366,025
Trainable params: 789,250
Non-trainable params: 6,576,775
_________________________________________________________________
Fitting PAD_UFES_20_aug_EfficientNetB1_150h_150w_None model...
model_name: PAD_UFES_20_aug_EfficientNetB1_150h_150w_None
Epoch: 1 loss: 0.7983 accuracy: 0.6542 val_loss: 0.3515 val_accuracy: 0.9652
Epoch: 2 loss: 0.6334 accuracy: 0.7267 val_loss: 0.2469 val_accuracy: 0.9696
Epoch: 3 loss: 0.5204 accuracy: 0.7715 val_loss: 0.2098 val_accuracy: 0.9696
Epoch: 4 loss: 0.4496 accuracy: 0.8109 val_loss: 0.2033 val_accuracy: 0.9739
Epoch: 5 loss: 0.4088 accuracy: 0.8378 val_loss: 0.1813 val_accuracy: 0.9717
Epoch: 6 loss: 0.3590 accuracy: 0.8593 val_loss: 0.1463 val_accuracy: 0.9696
Epoch: 7 loss: 0.3309 accuracy: 0.8725 val_loss: 0.1651 val_accuracy: 0.9609
Epoch: 8 loss: 0.2904 accuracy: 0.8827 val_loss: 0.1502 val_accuracy: 0.9630
Epoch: 9 loss: 0.2825 accuracy: 0.8865 val_loss: 0.1285 val_accuracy: 0.9630
Epoch: 10 loss: 0.2476 accuracy: 0.9123 val_loss: 0.1245 val_accuracy: 0.9696
Epoch: 11 loss: 0.2363 accuracy: 0.9123 val_loss: 0.1420 val_accuracy: 0.9652
Epoch: 12 loss: 0.2108 accuracy: 0.9224 val_loss: 0.1067 val_accuracy: 0.9739
Epoch: 13 loss: 0.1974 accuracy: 0.9267 val_loss: 0.1089 val_accuracy: 0.9717
Epoch: 14 loss: 0.2022 accuracy: 0.9236 val_loss: 0.1072 val_accuracy: 0.9761
Epoch: 15 loss: 0.1769 accuracy: 0.9345 val_loss: 0.1069 val_accuracy: 0.9717
Epoch: 16 loss: 0.1785 accuracy: 0.9357 val_loss: 0.0899 val_accuracy: 0.9804
Epoch: 17 loss: 0.1535 accuracy: 0.9439 val_loss: 0.0954 val_accuracy: 0.9761
Epoch: 18 loss: 0.1544 accuracy: 0.9466 val_loss: 0.0856 val_accuracy: 0.9826
Epoch: 19 loss: 0.1606 accuracy: 0.9419 val_loss: 0.0894 val_accuracy: 0.9783
Epoch: 20 loss: 0.1483 accuracy: 0.9431 val_loss: 0.0901 val_accuracy: 0.9761
Job ended!
