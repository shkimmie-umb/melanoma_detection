Tue 27 Feb 2024 01:44:50 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['_7_point_criteria']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet121
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet121 (Functional)     (None, 1024)              7037504   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,697,218
Trainable params: 658,178
Non-trainable params: 7,039,040
_________________________________________________________________
Fitting _7_point_criteria_aug_DenseNet121_150h_150w_None model...
model_name: _7_point_criteria_aug_DenseNet121_150h_150w_None
Epoch: 1 loss: 0.9118 accuracy: 0.5458 val_loss: 0.6761 val_accuracy: 0.7094
Epoch: 2 loss: 0.8550 accuracy: 0.5857 val_loss: 0.6913 val_accuracy: 0.5862
Epoch: 3 loss: 0.8118 accuracy: 0.5940 val_loss: 0.6866 val_accuracy: 0.6404
Epoch: 4 loss: 0.7825 accuracy: 0.6306 val_loss: 0.6838 val_accuracy: 0.6502
Epoch: 5 loss: 0.7211 accuracy: 0.6656 val_loss: 0.6951 val_accuracy: 0.5025
Epoch: 6 loss: 0.7585 accuracy: 0.6456 val_loss: 0.6929 val_accuracy: 0.5320
Epoch: 7 loss: 0.6963 accuracy: 0.6489 val_loss: 0.6863 val_accuracy: 0.5911
Epoch: 8 loss: 0.7138 accuracy: 0.6506 val_loss: 0.6839 val_accuracy: 0.5665
Epoch: 9 loss: 0.7135 accuracy: 0.6622 val_loss: 0.6735 val_accuracy: 0.6404
Epoch: 10 loss: 0.6955 accuracy: 0.6589 val_loss: 0.6669 val_accuracy: 0.6749
Epoch: 11 loss: 0.7028 accuracy: 0.6739 val_loss: 0.6651 val_accuracy: 0.6749
Epoch: 12 loss: 0.6861 accuracy: 0.6689 val_loss: 0.6790 val_accuracy: 0.5911
Epoch: 13 loss: 0.7029 accuracy: 0.6689 val_loss: 0.6927 val_accuracy: 0.4975
Epoch: 14 loss: 0.6365 accuracy: 0.6855 val_loss: 0.6974 val_accuracy: 0.4433
Epoch: 15 loss: 0.6805 accuracy: 0.6506 val_loss: 0.6815 val_accuracy: 0.5714
Epoch: 16 loss: 0.6778 accuracy: 0.6672 val_loss: 0.6616 val_accuracy: 0.6305
Epoch: 17 loss: 0.7055 accuracy: 0.6473 val_loss: 0.6615 val_accuracy: 0.6108
Epoch: 18 loss: 0.6816 accuracy: 0.6855 val_loss: 0.6427 val_accuracy: 0.6256
Epoch: 19 loss: 0.6072 accuracy: 0.6972 val_loss: 0.6160 val_accuracy: 0.6897
Epoch: 20 loss: 0.6852 accuracy: 0.6905 val_loss: 0.6097 val_accuracy: 0.7192
Job ended!
