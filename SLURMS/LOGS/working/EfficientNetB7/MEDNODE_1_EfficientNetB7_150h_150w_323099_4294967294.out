Tue 27 Feb 2024 08:27:05 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['MEDNODE']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB7
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb7 (Functional)  (None, 2560)              64097687  
_________________________________________________________________
dense (Dense)                (None, 512)               1311232   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 65,543,833
Trainable params: 1,444,610
Non-trainable params: 64,099,223
_________________________________________________________________
Fitting MEDNODE_aug_EfficientNetB7_150h_150w_None model...
model_name: MEDNODE_aug_EfficientNetB7_150h_150w_None
Epoch: 1 loss: 0.6912 accuracy: 0.5134 val_loss: 0.6943 val_accuracy: 0.4118
Epoch: 2 loss: 0.6967 accuracy: 0.4732 val_loss: 0.6958 val_accuracy: 0.4118
Epoch: 3 loss: 0.6998 accuracy: 0.5312 val_loss: 0.6971 val_accuracy: 0.4118
Epoch: 4 loss: 0.6791 accuracy: 0.5714 val_loss: 0.6983 val_accuracy: 0.4118
Epoch: 5 loss: 0.6885 accuracy: 0.5223 val_loss: 0.6993 val_accuracy: 0.4118
Epoch: 6 loss: 0.6870 accuracy: 0.5580 val_loss: 0.7004 val_accuracy: 0.4118
Epoch: 7 loss: 0.7131 accuracy: 0.5045 val_loss: 0.7013 val_accuracy: 0.4118
Epoch: 8 loss: 0.6558 accuracy: 0.6473 val_loss: 0.7025 val_accuracy: 0.4118
Epoch: 9 loss: 0.6943 accuracy: 0.5357 val_loss: 0.7035 val_accuracy: 0.4118
Epoch: 10 loss: 0.6920 accuracy: 0.5223 val_loss: 0.7043 val_accuracy: 0.4118
Epoch: 11 loss: 0.6770 accuracy: 0.5312 val_loss: 0.7055 val_accuracy: 0.4118
Epoch: 12 loss: 0.6762 accuracy: 0.5759 val_loss: 0.7066 val_accuracy: 0.4118
Epoch: 13 loss: 0.6734 accuracy: 0.5848 val_loss: 0.7076 val_accuracy: 0.4118
Epoch: 14 loss: 0.6770 accuracy: 0.5402 val_loss: 0.7087 val_accuracy: 0.4118
Epoch: 15 loss: 0.6627 accuracy: 0.6161 val_loss: 0.7096 val_accuracy: 0.4118
Epoch: 16 loss: 0.6532 accuracy: 0.6116 val_loss: 0.7106 val_accuracy: 0.4118
Epoch: 17 loss: 0.6594 accuracy: 0.6071 val_loss: 0.7115 val_accuracy: 0.4118
Epoch: 18 loss: 0.6739 accuracy: 0.5491 val_loss: 0.7125 val_accuracy: 0.4118
Epoch: 19 loss: 0.6682 accuracy: 0.6027 val_loss: 0.7134 val_accuracy: 0.4118
Epoch: 20 loss: 0.6788 accuracy: 0.5402 val_loss: 0.7142 val_accuracy: 0.4118
Job ended!
