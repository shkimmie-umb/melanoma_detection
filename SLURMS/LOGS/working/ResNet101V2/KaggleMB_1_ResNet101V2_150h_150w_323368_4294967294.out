Wed 28 Feb 2024 02:45:34 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['KaggleMB']
IMG_SIZE: [150, 150]
CLASSIFIER: ResNet101V2
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
resnet101v2 (Functional)     (None, 2048)              42626560  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 43,810,562
Trainable params: 1,182,466
Non-trainable params: 42,628,096
_________________________________________________________________
Fitting KaggleMB_aug_ResNet101V2_150h_150w_None model...
model_name: KaggleMB_aug_ResNet101V2_150h_150w_None
Epoch: 1 loss: 0.7217 accuracy: 0.6552 val_loss: 0.6700 val_accuracy: 0.6250
Epoch: 2 loss: 0.6102 accuracy: 0.7177 val_loss: 0.6375 val_accuracy: 0.7841
Epoch: 3 loss: 0.5494 accuracy: 0.7442 val_loss: 0.6275 val_accuracy: 0.6553
Epoch: 4 loss: 0.5452 accuracy: 0.7465 val_loss: 0.7056 val_accuracy: 0.4962
Epoch: 5 loss: 0.5372 accuracy: 0.7665 val_loss: 0.5875 val_accuracy: 0.6894
Epoch: 6 loss: 0.4936 accuracy: 0.7805 val_loss: 0.4712 val_accuracy: 0.7898
Epoch: 7 loss: 0.4841 accuracy: 0.7865 val_loss: 0.4192 val_accuracy: 0.8163
Epoch: 8 loss: 0.4919 accuracy: 0.7870 val_loss: 0.6288 val_accuracy: 0.7254
Epoch: 9 loss: 0.4707 accuracy: 0.7953 val_loss: 0.9237 val_accuracy: 0.5890
Epoch: 10 loss: 0.4693 accuracy: 0.7939 val_loss: 0.4498 val_accuracy: 0.7860
Epoch: 11 loss: 0.4673 accuracy: 0.7993 val_loss: 0.5705 val_accuracy: 0.7405
Epoch: 12 loss: 0.4600 accuracy: 0.8027 val_loss: 0.5226 val_accuracy: 0.7784
Epoch: 13 loss: 0.4459 accuracy: 0.8030 val_loss: 0.5051 val_accuracy: 0.7822
Epoch: 14 loss: 0.4595 accuracy: 0.7990 val_loss: 0.5410 val_accuracy: 0.7405
Epoch: 15 loss: 0.4420 accuracy: 0.8053 val_loss: 0.4683 val_accuracy: 0.7652
Epoch: 16 loss: 0.4219 accuracy: 0.8179 val_loss: 0.4999 val_accuracy: 0.7557
Epoch: 17 loss: 0.4176 accuracy: 0.8159 val_loss: 0.3899 val_accuracy: 0.8144
Epoch: 18 loss: 0.4156 accuracy: 0.8207 val_loss: 0.4280 val_accuracy: 0.7955
Epoch: 19 loss: 0.4040 accuracy: 0.8222 val_loss: 0.4093 val_accuracy: 0.8030
Epoch: 20 loss: 0.3922 accuracy: 0.8227 val_loss: 0.4402 val_accuracy: 0.7973
Job ended!
