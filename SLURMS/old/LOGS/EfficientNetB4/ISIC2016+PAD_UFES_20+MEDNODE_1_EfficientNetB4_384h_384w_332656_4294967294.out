Tue 07 May 2024 03:51:45 AM EDT
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'PAD_UFES_20', 'MEDNODE']
IMG_SIZE: [384, 384]
CLASSIFIER: EfficientNetB4
JOB_INDEX: None
Start training augmented images
Combining...
Combining 1th db out of 3 dbs
Combining 2th db out of 3 dbs
Combining 3th db out of 3 dbs
Stacking data
Combining complete
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb4 (Functional)  (None, 1792)              17673823  
_________________________________________________________________
dense (Dense)                (None, 512)               918016    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 18,726,753
Trainable params: 1,051,394
Non-trainable params: 17,675,359
_________________________________________________________________
Fitting ISIC2016+PAD_UFES_20+MEDNODE_aug_EfficientNetB4_384h_384w_None model...
model_name: ISIC2016+PAD_UFES_20+MEDNODE_aug_EfficientNetB4_384h_384w_None
Epoch: 1 loss: 1.5059 accuracy: 0.5033 val_loss: 1.1250 val_accuracy: 0.9095
Epoch: 2 loss: 1.3261 accuracy: 0.5459 val_loss: 1.1496 val_accuracy: 0.9095
Epoch: 3 loss: 1.2282 accuracy: 0.5693 val_loss: 0.8943 val_accuracy: 0.9095
Epoch: 4 loss: 1.1852 accuracy: 0.5774 val_loss: 0.9767 val_accuracy: 0.9095
Epoch: 5 loss: 1.1252 accuracy: 0.6069 val_loss: 0.9046 val_accuracy: 0.9095
Epoch: 6 loss: 1.0945 accuracy: 0.6285 val_loss: 0.8198 val_accuracy: 0.9095
Epoch: 7 loss: 1.0620 accuracy: 0.6585 val_loss: 0.9471 val_accuracy: 0.9095
Epoch: 8 loss: 1.0584 accuracy: 0.6633 val_loss: 0.8497 val_accuracy: 0.9095
Epoch: 9 loss: 1.0375 accuracy: 0.6746 val_loss: 0.8278 val_accuracy: 0.9095
Epoch: 10 loss: 1.0434 accuracy: 0.6696 val_loss: 0.8151 val_accuracy: 0.9095
Epoch: 11 loss: 1.0161 accuracy: 0.6895 val_loss: 0.8727 val_accuracy: 0.9095
Epoch: 12 loss: 1.0111 accuracy: 0.6918 val_loss: 0.8999 val_accuracy: 0.9095
Epoch: 13 loss: 0.9956 accuracy: 0.7046 val_loss: 0.9001 val_accuracy: 0.9095
Epoch: 14 loss: 0.9931 accuracy: 0.7034 val_loss: 0.7320 val_accuracy: 0.9095
Epoch: 15 loss: 1.0019 accuracy: 0.6953 val_loss: 0.8105 val_accuracy: 0.9095
Epoch: 16 loss: 0.9763 accuracy: 0.7099 val_loss: 0.7967 val_accuracy: 0.9095
Epoch: 17 loss: 0.9714 accuracy: 0.7119 val_loss: 0.7376 val_accuracy: 0.9095
Epoch: 18 loss: 0.9663 accuracy: 0.7130 val_loss: 0.8274 val_accuracy: 0.9095
Epoch: 19 loss: 0.9704 accuracy: 0.7147 val_loss: 0.7242 val_accuracy: 0.9095
Epoch: 20 loss: 0.9627 accuracy: 0.7092 val_loss: 0.7260 val_accuracy: 0.9095
Epoch: 21 loss: 0.9439 accuracy: 0.7225 val_loss: 0.8045 val_accuracy: 0.9095
Epoch: 22 loss: 0.9511 accuracy: 0.7172 val_loss: 0.7496 val_accuracy: 0.9095
Epoch: 23 loss: 0.9554 accuracy: 0.7109 val_loss: 0.7787 val_accuracy: 0.9095
Epoch: 24 loss: 0.9347 accuracy: 0.7278 val_loss: 0.7337 val_accuracy: 0.9095

Epoch 00024: ReduceLROnPlateau reducing learning rate to 7.999999797903001e-05.
Epoch: 25 loss: 0.9286 accuracy: 0.7208 val_loss: 0.6947 val_accuracy: 0.9095
Epoch: 26 loss: 0.9251 accuracy: 0.7296 val_loss: 0.7175 val_accuracy: 0.9095
Epoch: 27 loss: 0.9419 accuracy: 0.7132 val_loss: 0.8325 val_accuracy: 0.9095
Epoch: 28 loss: 0.9160 accuracy: 0.7293 val_loss: 0.7651 val_accuracy: 0.9095
Epoch: 29 loss: 0.9424 accuracy: 0.7109 val_loss: 0.7712 val_accuracy: 0.9095
Epoch: 30 loss: 0.9247 accuracy: 0.7258 val_loss: 0.6673 val_accuracy: 0.9095
Epoch: 31 loss: 0.9278 accuracy: 0.7170 val_loss: 0.6881 val_accuracy: 0.9095
Epoch: 32 loss: 0.9218 accuracy: 0.7215 val_loss: 0.6771 val_accuracy: 0.9095
Epoch: 33 loss: 0.8989 accuracy: 0.7263 val_loss: 0.7081 val_accuracy: 0.9095
Epoch: 34 loss: 0.9064 accuracy: 0.7286 val_loss: 0.8404 val_accuracy: 0.9095
Epoch: 35 loss: 0.9183 accuracy: 0.7097 val_loss: 0.6757 val_accuracy: 0.9095

Epoch 00035: ReduceLROnPlateau reducing learning rate to 6.399999838322402e-05.
Epoch: 36 loss: 0.9046 accuracy: 0.7185 val_loss: 0.6812 val_accuracy: 0.9095
Epoch: 37 loss: 0.8979 accuracy: 0.7225 val_loss: 0.7275 val_accuracy: 0.9095
Epoch: 38 loss: 0.8812 accuracy: 0.7356 val_loss: 0.6508 val_accuracy: 0.9095
Epoch: 39 loss: 0.8734 accuracy: 0.7387 val_loss: 0.7019 val_accuracy: 0.9095
Epoch: 40 loss: 0.8843 accuracy: 0.7205 val_loss: 0.7638 val_accuracy: 0.9095
Epoch: 41 loss: 0.8822 accuracy: 0.7266 val_loss: 0.7273 val_accuracy: 0.9095
Epoch: 42 loss: 0.8863 accuracy: 0.7167 val_loss: 0.6592 val_accuracy: 0.9095
Epoch: 43 loss: 0.8680 accuracy: 0.7349 val_loss: 0.7550 val_accuracy: 0.9095

Epoch 00043: ReduceLROnPlateau reducing learning rate to 5.119999987073243e-05.
Epoch: 44 loss: 0.8650 accuracy: 0.7374 val_loss: 0.7024 val_accuracy: 0.9095
Epoch: 45 loss: 0.8569 accuracy: 0.7445 val_loss: 0.6894 val_accuracy: 0.9095
Epoch: 46 loss: 0.8708 accuracy: 0.7306 val_loss: 0.7278 val_accuracy: 0.9095
Epoch: 47 loss: 0.8779 accuracy: 0.7228 val_loss: 0.7211 val_accuracy: 0.9095
Epoch: 48 loss: 0.8685 accuracy: 0.7291 val_loss: 0.7304 val_accuracy: 0.9095

Epoch 00048: ReduceLROnPlateau reducing learning rate to 4.0960000478662555e-05.
End of augmented training
Finish
Job ended!
