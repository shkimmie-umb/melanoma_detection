Thu 02 May 2024 07:06:49 AM EDT
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'PAD_UFES_20', 'MEDNODE', 'KaggleMB']
IMG_SIZE: [384, 384]
CLASSIFIER: DenseNet121
JOB_INDEX: None
Start training augmented images
Combining...
Combining 1th db out of 4 dbs
Combining 2th db out of 4 dbs
Combining 3th db out of 4 dbs
Combining 4th db out of 4 dbs
Stacking data
Combining complete
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet121 (Functional)     (None, 1024)              7037504   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,697,218
Trainable params: 658,178
Non-trainable params: 7,039,040
_________________________________________________________________
Fitting ISIC2016+PAD_UFES_20+MEDNODE+KaggleMB_aug_DenseNet121_384h_384w_None model...
model_name: ISIC2016+PAD_UFES_20+MEDNODE+KaggleMB_aug_DenseNet121_384h_384w_None
Epoch: 1 loss: 1.0146 accuracy: 0.7553 val_loss: 0.9178 val_accuracy: 0.8136
Epoch: 2 loss: 0.7810 accuracy: 0.8512 val_loss: 0.8098 val_accuracy: 0.8336
Epoch: 3 loss: 0.7120 accuracy: 0.8694 val_loss: 0.7527 val_accuracy: 0.8428
Epoch: 4 loss: 0.6528 accuracy: 0.8849 val_loss: 0.7404 val_accuracy: 0.8311
Epoch: 5 loss: 0.5994 accuracy: 0.9036 val_loss: 0.7157 val_accuracy: 0.8344
Epoch: 6 loss: 0.5722 accuracy: 0.9099 val_loss: 0.7001 val_accuracy: 0.8461
Epoch: 7 loss: 0.5571 accuracy: 0.9117 val_loss: 0.7115 val_accuracy: 0.8511
Epoch: 8 loss: 0.5186 accuracy: 0.9269 val_loss: 0.6816 val_accuracy: 0.8586
Epoch: 9 loss: 0.5117 accuracy: 0.9252 val_loss: 0.6598 val_accuracy: 0.8661
Epoch: 10 loss: 0.4856 accuracy: 0.9388 val_loss: 0.6700 val_accuracy: 0.8669
Epoch: 11 loss: 0.4727 accuracy: 0.9419 val_loss: 0.6755 val_accuracy: 0.8511
Epoch: 12 loss: 0.4656 accuracy: 0.9414 val_loss: 0.6616 val_accuracy: 0.8611
Epoch: 13 loss: 0.4538 accuracy: 0.9423 val_loss: 0.6324 val_accuracy: 0.8719
Epoch: 14 loss: 0.4335 accuracy: 0.9535 val_loss: 0.6712 val_accuracy: 0.8636
Epoch: 15 loss: 0.4284 accuracy: 0.9542 val_loss: 0.6377 val_accuracy: 0.8710
Epoch: 16 loss: 0.4095 accuracy: 0.9605 val_loss: 0.6324 val_accuracy: 0.8769
Epoch: 17 loss: 0.4036 accuracy: 0.9613 val_loss: 0.6448 val_accuracy: 0.8727
Epoch: 18 loss: 0.3906 accuracy: 0.9634 val_loss: 0.6510 val_accuracy: 0.8702

Epoch 00018: ReduceLROnPlateau reducing learning rate to 7.999999797903001e-05.
Epoch: 19 loss: 0.3907 accuracy: 0.9645 val_loss: 0.6376 val_accuracy: 0.8677
Epoch: 20 loss: 0.3729 accuracy: 0.9714 val_loss: 0.6354 val_accuracy: 0.8719
Epoch: 21 loss: 0.3636 accuracy: 0.9717 val_loss: 0.6404 val_accuracy: 0.8677
Epoch: 22 loss: 0.3561 accuracy: 0.9754 val_loss: 0.6386 val_accuracy: 0.8719
Epoch: 23 loss: 0.3546 accuracy: 0.9717 val_loss: 0.6341 val_accuracy: 0.8702

Epoch 00023: ReduceLROnPlateau reducing learning rate to 6.399999838322402e-05.
End of augmented training
Finish
Job ended!
