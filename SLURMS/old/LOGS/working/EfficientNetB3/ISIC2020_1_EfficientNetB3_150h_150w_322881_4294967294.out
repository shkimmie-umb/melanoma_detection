Tue 27 Feb 2024 10:18:58 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2020']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB3
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb3 (Functional)  (None, 1536)              10783535  
_________________________________________________________________
dense (Dense)                (None, 512)               786944    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 11,705,393
Trainable params: 920,322
Non-trainable params: 10,785,071
_________________________________________________________________
Fitting ISIC2020_aug_EfficientNetB3_150h_150w_None model...
model_name: ISIC2020_aug_EfficientNetB3_150h_150w_None
Epoch: 1 loss: 0.5074 accuracy: 0.7943 val_loss: 0.1995 val_accuracy: 0.9843
Epoch: 2 loss: 0.4672 accuracy: 0.8119 val_loss: 0.2949 val_accuracy: 0.9829
Epoch: 3 loss: 0.4657 accuracy: 0.8131 val_loss: 0.2259 val_accuracy: 0.9837
Epoch: 4 loss: 0.4621 accuracy: 0.8134 val_loss: 0.1752 val_accuracy: 0.9840
Epoch: 5 loss: 0.4612 accuracy: 0.8127 val_loss: 0.2055 val_accuracy: 0.9831
Epoch: 6 loss: 0.4595 accuracy: 0.8133 val_loss: 0.1761 val_accuracy: 0.9840
Epoch: 7 loss: 0.4587 accuracy: 0.8131 val_loss: 0.2316 val_accuracy: 0.9825
Epoch: 8 loss: 0.4570 accuracy: 0.8131 val_loss: 0.1991 val_accuracy: 0.9828
Epoch: 9 loss: 0.4556 accuracy: 0.8133 val_loss: 0.2648 val_accuracy: 0.9790
Epoch: 10 loss: 0.4548 accuracy: 0.8133 val_loss: 0.2024 val_accuracy: 0.9825
Epoch: 11 loss: 0.4532 accuracy: 0.8128 val_loss: 0.2152 val_accuracy: 0.9831
Epoch: 12 loss: 0.4527 accuracy: 0.8137 val_loss: 0.3156 val_accuracy: 0.9766
Epoch: 13 loss: 0.4528 accuracy: 0.8136 val_loss: 0.1892 val_accuracy: 0.9839
Epoch: 14 loss: 0.4504 accuracy: 0.8146 val_loss: 0.2843 val_accuracy: 0.9789
Epoch: 15 loss: 0.4493 accuracy: 0.8147 val_loss: 0.1443 val_accuracy: 0.9843
Epoch: 16 loss: 0.4506 accuracy: 0.8149 val_loss: 0.1794 val_accuracy: 0.9837
Epoch: 17 loss: 0.4481 accuracy: 0.8140 val_loss: 0.2208 val_accuracy: 0.9822
Epoch: 18 loss: 0.4494 accuracy: 0.8147 val_loss: 0.1829 val_accuracy: 0.9831
Epoch: 19 loss: 0.4483 accuracy: 0.8146 val_loss: 0.2264 val_accuracy: 0.9831
Epoch: 20 loss: 0.4488 accuracy: 0.8151 val_loss: 0.2117 val_accuracy: 0.9837
Job ended!
