Fri 01 Mar 2024 08:45:53 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['_7_point_criteria']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB5
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb5 (Functional)  (None, 2048)              28513527  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 29,697,529
Trainable params: 1,182,466
Non-trainable params: 28,515,063
_________________________________________________________________
Fitting _7_point_criteria_aug_EfficientNetB5_150h_150w_None model...
model_name: _7_point_criteria_aug_EfficientNetB5_150h_150w_None
Epoch: 1 loss: 0.9007 accuracy: 0.6151 val_loss: 0.6014 val_accuracy: 0.7143
Epoch: 2 loss: 0.7503 accuracy: 0.6855 val_loss: 0.5971 val_accuracy: 0.7044
Epoch: 3 loss: 0.6074 accuracy: 0.7404 val_loss: 0.6113 val_accuracy: 0.7044
Epoch: 4 loss: 0.5675 accuracy: 0.7438 val_loss: 0.6213 val_accuracy: 0.6946
Epoch: 5 loss: 0.5415 accuracy: 0.7587 val_loss: 0.5945 val_accuracy: 0.7291
Epoch: 6 loss: 0.4590 accuracy: 0.7837 val_loss: 0.5849 val_accuracy: 0.7291
Epoch: 7 loss: 0.4624 accuracy: 0.7937 val_loss: 0.5976 val_accuracy: 0.7094
Epoch: 8 loss: 0.4416 accuracy: 0.8070 val_loss: 0.5728 val_accuracy: 0.7389
Epoch: 9 loss: 0.3687 accuracy: 0.8253 val_loss: 0.5741 val_accuracy: 0.7094
Epoch: 10 loss: 0.3593 accuracy: 0.8353 val_loss: 0.5660 val_accuracy: 0.7241
Epoch: 11 loss: 0.3662 accuracy: 0.8303 val_loss: 0.5675 val_accuracy: 0.7291
Epoch: 12 loss: 0.3532 accuracy: 0.8419 val_loss: 0.5610 val_accuracy: 0.7340
Epoch: 13 loss: 0.3657 accuracy: 0.8569 val_loss: 0.5681 val_accuracy: 0.7488
Epoch: 14 loss: 0.3193 accuracy: 0.8569 val_loss: 0.5742 val_accuracy: 0.7438
Epoch: 15 loss: 0.2932 accuracy: 0.8952 val_loss: 0.5695 val_accuracy: 0.7291
Epoch: 16 loss: 0.3510 accuracy: 0.8486 val_loss: 0.5801 val_accuracy: 0.7389
Epoch: 17 loss: 0.2590 accuracy: 0.8952 val_loss: 0.5965 val_accuracy: 0.7241
Epoch: 18 loss: 0.3094 accuracy: 0.8652 val_loss: 0.5998 val_accuracy: 0.7389
Epoch: 19 loss: 0.2542 accuracy: 0.8885 val_loss: 0.5991 val_accuracy: 0.7488
Epoch: 20 loss: 0.2573 accuracy: 0.8852 val_loss: 0.6225 val_accuracy: 0.7241
Job ended!
