Fri 01 Mar 2024 12:58:41 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2020']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB6
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb6 (Functional)  (None, 2304)              40960143  
_________________________________________________________________
dense (Dense)                (None, 512)               1180160   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 42,275,217
Trainable params: 1,313,538
Non-trainable params: 40,961,679
_________________________________________________________________
Fitting ISIC2020_aug_EfficientNetB6_150h_150w_None model...
model_name: ISIC2020_aug_EfficientNetB6_150h_150w_None
Epoch: 1 loss: 0.4710 accuracy: 0.8000 val_loss: 0.0947 val_accuracy: 0.9816
Epoch: 2 loss: 0.3291 accuracy: 0.8506 val_loss: 0.0788 val_accuracy: 0.9823
Epoch: 3 loss: 0.3025 accuracy: 0.8579 val_loss: 0.0766 val_accuracy: 0.9828
Epoch: 4 loss: 0.2850 accuracy: 0.8634 val_loss: 0.0723 val_accuracy: 0.9831
Epoch: 5 loss: 0.2771 accuracy: 0.8678 val_loss: 0.0724 val_accuracy: 0.9828
Epoch: 6 loss: 0.2708 accuracy: 0.8702 val_loss: 0.0724 val_accuracy: 0.9826
Epoch: 7 loss: 0.2648 accuracy: 0.8721 val_loss: 0.0716 val_accuracy: 0.9823
Epoch: 8 loss: 0.2606 accuracy: 0.8759 val_loss: 0.0715 val_accuracy: 0.9828
Epoch: 9 loss: 0.2564 accuracy: 0.8790 val_loss: 0.0673 val_accuracy: 0.9839
Epoch: 10 loss: 0.2550 accuracy: 0.8783 val_loss: 0.0710 val_accuracy: 0.9828
Epoch: 11 loss: 0.2510 accuracy: 0.8814 val_loss: 0.0716 val_accuracy: 0.9839
Epoch: 12 loss: 0.2494 accuracy: 0.8817 val_loss: 0.0727 val_accuracy: 0.9832
Epoch: 13 loss: 0.2473 accuracy: 0.8852 val_loss: 0.0736 val_accuracy: 0.9831
Epoch: 14 loss: 0.2429 accuracy: 0.8857 val_loss: 0.0731 val_accuracy: 0.9825
Epoch: 15 loss: 0.2426 accuracy: 0.8858 val_loss: 0.0707 val_accuracy: 0.9820
Epoch: 16 loss: 0.2413 accuracy: 0.8864 val_loss: 0.0709 val_accuracy: 0.9839
Epoch: 17 loss: 0.2402 accuracy: 0.8870 val_loss: 0.0705 val_accuracy: 0.9823
Epoch: 18 loss: 0.2402 accuracy: 0.8886 val_loss: 0.0721 val_accuracy: 0.9807
Epoch: 19 loss: 0.2377 accuracy: 0.8879 val_loss: 0.0705 val_accuracy: 0.9837
Epoch: 20 loss: 0.2359 accuracy: 0.8893 val_loss: 0.0733 val_accuracy: 0.9811
Job ended!
