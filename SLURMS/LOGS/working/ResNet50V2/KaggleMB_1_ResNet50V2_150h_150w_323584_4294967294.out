Wed 28 Feb 2024 09:27:38 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['KaggleMB']
IMG_SIZE: [150, 150]
CLASSIFIER: ResNet50V2
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
resnet50v2 (Functional)      (None, 2048)              23564800  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 24,748,802
Trainable params: 1,182,466
Non-trainable params: 23,566,336
_________________________________________________________________
Fitting KaggleMB_aug_ResNet50V2_150h_150w_None model...
model_name: KaggleMB_aug_ResNet50V2_150h_150w_None
Epoch: 1 loss: 0.7011 accuracy: 0.6757 val_loss: 0.7324 val_accuracy: 0.4337
Epoch: 2 loss: 0.5650 accuracy: 0.7439 val_loss: 0.7994 val_accuracy: 0.4337
Epoch: 3 loss: 0.5357 accuracy: 0.7593 val_loss: 0.8226 val_accuracy: 0.4337
Epoch: 4 loss: 0.5102 accuracy: 0.7750 val_loss: 0.7941 val_accuracy: 0.4394
Epoch: 5 loss: 0.5052 accuracy: 0.7742 val_loss: 0.5430 val_accuracy: 0.7500
Epoch: 6 loss: 0.4761 accuracy: 0.7930 val_loss: 0.5271 val_accuracy: 0.7557
Epoch: 7 loss: 0.4817 accuracy: 0.7816 val_loss: 1.0143 val_accuracy: 0.5170
Epoch: 8 loss: 0.4690 accuracy: 0.7933 val_loss: 0.4945 val_accuracy: 0.7746
Epoch: 9 loss: 0.4563 accuracy: 0.8010 val_loss: 0.4686 val_accuracy: 0.7803
Epoch: 10 loss: 0.4608 accuracy: 0.7927 val_loss: 0.4952 val_accuracy: 0.7803
Epoch: 11 loss: 0.4393 accuracy: 0.8079 val_loss: 0.4261 val_accuracy: 0.8030
Epoch: 12 loss: 0.4446 accuracy: 0.8104 val_loss: 0.4386 val_accuracy: 0.7992
Epoch: 13 loss: 0.4312 accuracy: 0.8073 val_loss: 0.4422 val_accuracy: 0.7917
Epoch: 14 loss: 0.4218 accuracy: 0.8124 val_loss: 0.4269 val_accuracy: 0.8106
Epoch: 15 loss: 0.4192 accuracy: 0.8222 val_loss: 0.4965 val_accuracy: 0.7576
Epoch: 16 loss: 0.3932 accuracy: 0.8261 val_loss: 0.4893 val_accuracy: 0.7519
Epoch: 17 loss: 0.3985 accuracy: 0.8233 val_loss: 0.4489 val_accuracy: 0.7860
Epoch: 18 loss: 0.3926 accuracy: 0.8299 val_loss: 0.4194 val_accuracy: 0.8125
Epoch: 19 loss: 0.3825 accuracy: 0.8390 val_loss: 0.4087 val_accuracy: 0.8030
Epoch: 20 loss: 0.3974 accuracy: 0.8290 val_loss: 0.3987 val_accuracy: 0.8144
Job ended!
