Tue 27 Feb 2024 02:42:46 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB6
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb6 (Functional)  (None, 2304)              40960143  
_________________________________________________________________
dense (Dense)                (None, 512)               1180160   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 42,275,217
Trainable params: 1,313,538
Non-trainable params: 40,961,679
_________________________________________________________________
Fitting ISIC2016_aug_EfficientNetB6_150h_150w_None model...
model_name: ISIC2016_aug_EfficientNetB6_150h_150w_None
Epoch: 1 loss: 0.6973 accuracy: 0.5056 val_loss: 0.6728 val_accuracy: 0.8000
Epoch: 2 loss: 0.6938 accuracy: 0.5282 val_loss: 0.6582 val_accuracy: 0.8000
Epoch: 3 loss: 0.6849 accuracy: 0.5551 val_loss: 0.6450 val_accuracy: 0.8000
Epoch: 4 loss: 0.6845 accuracy: 0.5733 val_loss: 0.6306 val_accuracy: 0.8000
Epoch: 5 loss: 0.6787 accuracy: 0.5924 val_loss: 0.6172 val_accuracy: 0.8000
Epoch: 6 loss: 0.6745 accuracy: 0.6097 val_loss: 0.6080 val_accuracy: 0.8000
Epoch: 7 loss: 0.6711 accuracy: 0.6184 val_loss: 0.5985 val_accuracy: 0.8000
Epoch: 8 loss: 0.6718 accuracy: 0.6175 val_loss: 0.5911 val_accuracy: 0.8000
Epoch: 9 loss: 0.6663 accuracy: 0.6114 val_loss: 0.5910 val_accuracy: 0.8000
Epoch: 10 loss: 0.6678 accuracy: 0.6106 val_loss: 0.5848 val_accuracy: 0.8000
Epoch: 11 loss: 0.6709 accuracy: 0.6071 val_loss: 0.5787 val_accuracy: 0.8000
Epoch: 12 loss: 0.6715 accuracy: 0.6149 val_loss: 0.5791 val_accuracy: 0.8000
Epoch: 13 loss: 0.6696 accuracy: 0.6167 val_loss: 0.5776 val_accuracy: 0.8000
Epoch: 14 loss: 0.6670 accuracy: 0.6158 val_loss: 0.5726 val_accuracy: 0.8000
Epoch: 15 loss: 0.6707 accuracy: 0.6141 val_loss: 0.5715 val_accuracy: 0.8000
Epoch: 16 loss: 0.6677 accuracy: 0.6157 val_loss: 0.5695 val_accuracy: 0.8000
Epoch: 17 loss: 0.6672 accuracy: 0.6141 val_loss: 0.5662 val_accuracy: 0.8000
Epoch: 18 loss: 0.6659 accuracy: 0.6167 val_loss: 0.5544 val_accuracy: 0.8000
Epoch: 19 loss: 0.6670 accuracy: 0.6167 val_loss: 0.5680 val_accuracy: 0.8000
Epoch: 20 loss: 0.6684 accuracy: 0.6132 val_loss: 0.5706 val_accuracy: 0.8000
Job ended!
