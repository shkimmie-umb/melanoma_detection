Tue 27 Feb 2024 08:38:38 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['HAM10000']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB3
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb3 (Functional)  (None, 1536)              10783535  
_________________________________________________________________
dense (Dense)                (None, 512)               786944    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 11,705,393
Trainable params: 920,322
Non-trainable params: 10,785,071
_________________________________________________________________
Fitting HAM10000_aug_EfficientNetB3_150h_150w_None model...
model_name: HAM10000_aug_EfficientNetB3_150h_150w_None
Epoch: 1 loss: 0.6390 accuracy: 0.6656 val_loss: 0.4201 val_accuracy: 0.9694
Epoch: 2 loss: 0.6063 accuracy: 0.7076 val_loss: 0.4078 val_accuracy: 0.9694
Epoch: 3 loss: 0.6024 accuracy: 0.7077 val_loss: 0.3736 val_accuracy: 0.9694
Epoch: 4 loss: 0.6037 accuracy: 0.7074 val_loss: 0.3937 val_accuracy: 0.9694
Epoch: 5 loss: 0.6029 accuracy: 0.7076 val_loss: 0.3682 val_accuracy: 0.9694
Epoch: 6 loss: 0.6021 accuracy: 0.7079 val_loss: 0.3533 val_accuracy: 0.9694
Epoch: 7 loss: 0.6018 accuracy: 0.7074 val_loss: 0.3626 val_accuracy: 0.9694
Epoch: 8 loss: 0.6010 accuracy: 0.7076 val_loss: 0.3684 val_accuracy: 0.9694
Epoch: 9 loss: 0.6001 accuracy: 0.7078 val_loss: 0.3686 val_accuracy: 0.9694
Epoch: 10 loss: 0.6015 accuracy: 0.7074 val_loss: 0.3969 val_accuracy: 0.9694
Epoch: 11 loss: 0.6002 accuracy: 0.7076 val_loss: 0.3608 val_accuracy: 0.9694
Epoch: 12 loss: 0.5993 accuracy: 0.7075 val_loss: 0.3742 val_accuracy: 0.9694
Epoch: 13 loss: 0.6006 accuracy: 0.7073 val_loss: 0.3403 val_accuracy: 0.9694
Epoch: 14 loss: 0.5988 accuracy: 0.7079 val_loss: 0.3616 val_accuracy: 0.9694
Epoch: 15 loss: 0.6002 accuracy: 0.7073 val_loss: 0.3762 val_accuracy: 0.9694
Epoch: 16 loss: 0.5991 accuracy: 0.7074 val_loss: 0.3975 val_accuracy: 0.9694
Epoch: 17 loss: 0.5984 accuracy: 0.7077 val_loss: 0.3430 val_accuracy: 0.9694
Epoch: 18 loss: 0.6008 accuracy: 0.7074 val_loss: 0.4171 val_accuracy: 0.9694
Epoch: 19 loss: 0.5981 accuracy: 0.7077 val_loss: 0.3764 val_accuracy: 0.9694
Epoch: 20 loss: 0.6004 accuracy: 0.7074 val_loss: 0.3915 val_accuracy: 0.9694
Job ended!
