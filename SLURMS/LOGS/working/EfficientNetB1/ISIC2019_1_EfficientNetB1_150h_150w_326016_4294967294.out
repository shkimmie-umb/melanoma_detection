Fri 01 Mar 2024 04:06:45 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2019']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB1
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb1 (Functional)  (None, 1280)              6575239   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,366,025
Trainable params: 789,250
Non-trainable params: 6,576,775
_________________________________________________________________
Fitting ISIC2019_aug_EfficientNetB1_150h_150w_None model...
model_name: ISIC2019_aug_EfficientNetB1_150h_150w_None
Epoch: 1 loss: 0.6367 accuracy: 0.7127 val_loss: 0.3711 val_accuracy: 0.8508
Epoch: 2 loss: 0.5348 accuracy: 0.7539 val_loss: 0.3483 val_accuracy: 0.8591
Epoch: 3 loss: 0.4995 accuracy: 0.7678 val_loss: 0.3467 val_accuracy: 0.8597
Epoch: 4 loss: 0.4781 accuracy: 0.7755 val_loss: 0.3231 val_accuracy: 0.8676
Epoch: 5 loss: 0.4603 accuracy: 0.7845 val_loss: 0.3272 val_accuracy: 0.8690
Epoch: 6 loss: 0.4478 accuracy: 0.7893 val_loss: 0.3253 val_accuracy: 0.8697
Epoch: 7 loss: 0.4412 accuracy: 0.7958 val_loss: 0.3213 val_accuracy: 0.8688
Epoch: 8 loss: 0.4313 accuracy: 0.7998 val_loss: 0.3180 val_accuracy: 0.8682
Epoch: 9 loss: 0.4244 accuracy: 0.8040 val_loss: 0.3174 val_accuracy: 0.8725
Epoch: 10 loss: 0.4186 accuracy: 0.8054 val_loss: 0.3150 val_accuracy: 0.8715
Epoch: 11 loss: 0.4100 accuracy: 0.8094 val_loss: 0.3163 val_accuracy: 0.8666
Epoch: 12 loss: 0.4072 accuracy: 0.8118 val_loss: 0.3074 val_accuracy: 0.8786
Epoch: 13 loss: 0.4004 accuracy: 0.8168 val_loss: 0.3019 val_accuracy: 0.8765
Epoch: 14 loss: 0.3998 accuracy: 0.8135 val_loss: 0.2954 val_accuracy: 0.8796
Epoch: 15 loss: 0.3928 accuracy: 0.8198 val_loss: 0.2998 val_accuracy: 0.8769
Epoch: 16 loss: 0.3881 accuracy: 0.8218 val_loss: 0.3028 val_accuracy: 0.8782
Epoch: 17 loss: 0.3828 accuracy: 0.8243 val_loss: 0.2972 val_accuracy: 0.8786
Epoch: 18 loss: 0.3777 accuracy: 0.8271 val_loss: 0.2967 val_accuracy: 0.8804
Epoch: 19 loss: 0.3766 accuracy: 0.8260 val_loss: 0.2929 val_accuracy: 0.8790
Epoch: 20 loss: 0.3687 accuracy: 0.8302 val_loss: 0.2984 val_accuracy: 0.8743
Job ended!
