Fri 01 Mar 2024 10:45:10 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['_7_point_criteria']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB6
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb6 (Functional)  (None, 2304)              40960143  
_________________________________________________________________
dense (Dense)                (None, 512)               1180160   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 42,275,217
Trainable params: 1,313,538
Non-trainable params: 40,961,679
_________________________________________________________________
Fitting _7_point_criteria_aug_EfficientNetB6_150h_150w_None model...
model_name: _7_point_criteria_aug_EfficientNetB6_150h_150w_None
Epoch: 1 loss: 0.8866 accuracy: 0.6090 val_loss: 0.6721 val_accuracy: 0.5862
Epoch: 2 loss: 0.6849 accuracy: 0.7072 val_loss: 0.6081 val_accuracy: 0.6995
Epoch: 3 loss: 0.5769 accuracy: 0.7571 val_loss: 0.5992 val_accuracy: 0.7192
Epoch: 4 loss: 0.4902 accuracy: 0.7671 val_loss: 0.5834 val_accuracy: 0.7192
Epoch: 5 loss: 0.5059 accuracy: 0.7720 val_loss: 0.5734 val_accuracy: 0.7389
Epoch: 6 loss: 0.4938 accuracy: 0.7804 val_loss: 0.5730 val_accuracy: 0.7241
Epoch: 7 loss: 0.3875 accuracy: 0.8322 val_loss: 0.5684 val_accuracy: 0.7340
Epoch: 8 loss: 0.3963 accuracy: 0.8236 val_loss: 0.5576 val_accuracy: 0.7241
Epoch: 9 loss: 0.3557 accuracy: 0.8569 val_loss: 0.5811 val_accuracy: 0.7241
Epoch: 10 loss: 0.3354 accuracy: 0.8586 val_loss: 0.5715 val_accuracy: 0.7340
Epoch: 11 loss: 0.3540 accuracy: 0.8502 val_loss: 0.5812 val_accuracy: 0.7340
Epoch: 12 loss: 0.3258 accuracy: 0.8619 val_loss: 0.5835 val_accuracy: 0.7389
Epoch: 13 loss: 0.2931 accuracy: 0.8702 val_loss: 0.5924 val_accuracy: 0.7488
Epoch: 14 loss: 0.2440 accuracy: 0.9035 val_loss: 0.5906 val_accuracy: 0.7635
Epoch: 15 loss: 0.2392 accuracy: 0.8935 val_loss: 0.5809 val_accuracy: 0.7635
Epoch: 16 loss: 0.2720 accuracy: 0.8885 val_loss: 0.5940 val_accuracy: 0.7635
Epoch: 17 loss: 0.2365 accuracy: 0.9002 val_loss: 0.5892 val_accuracy: 0.7488
Epoch: 18 loss: 0.2400 accuracy: 0.9135 val_loss: 0.5954 val_accuracy: 0.7586
Epoch: 19 loss: 0.2485 accuracy: 0.9118 val_loss: 0.6045 val_accuracy: 0.7685
Epoch: 20 loss: 0.2290 accuracy: 0.8985 val_loss: 0.6269 val_accuracy: 0.7685
Job ended!
