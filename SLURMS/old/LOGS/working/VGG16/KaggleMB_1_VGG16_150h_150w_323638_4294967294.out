Wed 28 Feb 2024 10:13:45 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['KaggleMB']
IMG_SIZE: [150, 150]
CLASSIFIER: VGG16
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
vgg16 (Functional)           (None, 512)               14714688  
_________________________________________________________________
dense (Dense)                (None, 512)               262656    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 15,112,258
Trainable params: 396,034
Non-trainable params: 14,716,224
_________________________________________________________________
Fitting KaggleMB_aug_VGG16_150h_150w_None model...
model_name: KaggleMB_aug_VGG16_150h_150w_None
Epoch: 1 loss: 0.7900 accuracy: 0.6375 val_loss: 0.7238 val_accuracy: 0.4337
Epoch: 2 loss: 0.6214 accuracy: 0.7060 val_loss: 0.6801 val_accuracy: 0.4356
Epoch: 3 loss: 0.5787 accuracy: 0.7488 val_loss: 0.7029 val_accuracy: 0.4792
Epoch: 4 loss: 0.5156 accuracy: 0.7651 val_loss: 0.6170 val_accuracy: 0.6629
Epoch: 5 loss: 0.4998 accuracy: 0.7845 val_loss: 0.4267 val_accuracy: 0.8163
Epoch: 6 loss: 0.4726 accuracy: 0.7962 val_loss: 0.5166 val_accuracy: 0.7689
Epoch: 7 loss: 0.4832 accuracy: 0.7927 val_loss: 0.7819 val_accuracy: 0.6269
Epoch: 8 loss: 0.4781 accuracy: 0.7942 val_loss: 0.4404 val_accuracy: 0.8049
Epoch: 9 loss: 0.4558 accuracy: 0.8050 val_loss: 0.4140 val_accuracy: 0.8087
Epoch: 10 loss: 0.4721 accuracy: 0.7919 val_loss: 0.6557 val_accuracy: 0.7216
Epoch: 11 loss: 0.4611 accuracy: 0.8019 val_loss: 0.4161 val_accuracy: 0.8220
Epoch: 12 loss: 0.4616 accuracy: 0.8022 val_loss: 0.4288 val_accuracy: 0.8011
Epoch: 13 loss: 0.4491 accuracy: 0.8102 val_loss: 0.3944 val_accuracy: 0.8182
Epoch: 14 loss: 0.4477 accuracy: 0.8025 val_loss: 0.3778 val_accuracy: 0.8295
Epoch: 15 loss: 0.4472 accuracy: 0.7985 val_loss: 0.7055 val_accuracy: 0.7102
Epoch: 16 loss: 0.4403 accuracy: 0.8156 val_loss: 0.4274 val_accuracy: 0.8258
Epoch: 17 loss: 0.4380 accuracy: 0.8047 val_loss: 1.5328 val_accuracy: 0.4735
Epoch: 18 loss: 0.4503 accuracy: 0.8059 val_loss: 0.3851 val_accuracy: 0.8220
Epoch: 19 loss: 0.4364 accuracy: 0.8133 val_loss: 0.4405 val_accuracy: 0.8201
Epoch: 20 loss: 0.4252 accuracy: 0.8150 val_loss: 0.5687 val_accuracy: 0.7746
Job ended!
