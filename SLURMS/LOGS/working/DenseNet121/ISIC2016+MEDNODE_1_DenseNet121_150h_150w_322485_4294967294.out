Tue 27 Feb 2024 01:19:08 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'MEDNODE']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet121
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet121 (Functional)     (None, 1024)              7037504   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,697,218
Trainable params: 658,178
Non-trainable params: 7,039,040
_________________________________________________________________
Fitting ISIC2016+MEDNODE_aug_DenseNet121_150h_150w_None model...
model_name: ISIC2016+MEDNODE_aug_DenseNet121_150h_150w_None
Epoch: 1 loss: 0.8543 accuracy: 0.5766 val_loss: 0.7022 val_accuracy: 0.2383
Epoch: 2 loss: 0.8295 accuracy: 0.5795 val_loss: 0.7266 val_accuracy: 0.2336
Epoch: 3 loss: 0.8112 accuracy: 0.5868 val_loss: 0.7411 val_accuracy: 0.2336
Epoch: 4 loss: 0.7568 accuracy: 0.6151 val_loss: 0.7594 val_accuracy: 0.2336
Epoch: 5 loss: 0.7036 accuracy: 0.6311 val_loss: 0.7712 val_accuracy: 0.2336
Epoch: 6 loss: 0.7227 accuracy: 0.6216 val_loss: 0.8083 val_accuracy: 0.2336
Epoch: 7 loss: 0.7099 accuracy: 0.6369 val_loss: 0.8271 val_accuracy: 0.2336
Epoch: 8 loss: 0.6779 accuracy: 0.6536 val_loss: 0.7640 val_accuracy: 0.3037
Epoch: 9 loss: 0.6927 accuracy: 0.6449 val_loss: 0.7684 val_accuracy: 0.3037
Epoch: 10 loss: 0.6754 accuracy: 0.6471 val_loss: 0.6918 val_accuracy: 0.4579
Epoch: 11 loss: 0.7218 accuracy: 0.6325 val_loss: 0.5928 val_accuracy: 0.7290
Epoch: 12 loss: 0.6871 accuracy: 0.6340 val_loss: 0.6998 val_accuracy: 0.4953
Epoch: 13 loss: 0.6693 accuracy: 0.6630 val_loss: 0.5854 val_accuracy: 0.7430
Epoch: 14 loss: 0.7017 accuracy: 0.6391 val_loss: 0.7084 val_accuracy: 0.5327
Epoch: 15 loss: 0.6774 accuracy: 0.6645 val_loss: 0.5713 val_accuracy: 0.7243
Epoch: 16 loss: 0.6741 accuracy: 0.6747 val_loss: 0.5573 val_accuracy: 0.7523
Epoch: 17 loss: 0.6324 accuracy: 0.6797 val_loss: 0.5528 val_accuracy: 0.7430
Epoch: 18 loss: 0.6672 accuracy: 0.6478 val_loss: 0.5493 val_accuracy: 0.7617
Epoch: 19 loss: 0.6870 accuracy: 0.6601 val_loss: 0.5125 val_accuracy: 0.7804
Epoch: 20 loss: 0.6758 accuracy: 0.6667 val_loss: 0.5157 val_accuracy: 0.7804
Job ended!
