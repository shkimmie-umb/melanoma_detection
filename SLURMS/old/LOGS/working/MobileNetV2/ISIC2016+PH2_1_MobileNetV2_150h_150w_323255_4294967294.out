Tue 27 Feb 2024 11:33:25 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'PH2']
IMG_SIZE: [150, 150]
CLASSIFIER: MobileNetV2
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
mobilenetv2_1.00_150 (Functi (None, 1280)              2257984   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 3,048,770
Trainable params: 789,250
Non-trainable params: 2,259,520
_________________________________________________________________
Fitting ISIC2016+PH2_aug_MobileNetV2_150h_150w_None model...
model_name: ISIC2016+PH2_aug_MobileNetV2_150h_150w_None
Epoch: 1 loss: 0.6879 accuracy: 0.5463 val_loss: 0.6669 val_accuracy: 0.8000
Epoch: 2 loss: 0.6901 accuracy: 0.5374 val_loss: 0.6452 val_accuracy: 0.8000
Epoch: 3 loss: 0.6752 accuracy: 0.5923 val_loss: 0.6272 val_accuracy: 0.8000
Epoch: 4 loss: 0.6734 accuracy: 0.5957 val_loss: 0.6133 val_accuracy: 0.8000
Epoch: 5 loss: 0.6751 accuracy: 0.6129 val_loss: 0.6046 val_accuracy: 0.8000
Epoch: 6 loss: 0.6676 accuracy: 0.6033 val_loss: 0.5991 val_accuracy: 0.8000
Epoch: 7 loss: 0.6724 accuracy: 0.6170 val_loss: 0.5944 val_accuracy: 0.8000
Epoch: 8 loss: 0.6687 accuracy: 0.6163 val_loss: 0.5883 val_accuracy: 0.8000
Epoch: 9 loss: 0.6675 accuracy: 0.6163 val_loss: 0.5883 val_accuracy: 0.8000
Epoch: 10 loss: 0.6658 accuracy: 0.6163 val_loss: 0.5863 val_accuracy: 0.8000
Epoch: 11 loss: 0.6664 accuracy: 0.6170 val_loss: 0.5897 val_accuracy: 0.8000
Epoch: 12 loss: 0.6685 accuracy: 0.6163 val_loss: 0.5834 val_accuracy: 0.8000
Epoch: 13 loss: 0.6634 accuracy: 0.6211 val_loss: 0.5832 val_accuracy: 0.8000
Epoch: 14 loss: 0.6642 accuracy: 0.6205 val_loss: 0.5787 val_accuracy: 0.8000
Epoch: 15 loss: 0.6646 accuracy: 0.6198 val_loss: 0.5773 val_accuracy: 0.8000
Epoch: 16 loss: 0.6677 accuracy: 0.6156 val_loss: 0.5778 val_accuracy: 0.8000
Epoch: 17 loss: 0.6660 accuracy: 0.6170 val_loss: 0.5790 val_accuracy: 0.8000
Epoch: 18 loss: 0.6659 accuracy: 0.6177 val_loss: 0.5636 val_accuracy: 0.8000
Epoch: 19 loss: 0.6649 accuracy: 0.6198 val_loss: 0.5626 val_accuracy: 0.8000
Epoch: 20 loss: 0.6665 accuracy: 0.6170 val_loss: 0.5599 val_accuracy: 0.8000
Job ended!
