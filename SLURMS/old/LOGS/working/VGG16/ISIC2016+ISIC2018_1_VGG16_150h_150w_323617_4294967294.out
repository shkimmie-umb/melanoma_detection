Wed 28 Feb 2024 10:00:56 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'ISIC2018']
IMG_SIZE: [150, 150]
CLASSIFIER: VGG16
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
vgg16 (Functional)           (None, 512)               14714688  
_________________________________________________________________
dense (Dense)                (None, 512)               262656    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 15,112,258
Trainable params: 396,034
Non-trainable params: 14,716,224
_________________________________________________________________
Fitting ISIC2016+ISIC2018_aug_VGG16_150h_150w_None model...
model_name: ISIC2016+ISIC2018_aug_VGG16_150h_150w_None
Epoch: 1 loss: 0.7047 accuracy: 0.6467 val_loss: 0.5311 val_accuracy: 0.8016
Epoch: 2 loss: 0.5620 accuracy: 0.7204 val_loss: 0.4552 val_accuracy: 0.7802
Epoch: 3 loss: 0.5326 accuracy: 0.7384 val_loss: 0.5026 val_accuracy: 0.7560
Epoch: 4 loss: 0.5102 accuracy: 0.7500 val_loss: 0.4971 val_accuracy: 0.7641
Epoch: 5 loss: 0.4958 accuracy: 0.7613 val_loss: 0.4029 val_accuracy: 0.8445
Epoch: 6 loss: 0.4889 accuracy: 0.7610 val_loss: 0.3785 val_accuracy: 0.8472
Epoch: 7 loss: 0.4782 accuracy: 0.7686 val_loss: 0.4348 val_accuracy: 0.7936
Epoch: 8 loss: 0.4678 accuracy: 0.7764 val_loss: 0.4189 val_accuracy: 0.8311
Epoch: 9 loss: 0.4630 accuracy: 0.7800 val_loss: 0.4080 val_accuracy: 0.8284
Epoch: 10 loss: 0.4538 accuracy: 0.7869 val_loss: 0.4020 val_accuracy: 0.8231
Epoch: 11 loss: 0.4453 accuracy: 0.7886 val_loss: 0.4036 val_accuracy: 0.8231
Epoch: 12 loss: 0.4448 accuracy: 0.7873 val_loss: 0.3975 val_accuracy: 0.8150
Epoch: 13 loss: 0.4409 accuracy: 0.7930 val_loss: 0.3983 val_accuracy: 0.8204
Epoch: 14 loss: 0.4325 accuracy: 0.7957 val_loss: 0.3885 val_accuracy: 0.8257
Epoch: 15 loss: 0.4320 accuracy: 0.7971 val_loss: 0.4231 val_accuracy: 0.8177
Epoch: 16 loss: 0.4291 accuracy: 0.8004 val_loss: 0.4097 val_accuracy: 0.8284
Epoch: 17 loss: 0.4206 accuracy: 0.8039 val_loss: 0.4009 val_accuracy: 0.8338
Epoch: 18 loss: 0.4223 accuracy: 0.8030 val_loss: 0.3946 val_accuracy: 0.8311
Epoch: 19 loss: 0.4226 accuracy: 0.8038 val_loss: 0.4070 val_accuracy: 0.8391
Epoch: 20 loss: 0.4207 accuracy: 0.8057 val_loss: 0.3891 val_accuracy: 0.8365
Job ended!
