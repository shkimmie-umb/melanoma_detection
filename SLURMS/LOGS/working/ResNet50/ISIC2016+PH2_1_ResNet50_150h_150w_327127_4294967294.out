Sun 03 Mar 2024 12:33:34 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'PH2']
IMG_SIZE: [150, 150]
CLASSIFIER: ResNet50
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
resnet50 (Functional)        (None, 2048)              23587712  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 24,771,714
Trainable params: 1,182,466
Non-trainable params: 23,589,248
_________________________________________________________________
Fitting ISIC2016+PH2_aug_ResNet50_150h_150w_None model...
model_name: ISIC2016+PH2_aug_ResNet50_150h_150w_None
Epoch: 1 loss: 0.7384 accuracy: 0.6582 val_loss: 0.5648 val_accuracy: 0.8000
Epoch: 2 loss: 0.5606 accuracy: 0.7515 val_loss: 0.4317 val_accuracy: 0.8000
Epoch: 3 loss: 0.4821 accuracy: 0.7742 val_loss: 0.4000 val_accuracy: 0.8333
Epoch: 4 loss: 0.4543 accuracy: 0.8010 val_loss: 0.4048 val_accuracy: 0.8111
Epoch: 5 loss: 0.4098 accuracy: 0.8250 val_loss: 0.3968 val_accuracy: 0.8222
Epoch: 6 loss: 0.3388 accuracy: 0.8579 val_loss: 0.3985 val_accuracy: 0.8111
Epoch: 7 loss: 0.3216 accuracy: 0.8668 val_loss: 0.4289 val_accuracy: 0.8111
Epoch: 8 loss: 0.2763 accuracy: 0.8868 val_loss: 0.4480 val_accuracy: 0.7722
Epoch: 9 loss: 0.2506 accuracy: 0.8964 val_loss: 0.4539 val_accuracy: 0.7889
Epoch: 10 loss: 0.2377 accuracy: 0.9012 val_loss: 0.4346 val_accuracy: 0.7833
Epoch: 11 loss: 0.2344 accuracy: 0.9060 val_loss: 0.4702 val_accuracy: 0.8000
Epoch: 12 loss: 0.2103 accuracy: 0.9218 val_loss: 0.4435 val_accuracy: 0.8167
Epoch: 13 loss: 0.1939 accuracy: 0.9204 val_loss: 0.4656 val_accuracy: 0.7889
Epoch: 14 loss: 0.1763 accuracy: 0.9341 val_loss: 0.4570 val_accuracy: 0.7889
Epoch: 15 loss: 0.1601 accuracy: 0.9417 val_loss: 0.4686 val_accuracy: 0.8222
Epoch: 16 loss: 0.1399 accuracy: 0.9540 val_loss: 0.4727 val_accuracy: 0.8167
Epoch: 17 loss: 0.1414 accuracy: 0.9478 val_loss: 0.4875 val_accuracy: 0.8167
Epoch: 18 loss: 0.1191 accuracy: 0.9574 val_loss: 0.4579 val_accuracy: 0.8333
Epoch: 19 loss: 0.1114 accuracy: 0.9609 val_loss: 0.4690 val_accuracy: 0.8278
Epoch: 20 loss: 0.0938 accuracy: 0.9667 val_loss: 0.4846 val_accuracy: 0.8056
Job ended!
