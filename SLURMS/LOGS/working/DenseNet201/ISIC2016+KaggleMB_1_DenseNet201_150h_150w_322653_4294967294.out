Tue 27 Feb 2024 03:55:43 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'KaggleMB']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet201
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet201 (Functional)     (None, 1920)              18321984  
_________________________________________________________________
dense (Dense)                (None, 512)               983552    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 19,440,450
Trainable params: 1,116,930
Non-trainable params: 18,323,520
_________________________________________________________________
Fitting ISIC2016+KaggleMB_aug_DenseNet201_150h_150w_None model...
model_name: ISIC2016+KaggleMB_aug_DenseNet201_150h_150w_None
Epoch: 1 loss: 0.7911 accuracy: 0.6073 val_loss: 0.6529 val_accuracy: 0.6271
Epoch: 2 loss: 0.6895 accuracy: 0.6510 val_loss: 0.6404 val_accuracy: 0.7105
Epoch: 3 loss: 0.6662 accuracy: 0.6721 val_loss: 0.6092 val_accuracy: 0.6935
Epoch: 4 loss: 0.6566 accuracy: 0.6696 val_loss: 0.5255 val_accuracy: 0.7090
Epoch: 5 loss: 0.6049 accuracy: 0.6935 val_loss: 0.6495 val_accuracy: 0.6299
Epoch: 6 loss: 0.5929 accuracy: 0.6935 val_loss: 0.5270 val_accuracy: 0.7175
Epoch: 7 loss: 0.5907 accuracy: 0.6986 val_loss: 0.5453 val_accuracy: 0.7105
Epoch: 8 loss: 0.5920 accuracy: 0.7099 val_loss: 0.5100 val_accuracy: 0.7105
Epoch: 9 loss: 0.5854 accuracy: 0.6999 val_loss: 0.5697 val_accuracy: 0.6709
Epoch: 10 loss: 0.5586 accuracy: 0.7131 val_loss: 0.5180 val_accuracy: 0.7020
Epoch: 11 loss: 0.5548 accuracy: 0.7133 val_loss: 0.4893 val_accuracy: 0.7500
Epoch: 12 loss: 0.5639 accuracy: 0.7063 val_loss: 0.5095 val_accuracy: 0.7133
Epoch: 13 loss: 0.5612 accuracy: 0.7097 val_loss: 0.4755 val_accuracy: 0.7613
Epoch: 14 loss: 0.5551 accuracy: 0.7093 val_loss: 0.4967 val_accuracy: 0.7472
Epoch: 15 loss: 0.5577 accuracy: 0.7165 val_loss: 0.4943 val_accuracy: 0.7006
Epoch: 16 loss: 0.5393 accuracy: 0.7197 val_loss: 0.5445 val_accuracy: 0.6610
Epoch: 17 loss: 0.5482 accuracy: 0.7065 val_loss: 0.4740 val_accuracy: 0.7514
Epoch: 18 loss: 0.5326 accuracy: 0.7214 val_loss: 0.5553 val_accuracy: 0.7105
Epoch: 19 loss: 0.5324 accuracy: 0.7193 val_loss: 0.4871 val_accuracy: 0.7401
Epoch: 20 loss: 0.5336 accuracy: 0.7225 val_loss: 0.6032 val_accuracy: 0.6638
Job ended!
