Tue 27 Feb 2024 08:19:51 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2018']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB7
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb7 (Functional)  (None, 2560)              64097687  
_________________________________________________________________
dense (Dense)                (None, 512)               1311232   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 65,543,833
Trainable params: 1,444,610
Non-trainable params: 64,099,223
_________________________________________________________________
Fitting ISIC2018_aug_EfficientNetB7_150h_150w_None model...
model_name: ISIC2018_aug_EfficientNetB7_150h_150w_None
Epoch: 1 loss: 0.6152 accuracy: 0.6846 val_loss: 0.4602 val_accuracy: 0.8912
Epoch: 2 loss: 0.5717 accuracy: 0.7262 val_loss: 0.3815 val_accuracy: 0.8912
Epoch: 3 loss: 0.5673 accuracy: 0.7271 val_loss: 0.3675 val_accuracy: 0.8912
Epoch: 4 loss: 0.5572 accuracy: 0.7275 val_loss: 0.3702 val_accuracy: 0.8912
Epoch: 5 loss: 0.5501 accuracy: 0.7260 val_loss: 0.3469 val_accuracy: 0.8912
Epoch: 6 loss: 0.5504 accuracy: 0.7263 val_loss: 0.3396 val_accuracy: 0.8912
Epoch: 7 loss: 0.5458 accuracy: 0.7253 val_loss: 0.3468 val_accuracy: 0.8912
Epoch: 8 loss: 0.5468 accuracy: 0.7262 val_loss: 0.3572 val_accuracy: 0.8912
Epoch: 9 loss: 0.5475 accuracy: 0.7260 val_loss: 0.3436 val_accuracy: 0.8912
Epoch: 10 loss: 0.5424 accuracy: 0.7235 val_loss: 0.4153 val_accuracy: 0.8912
Epoch: 11 loss: 0.5387 accuracy: 0.7257 val_loss: 0.3840 val_accuracy: 0.8912
Epoch: 12 loss: 0.5366 accuracy: 0.7240 val_loss: 0.3264 val_accuracy: 0.8912
Epoch: 13 loss: 0.5375 accuracy: 0.7234 val_loss: 0.3932 val_accuracy: 0.8912
Epoch: 14 loss: 0.5352 accuracy: 0.7234 val_loss: 0.3778 val_accuracy: 0.8912
Epoch: 15 loss: 0.5340 accuracy: 0.7257 val_loss: 0.3216 val_accuracy: 0.8912
Epoch: 16 loss: 0.5316 accuracy: 0.7239 val_loss: 0.3664 val_accuracy: 0.8912
Epoch: 17 loss: 0.5295 accuracy: 0.7266 val_loss: 0.4651 val_accuracy: 0.8912
Epoch: 18 loss: 0.5325 accuracy: 0.7259 val_loss: 0.3392 val_accuracy: 0.8912
Epoch: 19 loss: 0.5385 accuracy: 0.7227 val_loss: 0.3958 val_accuracy: 0.8912
Epoch: 20 loss: 0.5349 accuracy: 0.7246 val_loss: 0.3133 val_accuracy: 0.8912
Job ended!
