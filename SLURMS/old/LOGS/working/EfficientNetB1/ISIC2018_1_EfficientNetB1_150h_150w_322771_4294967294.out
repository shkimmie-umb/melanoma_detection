Tue 27 Feb 2024 07:00:27 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2018']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB1
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb1 (Functional)  (None, 1280)              6575239   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,366,025
Trainable params: 789,250
Non-trainable params: 6,576,775
_________________________________________________________________
Fitting ISIC2018_aug_EfficientNetB1_150h_150w_None model...
model_name: ISIC2018_aug_EfficientNetB1_150h_150w_None
Epoch: 1 loss: 0.6231 accuracy: 0.6891 val_loss: 0.4430 val_accuracy: 0.8912
Epoch: 2 loss: 0.5865 accuracy: 0.7269 val_loss: 0.4341 val_accuracy: 0.8912
Epoch: 3 loss: 0.5844 accuracy: 0.7274 val_loss: 0.4477 val_accuracy: 0.8912
Epoch: 4 loss: 0.5836 accuracy: 0.7275 val_loss: 0.4324 val_accuracy: 0.8912
Epoch: 5 loss: 0.5788 accuracy: 0.7274 val_loss: 0.4049 val_accuracy: 0.8912
Epoch: 6 loss: 0.5774 accuracy: 0.7272 val_loss: 0.3974 val_accuracy: 0.8912
Epoch: 7 loss: 0.5760 accuracy: 0.7270 val_loss: 0.3601 val_accuracy: 0.8912
Epoch: 8 loss: 0.5706 accuracy: 0.7275 val_loss: 0.4235 val_accuracy: 0.8912
Epoch: 9 loss: 0.5681 accuracy: 0.7270 val_loss: 0.4170 val_accuracy: 0.8912
Epoch: 10 loss: 0.5649 accuracy: 0.7266 val_loss: 0.4494 val_accuracy: 0.8912
Epoch: 11 loss: 0.5623 accuracy: 0.7262 val_loss: 0.4322 val_accuracy: 0.8912
Epoch: 12 loss: 0.5590 accuracy: 0.7249 val_loss: 0.3450 val_accuracy: 0.8912
Epoch: 13 loss: 0.5563 accuracy: 0.7258 val_loss: 0.3827 val_accuracy: 0.8912
Epoch: 14 loss: 0.5634 accuracy: 0.7266 val_loss: 0.3694 val_accuracy: 0.8912
Epoch: 15 loss: 0.5600 accuracy: 0.7271 val_loss: 0.4426 val_accuracy: 0.8912
Epoch: 16 loss: 0.5596 accuracy: 0.7268 val_loss: 0.3701 val_accuracy: 0.8912
Epoch: 17 loss: 0.5528 accuracy: 0.7266 val_loss: 0.3844 val_accuracy: 0.8912
Epoch: 18 loss: 0.5540 accuracy: 0.7263 val_loss: 0.3912 val_accuracy: 0.8912
Epoch: 19 loss: 0.5500 accuracy: 0.7272 val_loss: 0.3334 val_accuracy: 0.8912
Epoch: 20 loss: 0.5493 accuracy: 0.7261 val_loss: 0.3223 val_accuracy: 0.8912
Job ended!
