Fri 01 Mar 2024 05:28:04 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2018']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB2
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb2 (Functional)  (None, 1408)              7768569   
_________________________________________________________________
dense (Dense)                (None, 512)               721408    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 8,624,891
Trainable params: 854,786
Non-trainable params: 7,770,105
_________________________________________________________________
Fitting ISIC2018_aug_EfficientNetB2_150h_150w_None model...
model_name: ISIC2018_aug_EfficientNetB2_150h_150w_None
Epoch: 1 loss: 0.6182 accuracy: 0.7267 val_loss: 0.2826 val_accuracy: 0.9067
Epoch: 2 loss: 0.4594 accuracy: 0.8063 val_loss: 0.2454 val_accuracy: 0.9016
Epoch: 3 loss: 0.4186 accuracy: 0.8204 val_loss: 0.2268 val_accuracy: 0.9223
Epoch: 4 loss: 0.3938 accuracy: 0.8327 val_loss: 0.2260 val_accuracy: 0.9171
Epoch: 5 loss: 0.3632 accuracy: 0.8427 val_loss: 0.2278 val_accuracy: 0.9119
Epoch: 6 loss: 0.3522 accuracy: 0.8490 val_loss: 0.2132 val_accuracy: 0.9171
Epoch: 7 loss: 0.3456 accuracy: 0.8551 val_loss: 0.2111 val_accuracy: 0.9171
Epoch: 8 loss: 0.3302 accuracy: 0.8561 val_loss: 0.2287 val_accuracy: 0.9119
Epoch: 9 loss: 0.3251 accuracy: 0.8602 val_loss: 0.2121 val_accuracy: 0.9326
Epoch: 10 loss: 0.3201 accuracy: 0.8627 val_loss: 0.2064 val_accuracy: 0.9275
Epoch: 11 loss: 0.3084 accuracy: 0.8679 val_loss: 0.2166 val_accuracy: 0.9119
Epoch: 12 loss: 0.2945 accuracy: 0.8740 val_loss: 0.1961 val_accuracy: 0.9223
Epoch: 13 loss: 0.2879 accuracy: 0.8781 val_loss: 0.2031 val_accuracy: 0.9275
Epoch: 14 loss: 0.2837 accuracy: 0.8778 val_loss: 0.2264 val_accuracy: 0.9171
Epoch: 15 loss: 0.2763 accuracy: 0.8816 val_loss: 0.2265 val_accuracy: 0.9326
Epoch: 16 loss: 0.2720 accuracy: 0.8874 val_loss: 0.2232 val_accuracy: 0.9171
Epoch: 17 loss: 0.2632 accuracy: 0.8889 val_loss: 0.2258 val_accuracy: 0.9067
Epoch: 18 loss: 0.2590 accuracy: 0.8919 val_loss: 0.2572 val_accuracy: 0.9119
Epoch: 19 loss: 0.2541 accuracy: 0.8948 val_loss: 0.2282 val_accuracy: 0.8912
Epoch: 20 loss: 0.2521 accuracy: 0.8947 val_loss: 0.2128 val_accuracy: 0.9171
Job ended!
