Tue 27 Feb 2024 05:17:26 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['_7_point_criteria']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB7
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb7 (Functional)  (None, 2560)              64097687  
_________________________________________________________________
dense (Dense)                (None, 512)               1311232   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 65,543,833
Trainable params: 1,444,610
Non-trainable params: 64,099,223
_________________________________________________________________
Fitting _7_point_criteria_aug_EfficientNetB7_150h_150w_None model...
model_name: _7_point_criteria_aug_EfficientNetB7_150h_150w_None
Epoch: 1 loss: 0.6821 accuracy: 0.5591 val_loss: 0.6839 val_accuracy: 0.6995
Epoch: 2 loss: 0.6761 accuracy: 0.5874 val_loss: 0.6764 val_accuracy: 0.6995
Epoch: 3 loss: 0.6560 accuracy: 0.5973 val_loss: 0.6701 val_accuracy: 0.6995
Epoch: 4 loss: 0.6585 accuracy: 0.6173 val_loss: 0.6638 val_accuracy: 0.6995
Epoch: 5 loss: 0.6626 accuracy: 0.6106 val_loss: 0.6583 val_accuracy: 0.6995
Epoch: 6 loss: 0.6536 accuracy: 0.6190 val_loss: 0.6541 val_accuracy: 0.6995
Epoch: 7 loss: 0.6475 accuracy: 0.6240 val_loss: 0.6503 val_accuracy: 0.6995
Epoch: 8 loss: 0.6407 accuracy: 0.6290 val_loss: 0.6448 val_accuracy: 0.6995
Epoch: 9 loss: 0.6317 accuracy: 0.6562 val_loss: 0.6417 val_accuracy: 0.6995
Epoch: 10 loss: 0.6355 accuracy: 0.6339 val_loss: 0.6408 val_accuracy: 0.6995
Epoch: 11 loss: 0.6451 accuracy: 0.6306 val_loss: 0.6387 val_accuracy: 0.6995
Epoch: 12 loss: 0.6344 accuracy: 0.6506 val_loss: 0.6377 val_accuracy: 0.6995
Epoch: 13 loss: 0.6354 accuracy: 0.6389 val_loss: 0.6357 val_accuracy: 0.6995
Epoch: 14 loss: 0.6475 accuracy: 0.6240 val_loss: 0.6348 val_accuracy: 0.6995
Epoch: 15 loss: 0.6380 accuracy: 0.6489 val_loss: 0.6335 val_accuracy: 0.6995
Epoch: 16 loss: 0.6240 accuracy: 0.6872 val_loss: 0.6325 val_accuracy: 0.6995
Epoch: 17 loss: 0.6262 accuracy: 0.6589 val_loss: 0.6324 val_accuracy: 0.6995
Epoch: 18 loss: 0.6363 accuracy: 0.6622 val_loss: 0.6315 val_accuracy: 0.6995
Epoch: 19 loss: 0.6321 accuracy: 0.6339 val_loss: 0.6306 val_accuracy: 0.6995
Epoch: 20 loss: 0.6340 accuracy: 0.6639 val_loss: 0.6292 val_accuracy: 0.6995
Job ended!
