Fri 01 Mar 2024 10:42:22 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2018']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB5
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb5 (Functional)  (None, 2048)              28513527  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 29,697,529
Trainable params: 1,182,466
Non-trainable params: 28,515,063
_________________________________________________________________
Fitting ISIC2018_aug_EfficientNetB5_150h_150w_None model...
model_name: ISIC2018_aug_EfficientNetB5_150h_150w_None
Epoch: 1 loss: 0.6208 accuracy: 0.7137 val_loss: 0.3711 val_accuracy: 0.8653
Epoch: 2 loss: 0.4724 accuracy: 0.7909 val_loss: 0.2777 val_accuracy: 0.8964
Epoch: 3 loss: 0.4364 accuracy: 0.8065 val_loss: 0.2411 val_accuracy: 0.9016
Epoch: 4 loss: 0.4174 accuracy: 0.8175 val_loss: 0.2715 val_accuracy: 0.8860
Epoch: 5 loss: 0.4001 accuracy: 0.8223 val_loss: 0.2406 val_accuracy: 0.9016
Epoch: 6 loss: 0.3938 accuracy: 0.8264 val_loss: 0.2529 val_accuracy: 0.8808
Epoch: 7 loss: 0.3787 accuracy: 0.8333 val_loss: 0.2534 val_accuracy: 0.8912
Epoch: 8 loss: 0.3707 accuracy: 0.8397 val_loss: 0.2367 val_accuracy: 0.9016
Epoch: 9 loss: 0.3591 accuracy: 0.8430 val_loss: 0.2762 val_accuracy: 0.8756
Epoch: 10 loss: 0.3536 accuracy: 0.8432 val_loss: 0.2329 val_accuracy: 0.9067
Epoch: 11 loss: 0.3491 accuracy: 0.8473 val_loss: 0.2165 val_accuracy: 0.9016
Epoch: 12 loss: 0.3488 accuracy: 0.8479 val_loss: 0.2257 val_accuracy: 0.8912
Epoch: 13 loss: 0.3389 accuracy: 0.8529 val_loss: 0.2396 val_accuracy: 0.9016
Epoch: 14 loss: 0.3384 accuracy: 0.8555 val_loss: 0.2239 val_accuracy: 0.9171
Epoch: 15 loss: 0.3334 accuracy: 0.8503 val_loss: 0.2338 val_accuracy: 0.9067
Epoch: 16 loss: 0.3281 accuracy: 0.8571 val_loss: 0.2307 val_accuracy: 0.9067
Epoch: 17 loss: 0.3246 accuracy: 0.8562 val_loss: 0.2260 val_accuracy: 0.9016
Epoch: 18 loss: 0.3241 accuracy: 0.8561 val_loss: 0.2441 val_accuracy: 0.8912
Epoch: 19 loss: 0.3138 accuracy: 0.8658 val_loss: 0.2263 val_accuracy: 0.8964
Epoch: 20 loss: 0.3122 accuracy: 0.8626 val_loss: 0.2115 val_accuracy: 0.9016
Job ended!
