Tue 27 Feb 2024 07:03:01 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['PAD_UFES_20']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB1
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb1 (Functional)  (None, 1280)              6575239   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,366,025
Trainable params: 789,250
Non-trainable params: 6,576,775
_________________________________________________________________
Fitting PAD_UFES_20_aug_EfficientNetB1_150h_150w_None model...
model_name: PAD_UFES_20_aug_EfficientNetB1_150h_150w_None
Epoch: 1 loss: 0.6663 accuracy: 0.6105 val_loss: 0.5954 val_accuracy: 0.9804
Epoch: 2 loss: 0.6019 accuracy: 0.7786 val_loss: 0.5091 val_accuracy: 0.9804
Epoch: 3 loss: 0.5536 accuracy: 0.8246 val_loss: 0.4320 val_accuracy: 0.9804
Epoch: 4 loss: 0.5145 accuracy: 0.8292 val_loss: 0.3616 val_accuracy: 0.9804
Epoch: 5 loss: 0.4854 accuracy: 0.8296 val_loss: 0.3164 val_accuracy: 0.9804
Epoch: 6 loss: 0.4710 accuracy: 0.8292 val_loss: 0.2844 val_accuracy: 0.9804
Epoch: 7 loss: 0.4617 accuracy: 0.8296 val_loss: 0.2537 val_accuracy: 0.9804
Epoch: 8 loss: 0.4542 accuracy: 0.8304 val_loss: 0.2522 val_accuracy: 0.9804
Epoch: 9 loss: 0.4580 accuracy: 0.8285 val_loss: 0.2704 val_accuracy: 0.9804
Epoch: 10 loss: 0.4543 accuracy: 0.8292 val_loss: 0.2172 val_accuracy: 0.9804
Epoch: 11 loss: 0.4547 accuracy: 0.8285 val_loss: 0.1922 val_accuracy: 0.9804
Epoch: 12 loss: 0.4555 accuracy: 0.8285 val_loss: 0.2268 val_accuracy: 0.9804
Epoch: 13 loss: 0.4557 accuracy: 0.8273 val_loss: 0.2245 val_accuracy: 0.9804
Epoch: 14 loss: 0.4569 accuracy: 0.8281 val_loss: 0.2616 val_accuracy: 0.9804
Epoch: 15 loss: 0.4566 accuracy: 0.8281 val_loss: 0.2379 val_accuracy: 0.9804
Epoch: 16 loss: 0.4533 accuracy: 0.8300 val_loss: 0.2246 val_accuracy: 0.9804
Epoch: 17 loss: 0.4543 accuracy: 0.8288 val_loss: 0.2148 val_accuracy: 0.9804
Epoch: 18 loss: 0.4541 accuracy: 0.8288 val_loss: 0.2244 val_accuracy: 0.9804
Epoch: 19 loss: 0.4520 accuracy: 0.8296 val_loss: 0.1858 val_accuracy: 0.9804
Epoch: 20 loss: 0.4526 accuracy: 0.8288 val_loss: 0.1911 val_accuracy: 0.9804
Job ended!
