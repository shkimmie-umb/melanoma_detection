Fri 01 Mar 2024 04:05:02 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'PH2']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB1
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb1 (Functional)  (None, 1280)              6575239   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,366,025
Trainable params: 789,250
Non-trainable params: 6,576,775
_________________________________________________________________
Fitting ISIC2016+PH2_aug_EfficientNetB1_150h_150w_None model...
model_name: ISIC2016+PH2_aug_EfficientNetB1_150h_150w_None
Epoch: 1 loss: 0.8740 accuracy: 0.6404 val_loss: 0.5720 val_accuracy: 0.7611
Epoch: 2 loss: 0.6529 accuracy: 0.7035 val_loss: 0.5842 val_accuracy: 0.7167
Epoch: 3 loss: 0.5865 accuracy: 0.7433 val_loss: 0.5886 val_accuracy: 0.7222
Epoch: 4 loss: 0.5130 accuracy: 0.7673 val_loss: 0.5215 val_accuracy: 0.7500
Epoch: 5 loss: 0.5127 accuracy: 0.7639 val_loss: 0.5359 val_accuracy: 0.7222
Epoch: 6 loss: 0.4904 accuracy: 0.7769 val_loss: 0.5290 val_accuracy: 0.7278
Epoch: 7 loss: 0.4520 accuracy: 0.7955 val_loss: 0.4998 val_accuracy: 0.7389
Epoch: 8 loss: 0.4356 accuracy: 0.8078 val_loss: 0.4873 val_accuracy: 0.7500
Epoch: 9 loss: 0.4102 accuracy: 0.8161 val_loss: 0.4257 val_accuracy: 0.7778
Epoch: 10 loss: 0.4288 accuracy: 0.8058 val_loss: 0.4491 val_accuracy: 0.7722
Epoch: 11 loss: 0.3755 accuracy: 0.8387 val_loss: 0.4446 val_accuracy: 0.7500
Epoch: 12 loss: 0.3718 accuracy: 0.8339 val_loss: 0.4493 val_accuracy: 0.7722
Epoch: 13 loss: 0.3602 accuracy: 0.8387 val_loss: 0.4223 val_accuracy: 0.7944
Epoch: 14 loss: 0.3730 accuracy: 0.8339 val_loss: 0.4317 val_accuracy: 0.7944
Epoch: 15 loss: 0.3429 accuracy: 0.8469 val_loss: 0.4270 val_accuracy: 0.7944
Epoch: 16 loss: 0.3326 accuracy: 0.8511 val_loss: 0.4269 val_accuracy: 0.8111
Epoch: 17 loss: 0.3315 accuracy: 0.8593 val_loss: 0.4577 val_accuracy: 0.7611
Epoch: 18 loss: 0.3169 accuracy: 0.8627 val_loss: 0.4336 val_accuracy: 0.7889
Epoch: 19 loss: 0.3175 accuracy: 0.8689 val_loss: 0.4435 val_accuracy: 0.7889
Epoch: 20 loss: 0.2916 accuracy: 0.8717 val_loss: 0.4323 val_accuracy: 0.8000
Job ended!
