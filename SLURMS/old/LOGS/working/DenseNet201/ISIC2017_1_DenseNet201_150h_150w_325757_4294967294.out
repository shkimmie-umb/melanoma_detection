Thu 29 Feb 2024 05:29:16 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2017']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet201
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet201 (Functional)     (None, 1920)              18321984  
_________________________________________________________________
dense (Dense)                (None, 512)               983552    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 19,440,450
Trainable params: 1,116,930
Non-trainable params: 18,323,520
_________________________________________________________________
Fitting ISIC2017_aug_DenseNet201_150h_150w_None model...
model_name: ISIC2017_aug_DenseNet201_150h_150w_None
Epoch: 1 loss: 0.8437 accuracy: 0.6356 val_loss: 0.4542 val_accuracy: 0.8333
Epoch: 2 loss: 0.6309 accuracy: 0.7178 val_loss: 0.3918 val_accuracy: 0.8333
Epoch: 3 loss: 0.5437 accuracy: 0.7555 val_loss: 0.4051 val_accuracy: 0.8267
Epoch: 4 loss: 0.4929 accuracy: 0.7715 val_loss: 0.4353 val_accuracy: 0.8267
Epoch: 5 loss: 0.4407 accuracy: 0.8083 val_loss: 0.4192 val_accuracy: 0.8133
Epoch: 6 loss: 0.4226 accuracy: 0.8093 val_loss: 0.4628 val_accuracy: 0.8267
Epoch: 7 loss: 0.4088 accuracy: 0.8176 val_loss: 0.4409 val_accuracy: 0.8467
Epoch: 8 loss: 0.3659 accuracy: 0.8413 val_loss: 0.4589 val_accuracy: 0.8133
Epoch: 9 loss: 0.3442 accuracy: 0.8557 val_loss: 0.4516 val_accuracy: 0.8333
Epoch: 10 loss: 0.3222 accuracy: 0.8621 val_loss: 0.4823 val_accuracy: 0.8400
Epoch: 11 loss: 0.2872 accuracy: 0.8788 val_loss: 0.4894 val_accuracy: 0.8067
Epoch: 12 loss: 0.2864 accuracy: 0.8751 val_loss: 0.4546 val_accuracy: 0.8200
Epoch: 13 loss: 0.2574 accuracy: 0.8908 val_loss: 0.4944 val_accuracy: 0.8400
Epoch: 14 loss: 0.2500 accuracy: 0.8918 val_loss: 0.5000 val_accuracy: 0.8400
Epoch: 15 loss: 0.2156 accuracy: 0.9112 val_loss: 0.5043 val_accuracy: 0.8067
Epoch: 16 loss: 0.2089 accuracy: 0.9172 val_loss: 0.5161 val_accuracy: 0.8267
Epoch: 17 loss: 0.2044 accuracy: 0.9192 val_loss: 0.5290 val_accuracy: 0.8133
Epoch: 18 loss: 0.1892 accuracy: 0.9248 val_loss: 0.5855 val_accuracy: 0.8267
Epoch: 19 loss: 0.1637 accuracy: 0.9405 val_loss: 0.5795 val_accuracy: 0.8200
Epoch: 20 loss: 0.1583 accuracy: 0.9432 val_loss: 0.5825 val_accuracy: 0.8467
Job ended!
