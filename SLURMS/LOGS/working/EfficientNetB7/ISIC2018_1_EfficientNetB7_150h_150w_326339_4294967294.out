Fri 01 Mar 2024 03:43:33 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2018']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB7
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb7 (Functional)  (None, 2560)              64097687  
_________________________________________________________________
dense (Dense)                (None, 512)               1311232   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 65,543,833
Trainable params: 1,444,610
Non-trainable params: 64,099,223
_________________________________________________________________
Fitting ISIC2018_aug_EfficientNetB7_150h_150w_None model...
model_name: ISIC2018_aug_EfficientNetB7_150h_150w_None
Epoch: 1 loss: 0.6266 accuracy: 0.7278 val_loss: 0.3522 val_accuracy: 0.8446
Epoch: 2 loss: 0.4790 accuracy: 0.7916 val_loss: 0.2602 val_accuracy: 0.9016
Epoch: 3 loss: 0.4422 accuracy: 0.8086 val_loss: 0.2737 val_accuracy: 0.8756
Epoch: 4 loss: 0.4191 accuracy: 0.8189 val_loss: 0.2552 val_accuracy: 0.8964
Epoch: 5 loss: 0.4071 accuracy: 0.8216 val_loss: 0.2658 val_accuracy: 0.8808
Epoch: 6 loss: 0.3900 accuracy: 0.8273 val_loss: 0.2466 val_accuracy: 0.9016
Epoch: 7 loss: 0.3820 accuracy: 0.8329 val_loss: 0.2231 val_accuracy: 0.8912
Epoch: 8 loss: 0.3807 accuracy: 0.8304 val_loss: 0.2387 val_accuracy: 0.8860
Epoch: 9 loss: 0.3737 accuracy: 0.8354 val_loss: 0.2542 val_accuracy: 0.8912
Epoch: 10 loss: 0.3685 accuracy: 0.8380 val_loss: 0.2493 val_accuracy: 0.8912
Epoch: 11 loss: 0.3548 accuracy: 0.8457 val_loss: 0.2283 val_accuracy: 0.9016
Epoch: 12 loss: 0.3516 accuracy: 0.8473 val_loss: 0.2599 val_accuracy: 0.8653
Epoch: 13 loss: 0.3445 accuracy: 0.8486 val_loss: 0.2700 val_accuracy: 0.8756
Epoch: 14 loss: 0.3392 accuracy: 0.8511 val_loss: 0.2710 val_accuracy: 0.8964
Epoch: 15 loss: 0.3406 accuracy: 0.8514 val_loss: 0.2367 val_accuracy: 0.8964
Epoch: 16 loss: 0.3330 accuracy: 0.8531 val_loss: 0.2354 val_accuracy: 0.8912
Epoch: 17 loss: 0.3331 accuracy: 0.8534 val_loss: 0.2407 val_accuracy: 0.8860
Epoch: 18 loss: 0.3274 accuracy: 0.8541 val_loss: 0.2500 val_accuracy: 0.8860
Epoch: 19 loss: 0.3253 accuracy: 0.8587 val_loss: 0.2237 val_accuracy: 0.9016
Epoch: 20 loss: 0.3189 accuracy: 0.8626 val_loss: 0.2454 val_accuracy: 0.8964
Job ended!
