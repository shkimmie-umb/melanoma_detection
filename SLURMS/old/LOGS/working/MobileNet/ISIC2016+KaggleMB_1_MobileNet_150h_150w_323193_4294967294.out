Tue 27 Feb 2024 10:42:44 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'KaggleMB']
IMG_SIZE: [150, 150]
CLASSIFIER: MobileNet
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
mobilenet_1.00_150 (Function (None, 1024)              3228864   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 3,888,578
Trainable params: 658,178
Non-trainable params: 3,230,400
_________________________________________________________________
Fitting ISIC2016+KaggleMB_aug_MobileNet_150h_150w_None model...
model_name: ISIC2016+KaggleMB_aug_MobileNet_150h_150w_None
Epoch: 1 loss: 0.6950 accuracy: 0.5196 val_loss: 0.7135 val_accuracy: 0.3743
Epoch: 2 loss: 0.6902 accuracy: 0.5424 val_loss: 0.7221 val_accuracy: 0.3743
Epoch: 3 loss: 0.6897 accuracy: 0.5493 val_loss: 0.7222 val_accuracy: 0.3743
Epoch: 4 loss: 0.6891 accuracy: 0.5525 val_loss: 0.7253 val_accuracy: 0.3743
Epoch: 5 loss: 0.6879 accuracy: 0.5516 val_loss: 0.7316 val_accuracy: 0.3743
Epoch: 6 loss: 0.6887 accuracy: 0.5550 val_loss: 0.7237 val_accuracy: 0.3743
Epoch: 7 loss: 0.6874 accuracy: 0.5561 val_loss: 0.7326 val_accuracy: 0.3743
Epoch: 8 loss: 0.6877 accuracy: 0.5555 val_loss: 0.7283 val_accuracy: 0.3743
Epoch: 9 loss: 0.6875 accuracy: 0.5552 val_loss: 0.7163 val_accuracy: 0.3743
Epoch: 10 loss: 0.6873 accuracy: 0.5552 val_loss: 0.7428 val_accuracy: 0.3743
Epoch: 11 loss: 0.6870 accuracy: 0.5555 val_loss: 0.7320 val_accuracy: 0.3743
Epoch: 12 loss: 0.6877 accuracy: 0.5550 val_loss: 0.7237 val_accuracy: 0.3743
Epoch: 13 loss: 0.6872 accuracy: 0.5552 val_loss: 0.7286 val_accuracy: 0.3743
Epoch: 14 loss: 0.6871 accuracy: 0.5559 val_loss: 0.7244 val_accuracy: 0.3743
Epoch: 15 loss: 0.6874 accuracy: 0.5548 val_loss: 0.7240 val_accuracy: 0.3743
Epoch: 16 loss: 0.6871 accuracy: 0.5550 val_loss: 0.7277 val_accuracy: 0.3743
Epoch: 17 loss: 0.6875 accuracy: 0.5557 val_loss: 0.7254 val_accuracy: 0.3743
Epoch: 18 loss: 0.6871 accuracy: 0.5557 val_loss: 0.7300 val_accuracy: 0.3743
Epoch: 19 loss: 0.6873 accuracy: 0.5550 val_loss: 0.7354 val_accuracy: 0.3743
Epoch: 20 loss: 0.6871 accuracy: 0.5561 val_loss: 0.7318 val_accuracy: 0.3743
Job ended!
