Tue 27 Feb 2024 12:14:29 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'PH2']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB4
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb4 (Functional)  (None, 1792)              17673823  
_________________________________________________________________
dense (Dense)                (None, 512)               918016    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 18,726,753
Trainable params: 1,051,394
Non-trainable params: 17,675,359
_________________________________________________________________
Fitting ISIC2016+PH2_aug_EfficientNetB4_150h_150w_None model...
model_name: ISIC2016+PH2_aug_EfficientNetB4_150h_150w_None
Epoch: 1 loss: 0.6922 accuracy: 0.5326 val_loss: 0.6635 val_accuracy: 0.8000
Epoch: 2 loss: 0.6878 accuracy: 0.5511 val_loss: 0.6439 val_accuracy: 0.8000
Epoch: 3 loss: 0.6753 accuracy: 0.6019 val_loss: 0.6265 val_accuracy: 0.8000
Epoch: 4 loss: 0.6723 accuracy: 0.5999 val_loss: 0.6149 val_accuracy: 0.8000
Epoch: 5 loss: 0.6734 accuracy: 0.6033 val_loss: 0.6022 val_accuracy: 0.8000
Epoch: 6 loss: 0.6673 accuracy: 0.6184 val_loss: 0.5939 val_accuracy: 0.8000
Epoch: 7 loss: 0.6631 accuracy: 0.6143 val_loss: 0.5854 val_accuracy: 0.8000
Epoch: 8 loss: 0.6662 accuracy: 0.6143 val_loss: 0.5869 val_accuracy: 0.8000
Epoch: 9 loss: 0.6657 accuracy: 0.6177 val_loss: 0.5882 val_accuracy: 0.8000
Epoch: 10 loss: 0.6619 accuracy: 0.6150 val_loss: 0.5856 val_accuracy: 0.8000
Epoch: 11 loss: 0.6637 accuracy: 0.6177 val_loss: 0.5839 val_accuracy: 0.8000
Epoch: 12 loss: 0.6635 accuracy: 0.6205 val_loss: 0.5794 val_accuracy: 0.8000
Epoch: 13 loss: 0.6659 accuracy: 0.6177 val_loss: 0.5695 val_accuracy: 0.8000
Epoch: 14 loss: 0.6631 accuracy: 0.6205 val_loss: 0.5778 val_accuracy: 0.8000
Epoch: 15 loss: 0.6608 accuracy: 0.6170 val_loss: 0.5643 val_accuracy: 0.8000
Epoch: 16 loss: 0.6634 accuracy: 0.6191 val_loss: 0.5674 val_accuracy: 0.8000
Epoch: 17 loss: 0.6601 accuracy: 0.6177 val_loss: 0.5553 val_accuracy: 0.8000
Epoch: 18 loss: 0.6624 accuracy: 0.6184 val_loss: 0.6007 val_accuracy: 0.8000
Epoch: 19 loss: 0.6655 accuracy: 0.6177 val_loss: 0.6206 val_accuracy: 0.8000
Epoch: 20 loss: 0.6638 accuracy: 0.6177 val_loss: 0.6073 val_accuracy: 0.8000
Job ended!
