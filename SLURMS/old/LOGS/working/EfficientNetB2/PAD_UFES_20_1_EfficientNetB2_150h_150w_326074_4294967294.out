Fri 01 Mar 2024 05:30:35 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['PAD_UFES_20']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB2
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb2 (Functional)  (None, 1408)              7768569   
_________________________________________________________________
dense (Dense)                (None, 512)               721408    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 8,624,891
Trainable params: 854,786
Non-trainable params: 7,770,105
_________________________________________________________________
Fitting PAD_UFES_20_aug_EfficientNetB2_150h_150w_None model...
model_name: PAD_UFES_20_aug_EfficientNetB2_150h_150w_None
Epoch: 1 loss: 0.7678 accuracy: 0.6643 val_loss: 0.3965 val_accuracy: 0.9478
Epoch: 2 loss: 0.5849 accuracy: 0.7423 val_loss: 0.3412 val_accuracy: 0.9391
Epoch: 3 loss: 0.4665 accuracy: 0.8027 val_loss: 0.3012 val_accuracy: 0.9413
Epoch: 4 loss: 0.4080 accuracy: 0.8324 val_loss: 0.2483 val_accuracy: 0.9478
Epoch: 5 loss: 0.3363 accuracy: 0.8651 val_loss: 0.2284 val_accuracy: 0.9565
Epoch: 6 loss: 0.3162 accuracy: 0.8752 val_loss: 0.2063 val_accuracy: 0.9478
Epoch: 7 loss: 0.2932 accuracy: 0.8869 val_loss: 0.1970 val_accuracy: 0.9370
Epoch: 8 loss: 0.2536 accuracy: 0.9072 val_loss: 0.1779 val_accuracy: 0.9543
Epoch: 9 loss: 0.2352 accuracy: 0.9173 val_loss: 0.1491 val_accuracy: 0.9609
Epoch: 10 loss: 0.2057 accuracy: 0.9255 val_loss: 0.1392 val_accuracy: 0.9609
Epoch: 11 loss: 0.1992 accuracy: 0.9376 val_loss: 0.1435 val_accuracy: 0.9543
Epoch: 12 loss: 0.1715 accuracy: 0.9446 val_loss: 0.1291 val_accuracy: 0.9609
Epoch: 13 loss: 0.1631 accuracy: 0.9478 val_loss: 0.1276 val_accuracy: 0.9587
Epoch: 14 loss: 0.1521 accuracy: 0.9517 val_loss: 0.1162 val_accuracy: 0.9652
Epoch: 15 loss: 0.1385 accuracy: 0.9552 val_loss: 0.1096 val_accuracy: 0.9652
Epoch: 16 loss: 0.1252 accuracy: 0.9556 val_loss: 0.1018 val_accuracy: 0.9652
Epoch: 17 loss: 0.1226 accuracy: 0.9598 val_loss: 0.1125 val_accuracy: 0.9609
Epoch: 18 loss: 0.1049 accuracy: 0.9700 val_loss: 0.1044 val_accuracy: 0.9674
Epoch: 19 loss: 0.1154 accuracy: 0.9606 val_loss: 0.1026 val_accuracy: 0.9630
Epoch: 20 loss: 0.1064 accuracy: 0.9653 val_loss: 0.0966 val_accuracy: 0.9696
Job ended!
