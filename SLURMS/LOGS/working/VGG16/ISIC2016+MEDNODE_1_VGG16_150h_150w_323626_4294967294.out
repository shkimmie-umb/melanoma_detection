Wed 28 Feb 2024 10:08:48 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'MEDNODE']
IMG_SIZE: [150, 150]
CLASSIFIER: VGG16
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
vgg16 (Functional)           (None, 512)               14714688  
_________________________________________________________________
dense (Dense)                (None, 512)               262656    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 15,112,258
Trainable params: 396,034
Non-trainable params: 14,716,224
_________________________________________________________________
Fitting ISIC2016+MEDNODE_aug_VGG16_150h_150w_None model...
model_name: ISIC2016+MEDNODE_aug_VGG16_150h_150w_None
Epoch: 1 loss: 0.9136 accuracy: 0.5410 val_loss: 0.7104 val_accuracy: 0.2336
Epoch: 2 loss: 0.8627 accuracy: 0.5505 val_loss: 0.7230 val_accuracy: 0.2336
Epoch: 3 loss: 0.8050 accuracy: 0.5853 val_loss: 0.7025 val_accuracy: 0.3458
Epoch: 4 loss: 0.7864 accuracy: 0.5919 val_loss: 0.6892 val_accuracy: 0.5748
Epoch: 5 loss: 0.7544 accuracy: 0.6122 val_loss: 0.6850 val_accuracy: 0.5841
Epoch: 6 loss: 0.7558 accuracy: 0.6100 val_loss: 0.6845 val_accuracy: 0.5701
Epoch: 7 loss: 0.7299 accuracy: 0.6180 val_loss: 0.6479 val_accuracy: 0.6495
Epoch: 8 loss: 0.7381 accuracy: 0.6253 val_loss: 0.6001 val_accuracy: 0.7850
Epoch: 9 loss: 0.7373 accuracy: 0.6035 val_loss: 0.5980 val_accuracy: 0.7664
Epoch: 10 loss: 0.7558 accuracy: 0.6209 val_loss: 0.5773 val_accuracy: 0.7710
Epoch: 11 loss: 0.7079 accuracy: 0.6385 val_loss: 0.6103 val_accuracy: 0.7103
Epoch: 12 loss: 0.7150 accuracy: 0.6347 val_loss: 0.6596 val_accuracy: 0.6542
Epoch: 13 loss: 0.7234 accuracy: 0.6245 val_loss: 0.5292 val_accuracy: 0.7617
Epoch: 14 loss: 0.7092 accuracy: 0.6383 val_loss: 0.5351 val_accuracy: 0.7570
Epoch: 15 loss: 0.6782 accuracy: 0.6669 val_loss: 0.5732 val_accuracy: 0.7804
Epoch: 16 loss: 0.6904 accuracy: 0.6369 val_loss: 0.5274 val_accuracy: 0.7804
Epoch: 17 loss: 0.7323 accuracy: 0.6100 val_loss: 0.5070 val_accuracy: 0.7991
Epoch: 18 loss: 0.6663 accuracy: 0.6797 val_loss: 0.5321 val_accuracy: 0.7710
Epoch: 19 loss: 0.7062 accuracy: 0.6333 val_loss: 0.5225 val_accuracy: 0.7664
Epoch: 20 loss: 0.7087 accuracy: 0.6420 val_loss: 0.5491 val_accuracy: 0.7710
Job ended!
