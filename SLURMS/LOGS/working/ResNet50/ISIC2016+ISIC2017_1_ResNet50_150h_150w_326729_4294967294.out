Fri 01 Mar 2024 09:52:57 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'ISIC2017']
IMG_SIZE: [150, 150]
CLASSIFIER: ResNet50
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
resnet50 (Functional)        (None, 2048)              23587712  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 24,771,714
Trainable params: 1,182,466
Non-trainable params: 23,589,248
_________________________________________________________________
Fitting ISIC2016+ISIC2017_aug_ResNet50_150h_150w_None model...
model_name: ISIC2016+ISIC2017_aug_ResNet50_150h_150w_None
Epoch: 1 loss: 0.8543 accuracy: 0.6331 val_loss: 0.5525 val_accuracy: 0.7889
Epoch: 2 loss: 0.6299 accuracy: 0.7112 val_loss: 0.4703 val_accuracy: 0.8000
Epoch: 3 loss: 0.5373 accuracy: 0.7502 val_loss: 0.4526 val_accuracy: 0.8111
Epoch: 4 loss: 0.4562 accuracy: 0.7788 val_loss: 0.4386 val_accuracy: 0.8333
Epoch: 5 loss: 0.4382 accuracy: 0.8153 val_loss: 0.4241 val_accuracy: 0.8389
Epoch: 6 loss: 0.4066 accuracy: 0.8187 val_loss: 0.4233 val_accuracy: 0.8444
Epoch: 7 loss: 0.3632 accuracy: 0.8413 val_loss: 0.4494 val_accuracy: 0.8167
Epoch: 8 loss: 0.3099 accuracy: 0.8673 val_loss: 0.4810 val_accuracy: 0.7833
Epoch: 9 loss: 0.2824 accuracy: 0.8777 val_loss: 0.4691 val_accuracy: 0.8167
Epoch: 10 loss: 0.2795 accuracy: 0.8820 val_loss: 0.4801 val_accuracy: 0.8111
Epoch: 11 loss: 0.2551 accuracy: 0.8968 val_loss: 0.5061 val_accuracy: 0.7944
Epoch: 12 loss: 0.2326 accuracy: 0.8977 val_loss: 0.5230 val_accuracy: 0.7833
Epoch: 13 loss: 0.2368 accuracy: 0.9029 val_loss: 0.5356 val_accuracy: 0.7833
Epoch: 14 loss: 0.1895 accuracy: 0.9193 val_loss: 0.5328 val_accuracy: 0.8111
Epoch: 15 loss: 0.1612 accuracy: 0.9436 val_loss: 0.5382 val_accuracy: 0.7722
Epoch: 16 loss: 0.1646 accuracy: 0.9428 val_loss: 0.5302 val_accuracy: 0.7722
Epoch: 17 loss: 0.1304 accuracy: 0.9540 val_loss: 0.5086 val_accuracy: 0.8000
Epoch: 18 loss: 0.1364 accuracy: 0.9532 val_loss: 0.5100 val_accuracy: 0.8056
Epoch: 19 loss: 0.1392 accuracy: 0.9523 val_loss: 0.5529 val_accuracy: 0.8000
Epoch: 20 loss: 0.1244 accuracy: 0.9540 val_loss: 0.5185 val_accuracy: 0.8389
Job ended!
