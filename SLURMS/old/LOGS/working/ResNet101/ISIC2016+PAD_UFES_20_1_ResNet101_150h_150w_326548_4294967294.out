Fri 01 Mar 2024 06:34:40 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'PAD_UFES_20']
IMG_SIZE: [150, 150]
CLASSIFIER: ResNet101
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
resnet101 (Functional)       (None, 2048)              42658176  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 43,842,178
Trainable params: 1,182,466
Non-trainable params: 42,659,712
_________________________________________________________________
Fitting ISIC2016+PAD_UFES_20_aug_ResNet101_150h_150w_None model...
model_name: ISIC2016+PAD_UFES_20_aug_ResNet101_150h_150w_None
Epoch: 1 loss: 0.8896 accuracy: 0.6097 val_loss: 0.4527 val_accuracy: 0.7389
Epoch: 2 loss: 0.6031 accuracy: 0.7233 val_loss: 0.5473 val_accuracy: 0.6889
Epoch: 3 loss: 0.5666 accuracy: 0.7389 val_loss: 0.4689 val_accuracy: 0.7778
Epoch: 4 loss: 0.4858 accuracy: 0.7658 val_loss: 0.4434 val_accuracy: 0.7944
Epoch: 5 loss: 0.4327 accuracy: 0.7910 val_loss: 0.4743 val_accuracy: 0.7889
Epoch: 6 loss: 0.3678 accuracy: 0.8430 val_loss: 0.4725 val_accuracy: 0.8056
Epoch: 7 loss: 0.3334 accuracy: 0.8508 val_loss: 0.4920 val_accuracy: 0.8167
Epoch: 8 loss: 0.3085 accuracy: 0.8621 val_loss: 0.4878 val_accuracy: 0.7778
Epoch: 9 loss: 0.2767 accuracy: 0.8881 val_loss: 0.4757 val_accuracy: 0.8333
Epoch: 10 loss: 0.2699 accuracy: 0.8881 val_loss: 0.5052 val_accuracy: 0.8111
Epoch: 11 loss: 0.2662 accuracy: 0.8792 val_loss: 0.4966 val_accuracy: 0.8278
Epoch: 12 loss: 0.2083 accuracy: 0.9237 val_loss: 0.5179 val_accuracy: 0.8278
Epoch: 13 loss: 0.1938 accuracy: 0.9193 val_loss: 0.5279 val_accuracy: 0.8222
Epoch: 14 loss: 0.1952 accuracy: 0.9219 val_loss: 0.5390 val_accuracy: 0.8111
Epoch: 15 loss: 0.1672 accuracy: 0.9358 val_loss: 0.5403 val_accuracy: 0.8111
Epoch: 16 loss: 0.1703 accuracy: 0.9306 val_loss: 0.5572 val_accuracy: 0.8167
Epoch: 17 loss: 0.1528 accuracy: 0.9436 val_loss: 0.5707 val_accuracy: 0.8000
Epoch: 18 loss: 0.1339 accuracy: 0.9523 val_loss: 0.5607 val_accuracy: 0.8167
Epoch: 19 loss: 0.1291 accuracy: 0.9532 val_loss: 0.5515 val_accuracy: 0.8167
Epoch: 20 loss: 0.1106 accuracy: 0.9627 val_loss: 0.6207 val_accuracy: 0.8167
Job ended!
