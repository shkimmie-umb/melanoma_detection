Fri 01 Mar 2024 05:18:24 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['_7_point_criteria']
IMG_SIZE: [150, 150]
CLASSIFIER: MobileNet
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
mobilenet_1.00_224 (Function (None, 1024)              3228864   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 3,888,578
Trainable params: 658,178
Non-trainable params: 3,230,400
_________________________________________________________________
Fitting _7_point_criteria_aug_MobileNet_150h_150w_None model...
model_name: _7_point_criteria_aug_MobileNet_150h_150w_None
Epoch: 1 loss: 0.8952 accuracy: 0.6040 val_loss: 0.7140 val_accuracy: 0.6502
Epoch: 2 loss: 0.6437 accuracy: 0.7038 val_loss: 0.6909 val_accuracy: 0.6355
Epoch: 3 loss: 0.5632 accuracy: 0.7388 val_loss: 0.6693 val_accuracy: 0.6256
Epoch: 4 loss: 0.4398 accuracy: 0.8037 val_loss: 0.6523 val_accuracy: 0.6404
Epoch: 5 loss: 0.3992 accuracy: 0.8203 val_loss: 0.6461 val_accuracy: 0.6650
Epoch: 6 loss: 0.3599 accuracy: 0.8403 val_loss: 0.6376 val_accuracy: 0.6650
Epoch: 7 loss: 0.3198 accuracy: 0.8669 val_loss: 0.6258 val_accuracy: 0.6798
Epoch: 8 loss: 0.3100 accuracy: 0.8602 val_loss: 0.6428 val_accuracy: 0.6749
Epoch: 9 loss: 0.2707 accuracy: 0.8719 val_loss: 0.6592 val_accuracy: 0.6700
Epoch: 10 loss: 0.2214 accuracy: 0.9151 val_loss: 0.6773 val_accuracy: 0.6798
Epoch: 11 loss: 0.2146 accuracy: 0.9168 val_loss: 0.6815 val_accuracy: 0.6798
Epoch: 12 loss: 0.1897 accuracy: 0.9318 val_loss: 0.6984 val_accuracy: 0.6946
Epoch: 13 loss: 0.1672 accuracy: 0.9351 val_loss: 0.7186 val_accuracy: 0.7044
Epoch: 14 loss: 0.1684 accuracy: 0.9434 val_loss: 0.7053 val_accuracy: 0.7094
Epoch: 15 loss: 0.1379 accuracy: 0.9484 val_loss: 0.7012 val_accuracy: 0.6995
Epoch: 16 loss: 0.1476 accuracy: 0.9517 val_loss: 0.7341 val_accuracy: 0.7241
Epoch: 17 loss: 0.1232 accuracy: 0.9584 val_loss: 0.7636 val_accuracy: 0.7192
Epoch: 18 loss: 0.1300 accuracy: 0.9501 val_loss: 0.7617 val_accuracy: 0.7143
Epoch: 19 loss: 0.1256 accuracy: 0.9534 val_loss: 0.7804 val_accuracy: 0.6995
Epoch: 20 loss: 0.1009 accuracy: 0.9750 val_loss: 0.8102 val_accuracy: 0.6995
Job ended!
