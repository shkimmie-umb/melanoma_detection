Tue 27 Feb 2024 05:10:59 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2019']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB6
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb6 (Functional)  (None, 2304)              40960143  
_________________________________________________________________
dense (Dense)                (None, 512)               1180160   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 42,275,217
Trainable params: 1,313,538
Non-trainable params: 40,961,679
_________________________________________________________________
Fitting ISIC2019_aug_EfficientNetB6_150h_150w_None model...
model_name: ISIC2019_aug_EfficientNetB6_150h_150w_None
Epoch: 1 loss: 0.6576 accuracy: 0.6244 val_loss: 0.5523 val_accuracy: 0.8218
Epoch: 2 loss: 0.6469 accuracy: 0.6425 val_loss: 0.5629 val_accuracy: 0.8084
Epoch: 3 loss: 0.6442 accuracy: 0.6456 val_loss: 0.5375 val_accuracy: 0.8169
Epoch: 4 loss: 0.6428 accuracy: 0.6480 val_loss: 0.5531 val_accuracy: 0.7908
Epoch: 5 loss: 0.6413 accuracy: 0.6496 val_loss: 0.5028 val_accuracy: 0.8279
Epoch: 6 loss: 0.6388 accuracy: 0.6525 val_loss: 0.5206 val_accuracy: 0.8265
Epoch: 7 loss: 0.6383 accuracy: 0.6532 val_loss: 0.5062 val_accuracy: 0.8271
Epoch: 8 loss: 0.6356 accuracy: 0.6547 val_loss: 0.5171 val_accuracy: 0.8267
Epoch: 9 loss: 0.6352 accuracy: 0.6534 val_loss: 0.5829 val_accuracy: 0.7959
Epoch: 10 loss: 0.6341 accuracy: 0.6541 val_loss: 0.5622 val_accuracy: 0.8015
Epoch: 11 loss: 0.6329 accuracy: 0.6554 val_loss: 0.5123 val_accuracy: 0.8238
Epoch: 12 loss: 0.6311 accuracy: 0.6557 val_loss: 0.5170 val_accuracy: 0.8054
Epoch: 13 loss: 0.6280 accuracy: 0.6579 val_loss: 0.5086 val_accuracy: 0.7993
Epoch: 14 loss: 0.6270 accuracy: 0.6587 val_loss: 0.4841 val_accuracy: 0.8273
Epoch: 15 loss: 0.6252 accuracy: 0.6595 val_loss: 0.5173 val_accuracy: 0.8212
Epoch: 16 loss: 0.6219 accuracy: 0.6631 val_loss: 0.5804 val_accuracy: 0.7357
Epoch: 17 loss: 0.6220 accuracy: 0.6599 val_loss: 0.4790 val_accuracy: 0.8289
Epoch: 18 loss: 0.6200 accuracy: 0.6664 val_loss: 0.5408 val_accuracy: 0.7855
Epoch: 19 loss: 0.6161 accuracy: 0.6707 val_loss: 0.4940 val_accuracy: 0.8285
Epoch: 20 loss: 0.6157 accuracy: 0.6709 val_loss: 0.4991 val_accuracy: 0.8267
Job ended!
