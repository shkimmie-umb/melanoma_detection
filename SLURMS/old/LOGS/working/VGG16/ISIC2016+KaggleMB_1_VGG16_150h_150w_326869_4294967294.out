Fri 01 Mar 2024 11:33:17 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'KaggleMB']
IMG_SIZE: [150, 150]
CLASSIFIER: VGG16
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
vgg16 (Functional)           (None, 512)               14714688  
_________________________________________________________________
dense (Dense)                (None, 512)               262656    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 15,112,258
Trainable params: 396,034
Non-trainable params: 14,716,224
_________________________________________________________________
Fitting ISIC2016+KaggleMB_aug_VGG16_150h_150w_None model...
model_name: ISIC2016+KaggleMB_aug_VGG16_150h_150w_None
Epoch: 1 loss: 0.7040 accuracy: 0.6777 val_loss: 0.5094 val_accuracy: 0.7599
Epoch: 2 loss: 0.5216 accuracy: 0.7671 val_loss: 0.4819 val_accuracy: 0.7740
Epoch: 3 loss: 0.4873 accuracy: 0.7799 val_loss: 0.4689 val_accuracy: 0.7867
Epoch: 4 loss: 0.4542 accuracy: 0.8010 val_loss: 0.4577 val_accuracy: 0.7881
Epoch: 5 loss: 0.4042 accuracy: 0.8159 val_loss: 0.4480 val_accuracy: 0.8037
Epoch: 6 loss: 0.3994 accuracy: 0.8266 val_loss: 0.4606 val_accuracy: 0.7881
Epoch: 7 loss: 0.3705 accuracy: 0.8368 val_loss: 0.4479 val_accuracy: 0.8037
Epoch: 8 loss: 0.3459 accuracy: 0.8520 val_loss: 0.4441 val_accuracy: 0.8107
Epoch: 9 loss: 0.3241 accuracy: 0.8564 val_loss: 0.4457 val_accuracy: 0.8150
Epoch: 10 loss: 0.3236 accuracy: 0.8592 val_loss: 0.4526 val_accuracy: 0.8164
Epoch: 11 loss: 0.2980 accuracy: 0.8750 val_loss: 0.4501 val_accuracy: 0.8150
Epoch: 12 loss: 0.2930 accuracy: 0.8731 val_loss: 0.4617 val_accuracy: 0.8164
Epoch: 13 loss: 0.2684 accuracy: 0.8846 val_loss: 0.4663 val_accuracy: 0.8051
Epoch: 14 loss: 0.2632 accuracy: 0.8852 val_loss: 0.4711 val_accuracy: 0.8263
Epoch: 15 loss: 0.2561 accuracy: 0.8906 val_loss: 0.4722 val_accuracy: 0.8164
Epoch: 16 loss: 0.2437 accuracy: 0.8972 val_loss: 0.4639 val_accuracy: 0.8192
Epoch: 17 loss: 0.2310 accuracy: 0.9053 val_loss: 0.4781 val_accuracy: 0.8065
Epoch: 18 loss: 0.2126 accuracy: 0.9110 val_loss: 0.4802 val_accuracy: 0.8178
Epoch: 19 loss: 0.2035 accuracy: 0.9160 val_loss: 0.4869 val_accuracy: 0.8206
Epoch: 20 loss: 0.2020 accuracy: 0.9168 val_loss: 0.4902 val_accuracy: 0.8150
Job ended!
