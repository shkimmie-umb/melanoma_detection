Mon 26 Feb 2024 11:13:27 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet121
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet121 (Functional)     (None, 1024)              7037504   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,697,218
Trainable params: 658,178
Non-trainable params: 7,039,040
_________________________________________________________________
Fitting ISIC2016_aug_DenseNet121_150h_150w_None model...
model_name: ISIC2016_aug_DenseNet121_150h_150w_None
Epoch: 1 loss: 0.9990 accuracy: 0.5160 val_loss: 0.6748 val_accuracy: 0.8000
Epoch: 2 loss: 0.8814 accuracy: 0.5611 val_loss: 0.6605 val_accuracy: 0.8000
Epoch: 3 loss: 0.8100 accuracy: 0.5742 val_loss: 0.6516 val_accuracy: 0.8000
Epoch: 4 loss: 0.8054 accuracy: 0.5863 val_loss: 0.6463 val_accuracy: 0.8000
Epoch: 5 loss: 0.7929 accuracy: 0.5898 val_loss: 0.6355 val_accuracy: 0.8000
Epoch: 6 loss: 0.7870 accuracy: 0.5854 val_loss: 0.6583 val_accuracy: 0.6889
Epoch: 7 loss: 0.7715 accuracy: 0.6141 val_loss: 0.6370 val_accuracy: 0.7944
Epoch: 8 loss: 0.7599 accuracy: 0.6088 val_loss: 0.6478 val_accuracy: 0.7778
Epoch: 9 loss: 0.7154 accuracy: 0.6305 val_loss: 0.6317 val_accuracy: 0.7778
Epoch: 10 loss: 0.7261 accuracy: 0.6262 val_loss: 0.6092 val_accuracy: 0.7833
Epoch: 11 loss: 0.7229 accuracy: 0.6331 val_loss: 0.6029 val_accuracy: 0.7944
Epoch: 12 loss: 0.6694 accuracy: 0.6548 val_loss: 0.5764 val_accuracy: 0.7667
Epoch: 13 loss: 0.7007 accuracy: 0.6392 val_loss: 0.5918 val_accuracy: 0.7667
Epoch: 14 loss: 0.7159 accuracy: 0.6305 val_loss: 0.5744 val_accuracy: 0.7222
Epoch: 15 loss: 0.7234 accuracy: 0.6305 val_loss: 0.5573 val_accuracy: 0.7500
Epoch: 16 loss: 0.6861 accuracy: 0.6513 val_loss: 0.5689 val_accuracy: 0.7444
Epoch: 17 loss: 0.7207 accuracy: 0.6340 val_loss: 0.5418 val_accuracy: 0.7500
Epoch: 18 loss: 0.7061 accuracy: 0.6427 val_loss: 0.5773 val_accuracy: 0.7167
Epoch: 19 loss: 0.6597 accuracy: 0.6678 val_loss: 0.5293 val_accuracy: 0.7556
Epoch: 20 loss: 0.7086 accuracy: 0.6210 val_loss: 0.5266 val_accuracy: 0.7611
Job ended!
