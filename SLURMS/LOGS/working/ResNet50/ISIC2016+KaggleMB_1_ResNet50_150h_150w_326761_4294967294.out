Fri 01 Mar 2024 10:02:17 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'KaggleMB']
IMG_SIZE: [150, 150]
CLASSIFIER: ResNet50
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
resnet50 (Functional)        (None, 2048)              23587712  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 24,771,714
Trainable params: 1,182,466
Non-trainable params: 23,589,248
_________________________________________________________________
Fitting ISIC2016+KaggleMB_aug_ResNet50_150h_150w_None model...
model_name: ISIC2016+KaggleMB_aug_ResNet50_150h_150w_None
Epoch: 1 loss: 0.8104 accuracy: 0.6435 val_loss: 0.5025 val_accuracy: 0.7833
Epoch: 2 loss: 0.6126 accuracy: 0.7372 val_loss: 0.4384 val_accuracy: 0.7944
Epoch: 3 loss: 0.5331 accuracy: 0.7667 val_loss: 0.4399 val_accuracy: 0.8222
Epoch: 4 loss: 0.4722 accuracy: 0.7858 val_loss: 0.4103 val_accuracy: 0.8389
Epoch: 5 loss: 0.4440 accuracy: 0.8057 val_loss: 0.3976 val_accuracy: 0.8389
Epoch: 6 loss: 0.3876 accuracy: 0.8205 val_loss: 0.4117 val_accuracy: 0.8333
Epoch: 7 loss: 0.3220 accuracy: 0.8560 val_loss: 0.3964 val_accuracy: 0.8444
Epoch: 8 loss: 0.3316 accuracy: 0.8725 val_loss: 0.4371 val_accuracy: 0.8167
Epoch: 9 loss: 0.2719 accuracy: 0.8846 val_loss: 0.4370 val_accuracy: 0.8111
Epoch: 10 loss: 0.2398 accuracy: 0.8951 val_loss: 0.4314 val_accuracy: 0.8333
Epoch: 11 loss: 0.2399 accuracy: 0.9029 val_loss: 0.4533 val_accuracy: 0.8000
Epoch: 12 loss: 0.2096 accuracy: 0.9098 val_loss: 0.5186 val_accuracy: 0.7556
Epoch: 13 loss: 0.1971 accuracy: 0.9289 val_loss: 0.4542 val_accuracy: 0.8167
Epoch: 14 loss: 0.2111 accuracy: 0.9124 val_loss: 0.4585 val_accuracy: 0.8278
Epoch: 15 loss: 0.1890 accuracy: 0.9341 val_loss: 0.5034 val_accuracy: 0.8000
Epoch: 16 loss: 0.1740 accuracy: 0.9332 val_loss: 0.5186 val_accuracy: 0.7889
Epoch: 17 loss: 0.1406 accuracy: 0.9462 val_loss: 0.5139 val_accuracy: 0.7833
Epoch: 18 loss: 0.1504 accuracy: 0.9454 val_loss: 0.4782 val_accuracy: 0.8056
Epoch: 19 loss: 0.1251 accuracy: 0.9540 val_loss: 0.4925 val_accuracy: 0.8222
Epoch: 20 loss: 0.1167 accuracy: 0.9636 val_loss: 0.5079 val_accuracy: 0.8111
Job ended!
