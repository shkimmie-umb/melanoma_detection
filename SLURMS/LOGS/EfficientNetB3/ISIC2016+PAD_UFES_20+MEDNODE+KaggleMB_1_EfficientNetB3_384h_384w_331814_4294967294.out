Fri 03 May 2024 07:11:25 PM EDT
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'PAD_UFES_20', 'MEDNODE', 'KaggleMB']
IMG_SIZE: [384, 384]
CLASSIFIER: EfficientNetB3
JOB_INDEX: None
Start training augmented images
Combining...
Combining 1th db out of 4 dbs
Combining 2th db out of 4 dbs
Combining 3th db out of 4 dbs
Combining 4th db out of 4 dbs
Stacking data
Combining complete
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb3 (Functional)  (None, 1536)              10783535  
_________________________________________________________________
dense (Dense)                (None, 512)               786944    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 11,705,393
Trainable params: 920,322
Non-trainable params: 10,785,071
_________________________________________________________________
Fitting ISIC2016+PAD_UFES_20+MEDNODE+KaggleMB_aug_EfficientNetB3_384h_384w_None model...
model_name: ISIC2016+PAD_UFES_20+MEDNODE+KaggleMB_aug_EfficientNetB3_384h_384w_None
Epoch: 1 loss: 1.4438 accuracy: 0.5100 val_loss: 1.0694 val_accuracy: 0.7621
Epoch: 2 loss: 1.2783 accuracy: 0.5180 val_loss: 0.9959 val_accuracy: 0.7621
Epoch: 3 loss: 1.2128 accuracy: 0.5232 val_loss: 0.9720 val_accuracy: 0.7621
Epoch: 4 loss: 1.1774 accuracy: 0.5318 val_loss: 0.9888 val_accuracy: 0.7621
Epoch: 5 loss: 1.1617 accuracy: 0.5247 val_loss: 0.9445 val_accuracy: 0.7621
Epoch: 6 loss: 1.1540 accuracy: 0.5104 val_loss: 1.0139 val_accuracy: 0.7621
Epoch: 7 loss: 1.1318 accuracy: 0.5183 val_loss: 1.0962 val_accuracy: 0.2379
Epoch: 8 loss: 1.1086 accuracy: 0.5322 val_loss: 0.9711 val_accuracy: 0.7621
Epoch: 9 loss: 1.1084 accuracy: 0.5239 val_loss: 1.0082 val_accuracy: 0.7621
Epoch: 10 loss: 1.0957 accuracy: 0.5325 val_loss: 0.9062 val_accuracy: 0.7621
Epoch: 11 loss: 1.0886 accuracy: 0.5314 val_loss: 0.8998 val_accuracy: 0.7621
Epoch: 12 loss: 1.0806 accuracy: 0.5296 val_loss: 0.9274 val_accuracy: 0.7621
Epoch: 13 loss: 1.0703 accuracy: 0.5264 val_loss: 0.8970 val_accuracy: 0.7621
Epoch: 14 loss: 1.0510 accuracy: 0.5366 val_loss: 0.8978 val_accuracy: 0.7621
Epoch: 15 loss: 1.0475 accuracy: 0.5405 val_loss: 0.8831 val_accuracy: 0.7621
Epoch: 16 loss: 1.0382 accuracy: 0.5312 val_loss: 0.8866 val_accuracy: 0.7621
Epoch: 17 loss: 1.0266 accuracy: 0.5402 val_loss: 1.0362 val_accuracy: 0.2379
Epoch: 18 loss: 1.0301 accuracy: 0.5417 val_loss: 0.8726 val_accuracy: 0.7621
Epoch: 19 loss: 1.0137 accuracy: 0.5467 val_loss: 0.8806 val_accuracy: 0.7621
Epoch: 20 loss: 1.0174 accuracy: 0.5363 val_loss: 0.9573 val_accuracy: 0.7621
Epoch: 21 loss: 1.0059 accuracy: 0.5422 val_loss: 0.9257 val_accuracy: 0.7621
Epoch: 22 loss: 0.9918 accuracy: 0.5499 val_loss: 0.8435 val_accuracy: 0.7621
Epoch: 23 loss: 0.9898 accuracy: 0.5399 val_loss: 0.8406 val_accuracy: 0.7621
Epoch: 24 loss: 0.9821 accuracy: 0.5467 val_loss: 0.8715 val_accuracy: 0.7621
Epoch: 25 loss: 0.9760 accuracy: 0.5510 val_loss: 0.9606 val_accuracy: 0.7621
Epoch: 26 loss: 0.9740 accuracy: 0.5367 val_loss: 0.9347 val_accuracy: 0.7621
Epoch: 27 loss: 0.9604 accuracy: 0.5503 val_loss: 0.9359 val_accuracy: 0.7621
Epoch: 28 loss: 0.9612 accuracy: 0.5417 val_loss: 0.8877 val_accuracy: 0.7621

Epoch 00028: ReduceLROnPlateau reducing learning rate to 7.999999797903001e-05.
Epoch: 29 loss: 0.9516 accuracy: 0.5391 val_loss: 0.8190 val_accuracy: 0.7621
Epoch: 30 loss: 0.9400 accuracy: 0.5518 val_loss: 0.8449 val_accuracy: 0.7621
Epoch: 31 loss: 0.9371 accuracy: 0.5486 val_loss: 0.8646 val_accuracy: 0.7621
Epoch: 32 loss: 0.9327 accuracy: 0.5490 val_loss: 0.8664 val_accuracy: 0.7621
Epoch: 33 loss: 0.9261 accuracy: 0.5473 val_loss: 0.9198 val_accuracy: 0.7621
Epoch: 34 loss: 0.9231 accuracy: 0.5568 val_loss: 0.8582 val_accuracy: 0.7621

Epoch 00034: ReduceLROnPlateau reducing learning rate to 6.399999838322402e-05.
Epoch: 35 loss: 0.9150 accuracy: 0.5550 val_loss: 0.8279 val_accuracy: 0.7621
Epoch: 36 loss: 0.9150 accuracy: 0.5447 val_loss: 0.8573 val_accuracy: 0.7621
Epoch: 37 loss: 0.9084 accuracy: 0.5557 val_loss: 0.7606 val_accuracy: 0.7621
Epoch: 38 loss: 0.9072 accuracy: 0.5373 val_loss: 0.8508 val_accuracy: 0.7621
Epoch: 39 loss: 0.8961 accuracy: 0.5594 val_loss: 0.8728 val_accuracy: 0.7621
Epoch: 40 loss: 0.8896 accuracy: 0.5601 val_loss: 0.8019 val_accuracy: 0.7621
Epoch: 41 loss: 0.8876 accuracy: 0.5544 val_loss: 0.7996 val_accuracy: 0.7621
Epoch: 42 loss: 0.8849 accuracy: 0.5548 val_loss: 0.9199 val_accuracy: 0.2379

Epoch 00042: ReduceLROnPlateau reducing learning rate to 5.119999987073243e-05.
Epoch: 43 loss: 0.8786 accuracy: 0.5570 val_loss: 0.7610 val_accuracy: 0.7621
Epoch: 44 loss: 0.8796 accuracy: 0.5482 val_loss: 0.8178 val_accuracy: 0.7621
Epoch: 45 loss: 0.8760 accuracy: 0.5483 val_loss: 0.7846 val_accuracy: 0.7621
Epoch: 46 loss: 0.8657 accuracy: 0.5565 val_loss: 0.8311 val_accuracy: 0.7621
Epoch: 47 loss: 0.8650 accuracy: 0.5618 val_loss: 0.7854 val_accuracy: 0.7621

Epoch 00047: ReduceLROnPlateau reducing learning rate to 4.0960000478662555e-05.
End of augmented training
Finish
Job ended!
