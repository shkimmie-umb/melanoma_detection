Tue 27 Feb 2024 04:19:47 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'PH2']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet201
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet201 (Functional)     (None, 1920)              18321984  
_________________________________________________________________
dense (Dense)                (None, 512)               983552    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 19,440,450
Trainable params: 1,116,930
Non-trainable params: 18,323,520
_________________________________________________________________
Fitting ISIC2016+PH2_aug_DenseNet201_150h_150w_None model...
model_name: ISIC2016+PH2_aug_DenseNet201_150h_150w_None
Epoch: 1 loss: 0.8920 accuracy: 0.5504 val_loss: 0.7145 val_accuracy: 0.2000
Epoch: 2 loss: 0.8163 accuracy: 0.5779 val_loss: 0.7090 val_accuracy: 0.2056
Epoch: 3 loss: 0.7614 accuracy: 0.6054 val_loss: 0.7021 val_accuracy: 0.3167
Epoch: 4 loss: 0.7401 accuracy: 0.6211 val_loss: 0.7452 val_accuracy: 0.2056
Epoch: 5 loss: 0.6974 accuracy: 0.6452 val_loss: 0.7462 val_accuracy: 0.2000
Epoch: 6 loss: 0.6933 accuracy: 0.6410 val_loss: 0.7130 val_accuracy: 0.3556
Epoch: 7 loss: 0.6832 accuracy: 0.6520 val_loss: 0.6931 val_accuracy: 0.4556
Epoch: 8 loss: 0.6951 accuracy: 0.6548 val_loss: 0.6997 val_accuracy: 0.4333
Epoch: 9 loss: 0.6721 accuracy: 0.6507 val_loss: 0.6657 val_accuracy: 0.5889
Epoch: 10 loss: 0.6867 accuracy: 0.6555 val_loss: 0.6126 val_accuracy: 0.7333
Epoch: 11 loss: 0.6739 accuracy: 0.6678 val_loss: 0.6944 val_accuracy: 0.5333
Epoch: 12 loss: 0.6887 accuracy: 0.6664 val_loss: 0.6021 val_accuracy: 0.7389
Epoch: 13 loss: 0.6773 accuracy: 0.6767 val_loss: 0.5502 val_accuracy: 0.7500
Epoch: 14 loss: 0.6503 accuracy: 0.6767 val_loss: 0.6300 val_accuracy: 0.6500
Epoch: 15 loss: 0.6508 accuracy: 0.6637 val_loss: 0.6678 val_accuracy: 0.5889
Epoch: 16 loss: 0.6371 accuracy: 0.6712 val_loss: 0.6454 val_accuracy: 0.6611
Epoch: 17 loss: 0.6405 accuracy: 0.6740 val_loss: 0.7695 val_accuracy: 0.4556
Epoch: 18 loss: 0.6743 accuracy: 0.6582 val_loss: 0.5942 val_accuracy: 0.7000
Epoch: 19 loss: 0.6589 accuracy: 0.6863 val_loss: 0.6163 val_accuracy: 0.6667
Epoch: 20 loss: 0.6277 accuracy: 0.6918 val_loss: 0.5920 val_accuracy: 0.7222
Job ended!
