Thu 29 Feb 2024 11:31:40 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet121
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet121 (Functional)     (None, 1024)              7037504   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,697,218
Trainable params: 658,178
Non-trainable params: 7,039,040
_________________________________________________________________
Fitting ISIC2016_aug_DenseNet121_150h_150w_None model...
model_name: ISIC2016_aug_DenseNet121_150h_150w_None
Epoch: 1 loss: 0.8577 accuracy: 0.6158 val_loss: 0.6162 val_accuracy: 0.8000
Epoch: 2 loss: 0.7002 accuracy: 0.6878 val_loss: 0.4789 val_accuracy: 0.8222
Epoch: 3 loss: 0.6268 accuracy: 0.7019 val_loss: 0.4658 val_accuracy: 0.8278
Epoch: 4 loss: 0.5496 accuracy: 0.7424 val_loss: 0.4821 val_accuracy: 0.8167
Epoch: 5 loss: 0.4923 accuracy: 0.7615 val_loss: 0.4940 val_accuracy: 0.7889
Epoch: 6 loss: 0.4943 accuracy: 0.7875 val_loss: 0.5090 val_accuracy: 0.8000
Epoch: 7 loss: 0.4426 accuracy: 0.8005 val_loss: 0.5010 val_accuracy: 0.8167
Epoch: 8 loss: 0.4134 accuracy: 0.8179 val_loss: 0.4970 val_accuracy: 0.8056
Epoch: 9 loss: 0.3877 accuracy: 0.8187 val_loss: 0.4977 val_accuracy: 0.8167
Epoch: 10 loss: 0.3895 accuracy: 0.8378 val_loss: 0.5294 val_accuracy: 0.8000
Epoch: 11 loss: 0.3605 accuracy: 0.8500 val_loss: 0.5588 val_accuracy: 0.7778
Epoch: 12 loss: 0.3146 accuracy: 0.8716 val_loss: 0.5308 val_accuracy: 0.7944
Epoch: 13 loss: 0.2997 accuracy: 0.8751 val_loss: 0.5667 val_accuracy: 0.8000
Epoch: 14 loss: 0.2767 accuracy: 0.8907 val_loss: 0.5683 val_accuracy: 0.7944
Epoch: 15 loss: 0.3263 accuracy: 0.8569 val_loss: 0.5764 val_accuracy: 0.8111
Epoch: 16 loss: 0.2576 accuracy: 0.8899 val_loss: 0.5695 val_accuracy: 0.8056
Epoch: 17 loss: 0.2476 accuracy: 0.8873 val_loss: 0.5837 val_accuracy: 0.7944
Epoch: 18 loss: 0.2274 accuracy: 0.9063 val_loss: 0.6202 val_accuracy: 0.7833
Epoch: 19 loss: 0.2213 accuracy: 0.9098 val_loss: 0.5773 val_accuracy: 0.8222
Epoch: 20 loss: 0.2118 accuracy: 0.9133 val_loss: 0.6115 val_accuracy: 0.8111
Job ended!
