Fri 01 Mar 2024 05:45:24 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'ISIC2018']
IMG_SIZE: [150, 150]
CLASSIFIER: MobileNet
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
mobilenet_1.00_224 (Function (None, 1024)              3228864   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 3,888,578
Trainable params: 658,178
Non-trainable params: 3,230,400
_________________________________________________________________
Fitting ISIC2016+ISIC2018_aug_MobileNet_150h_150w_None model...
model_name: ISIC2016+ISIC2018_aug_MobileNet_150h_150w_None
Epoch: 1 loss: 0.6431 accuracy: 0.7084 val_loss: 0.4535 val_accuracy: 0.7855
Epoch: 2 loss: 0.4712 accuracy: 0.7893 val_loss: 0.4024 val_accuracy: 0.8338
Epoch: 3 loss: 0.4236 accuracy: 0.8120 val_loss: 0.3704 val_accuracy: 0.8552
Epoch: 4 loss: 0.3945 accuracy: 0.8259 val_loss: 0.3687 val_accuracy: 0.8338
Epoch: 5 loss: 0.3732 accuracy: 0.8344 val_loss: 0.3595 val_accuracy: 0.8311
Epoch: 6 loss: 0.3507 accuracy: 0.8435 val_loss: 0.3702 val_accuracy: 0.8499
Epoch: 7 loss: 0.3363 accuracy: 0.8527 val_loss: 0.3807 val_accuracy: 0.8365
Epoch: 8 loss: 0.3132 accuracy: 0.8616 val_loss: 0.3651 val_accuracy: 0.8338
Epoch: 9 loss: 0.2973 accuracy: 0.8743 val_loss: 0.3629 val_accuracy: 0.8472
Epoch: 10 loss: 0.2850 accuracy: 0.8781 val_loss: 0.3761 val_accuracy: 0.8579
Epoch: 11 loss: 0.2665 accuracy: 0.8868 val_loss: 0.3849 val_accuracy: 0.8552
Epoch: 12 loss: 0.2486 accuracy: 0.8941 val_loss: 0.3978 val_accuracy: 0.8606
Epoch: 13 loss: 0.2284 accuracy: 0.9051 val_loss: 0.3972 val_accuracy: 0.8418
Epoch: 14 loss: 0.2179 accuracy: 0.9090 val_loss: 0.4403 val_accuracy: 0.8472
Epoch: 15 loss: 0.2084 accuracy: 0.9142 val_loss: 0.4617 val_accuracy: 0.8177
Epoch: 16 loss: 0.1962 accuracy: 0.9175 val_loss: 0.4690 val_accuracy: 0.8418
Epoch: 17 loss: 0.1847 accuracy: 0.9236 val_loss: 0.5082 val_accuracy: 0.8365
Epoch: 18 loss: 0.1754 accuracy: 0.9277 val_loss: 0.4995 val_accuracy: 0.8391
Epoch: 19 loss: 0.1595 accuracy: 0.9359 val_loss: 0.5031 val_accuracy: 0.8365
Epoch: 20 loss: 0.1483 accuracy: 0.9403 val_loss: 0.4685 val_accuracy: 0.8499
Job ended!
