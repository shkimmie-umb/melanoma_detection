Fri 01 Mar 2024 09:47:53 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['KaggleMB']
IMG_SIZE: [150, 150]
CLASSIFIER: ResNet152V2
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
resnet152v2 (Functional)     (None, 2048)              58331648  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 59,515,650
Trainable params: 1,182,466
Non-trainable params: 58,333,184
_________________________________________________________________
Fitting KaggleMB_aug_ResNet152V2_150h_150w_None model...
model_name: KaggleMB_aug_ResNet152V2_150h_150w_None
Epoch: 1 loss: 0.6041 accuracy: 0.7397 val_loss: 0.4294 val_accuracy: 0.8125
Epoch: 2 loss: 0.4713 accuracy: 0.7902 val_loss: 0.4206 val_accuracy: 0.8125
Epoch: 3 loss: 0.3711 accuracy: 0.8381 val_loss: 0.4140 val_accuracy: 0.8220
Epoch: 4 loss: 0.3294 accuracy: 0.8516 val_loss: 0.4248 val_accuracy: 0.8106
Epoch: 5 loss: 0.2977 accuracy: 0.8733 val_loss: 0.3904 val_accuracy: 0.8523
Epoch: 6 loss: 0.2670 accuracy: 0.8810 val_loss: 0.4035 val_accuracy: 0.8182
Epoch: 7 loss: 0.2543 accuracy: 0.8952 val_loss: 0.3984 val_accuracy: 0.8182
Epoch: 8 loss: 0.2369 accuracy: 0.9015 val_loss: 0.4127 val_accuracy: 0.8220
Epoch: 9 loss: 0.2105 accuracy: 0.9109 val_loss: 0.4129 val_accuracy: 0.8258
Epoch: 10 loss: 0.1829 accuracy: 0.9281 val_loss: 0.4056 val_accuracy: 0.8277
Epoch: 11 loss: 0.1799 accuracy: 0.9266 val_loss: 0.4285 val_accuracy: 0.8239
Epoch: 12 loss: 0.1557 accuracy: 0.9343 val_loss: 0.4359 val_accuracy: 0.8314
Epoch: 13 loss: 0.1340 accuracy: 0.9529 val_loss: 0.4461 val_accuracy: 0.8201
Epoch: 14 loss: 0.1350 accuracy: 0.9483 val_loss: 0.4230 val_accuracy: 0.8447
Epoch: 15 loss: 0.1236 accuracy: 0.9543 val_loss: 0.4481 val_accuracy: 0.8371
Epoch: 16 loss: 0.1078 accuracy: 0.9637 val_loss: 0.4773 val_accuracy: 0.8333
Epoch: 17 loss: 0.1055 accuracy: 0.9575 val_loss: 0.5217 val_accuracy: 0.8068
Epoch: 18 loss: 0.0951 accuracy: 0.9643 val_loss: 0.4889 val_accuracy: 0.8447
Epoch: 19 loss: 0.0914 accuracy: 0.9657 val_loss: 0.5048 val_accuracy: 0.8295
Epoch: 20 loss: 0.0790 accuracy: 0.9746 val_loss: 0.5062 val_accuracy: 0.8447
Job ended!
