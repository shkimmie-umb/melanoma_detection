Tue 27 Feb 2024 08:18:59 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2017']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB7
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb7 (Functional)  (None, 2560)              64097687  
_________________________________________________________________
dense (Dense)                (None, 512)               1311232   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 65,543,833
Trainable params: 1,444,610
Non-trainable params: 64,099,223
_________________________________________________________________
Fitting ISIC2017_aug_EfficientNetB7_150h_150w_None model...
model_name: ISIC2017_aug_EfficientNetB7_150h_150w_None
Epoch: 1 loss: 0.6859 accuracy: 0.5474 val_loss: 0.6364 val_accuracy: 0.8000
Epoch: 2 loss: 0.6701 accuracy: 0.6082 val_loss: 0.5997 val_accuracy: 0.8000
Epoch: 3 loss: 0.6564 accuracy: 0.6413 val_loss: 0.5814 val_accuracy: 0.8000
Epoch: 4 loss: 0.6534 accuracy: 0.6433 val_loss: 0.5712 val_accuracy: 0.8000
Epoch: 5 loss: 0.6541 accuracy: 0.6446 val_loss: 0.5650 val_accuracy: 0.8000
Epoch: 6 loss: 0.6516 accuracy: 0.6456 val_loss: 0.5676 val_accuracy: 0.8000
Epoch: 7 loss: 0.6512 accuracy: 0.6466 val_loss: 0.5644 val_accuracy: 0.8000
Epoch: 8 loss: 0.6517 accuracy: 0.6460 val_loss: 0.5701 val_accuracy: 0.8000
Epoch: 9 loss: 0.6524 accuracy: 0.6436 val_loss: 0.5480 val_accuracy: 0.8000
Epoch: 10 loss: 0.6517 accuracy: 0.6450 val_loss: 0.5525 val_accuracy: 0.8000
Epoch: 11 loss: 0.6504 accuracy: 0.6446 val_loss: 0.5925 val_accuracy: 0.8000
Epoch: 12 loss: 0.6490 accuracy: 0.6463 val_loss: 0.5499 val_accuracy: 0.8000
Epoch: 13 loss: 0.6503 accuracy: 0.6446 val_loss: 0.5495 val_accuracy: 0.8000
Epoch: 14 loss: 0.6511 accuracy: 0.6453 val_loss: 0.5600 val_accuracy: 0.8000
Epoch: 15 loss: 0.6501 accuracy: 0.6456 val_loss: 0.5527 val_accuracy: 0.8000
Epoch: 16 loss: 0.6505 accuracy: 0.6440 val_loss: 0.5460 val_accuracy: 0.8000
Epoch: 17 loss: 0.6510 accuracy: 0.6446 val_loss: 0.5550 val_accuracy: 0.8000
Epoch: 18 loss: 0.6505 accuracy: 0.6436 val_loss: 0.5412 val_accuracy: 0.8000
Epoch: 19 loss: 0.6511 accuracy: 0.6456 val_loss: 0.5399 val_accuracy: 0.8000
Epoch: 20 loss: 0.6504 accuracy: 0.6456 val_loss: 0.5498 val_accuracy: 0.8000
Job ended!
