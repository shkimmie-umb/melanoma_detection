Tue 27 Feb 2024 12:03:58 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'KaggleMB']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB4
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb4 (Functional)  (None, 1792)              17673823  
_________________________________________________________________
dense (Dense)                (None, 512)               918016    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 18,726,753
Trainable params: 1,051,394
Non-trainable params: 17,675,359
_________________________________________________________________
Fitting ISIC2016+KaggleMB_aug_EfficientNetB4_150h_150w_None model...
model_name: ISIC2016+KaggleMB_aug_EfficientNetB4_150h_150w_None
Epoch: 1 loss: 0.6967 accuracy: 0.5183 val_loss: 0.7155 val_accuracy: 0.3743
Epoch: 2 loss: 0.6881 accuracy: 0.5467 val_loss: 0.7231 val_accuracy: 0.3743
Epoch: 3 loss: 0.6880 accuracy: 0.5546 val_loss: 0.7248 val_accuracy: 0.3743
Epoch: 4 loss: 0.6905 accuracy: 0.5444 val_loss: 0.7239 val_accuracy: 0.3743
Epoch: 5 loss: 0.6854 accuracy: 0.5548 val_loss: 0.7170 val_accuracy: 0.3743
Epoch: 6 loss: 0.6854 accuracy: 0.5508 val_loss: 0.7117 val_accuracy: 0.3743
Epoch: 7 loss: 0.6840 accuracy: 0.5557 val_loss: 0.7156 val_accuracy: 0.3743
Epoch: 8 loss: 0.6836 accuracy: 0.5493 val_loss: 0.7080 val_accuracy: 0.3743
Epoch: 9 loss: 0.6799 accuracy: 0.5512 val_loss: 0.7505 val_accuracy: 0.3743
Epoch: 10 loss: 0.6780 accuracy: 0.5625 val_loss: 0.7284 val_accuracy: 0.3743
Epoch: 11 loss: 0.6795 accuracy: 0.5578 val_loss: 0.6880 val_accuracy: 0.5537
Epoch: 12 loss: 0.6763 accuracy: 0.5646 val_loss: 0.7045 val_accuracy: 0.4054
Epoch: 13 loss: 0.6795 accuracy: 0.5555 val_loss: 0.6861 val_accuracy: 0.5664
Epoch: 14 loss: 0.6770 accuracy: 0.5646 val_loss: 0.7629 val_accuracy: 0.3743
Epoch: 15 loss: 0.6774 accuracy: 0.5640 val_loss: 0.6852 val_accuracy: 0.5819
Epoch: 16 loss: 0.6779 accuracy: 0.5593 val_loss: 0.7392 val_accuracy: 0.3743
Epoch: 17 loss: 0.6761 accuracy: 0.5631 val_loss: 0.6880 val_accuracy: 0.5508
Epoch: 18 loss: 0.6773 accuracy: 0.5597 val_loss: 0.6833 val_accuracy: 0.6116
Epoch: 19 loss: 0.6744 accuracy: 0.5593 val_loss: 0.6877 val_accuracy: 0.5311
Epoch: 20 loss: 0.6743 accuracy: 0.5538 val_loss: 0.7112 val_accuracy: 0.3743
Job ended!
