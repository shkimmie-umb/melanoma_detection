Tue 27 Feb 2024 02:37:24 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['MEDNODE']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB5
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb5 (Functional)  (None, 2048)              28513527  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 29,697,529
Trainable params: 1,182,466
Non-trainable params: 28,515,063
_________________________________________________________________
Fitting MEDNODE_aug_EfficientNetB5_150h_150w_None model...
model_name: MEDNODE_aug_EfficientNetB5_150h_150w_None
Epoch: 1 loss: 0.6971 accuracy: 0.5089 val_loss: 0.6946 val_accuracy: 0.4118
Epoch: 2 loss: 0.6764 accuracy: 0.5982 val_loss: 0.6959 val_accuracy: 0.4118
Epoch: 3 loss: 0.6915 accuracy: 0.5357 val_loss: 0.6973 val_accuracy: 0.4118
Epoch: 4 loss: 0.7010 accuracy: 0.4866 val_loss: 0.6985 val_accuracy: 0.4118
Epoch: 5 loss: 0.6823 accuracy: 0.5580 val_loss: 0.6998 val_accuracy: 0.4118
Epoch: 6 loss: 0.7023 accuracy: 0.5402 val_loss: 0.7007 val_accuracy: 0.4118
Epoch: 7 loss: 0.6977 accuracy: 0.5045 val_loss: 0.7021 val_accuracy: 0.4118
Epoch: 8 loss: 0.6790 accuracy: 0.5938 val_loss: 0.7030 val_accuracy: 0.4118
Epoch: 9 loss: 0.6606 accuracy: 0.6116 val_loss: 0.7039 val_accuracy: 0.4118
Epoch: 10 loss: 0.6657 accuracy: 0.6161 val_loss: 0.7051 val_accuracy: 0.4118
Epoch: 11 loss: 0.6978 accuracy: 0.5223 val_loss: 0.7062 val_accuracy: 0.4118
Epoch: 12 loss: 0.6989 accuracy: 0.5312 val_loss: 0.7071 val_accuracy: 0.4118
Epoch: 13 loss: 0.6949 accuracy: 0.5134 val_loss: 0.7080 val_accuracy: 0.4118
Epoch: 14 loss: 0.6828 accuracy: 0.5714 val_loss: 0.7089 val_accuracy: 0.4118
Epoch: 15 loss: 0.6688 accuracy: 0.5848 val_loss: 0.7096 val_accuracy: 0.4118
Epoch: 16 loss: 0.6795 accuracy: 0.5848 val_loss: 0.7111 val_accuracy: 0.4118
Epoch: 17 loss: 0.6656 accuracy: 0.6116 val_loss: 0.7121 val_accuracy: 0.4118
Epoch: 18 loss: 0.6830 accuracy: 0.5893 val_loss: 0.7132 val_accuracy: 0.4118
Epoch: 19 loss: 0.6605 accuracy: 0.6027 val_loss: 0.7143 val_accuracy: 0.4118
Epoch: 20 loss: 0.6884 accuracy: 0.5580 val_loss: 0.7154 val_accuracy: 0.4118
Job ended!
