Mon 26 Feb 2024 10:16:04 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID:  1
DB: ['_7_point_criteria']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet121
SELF_AUG: 1
JOB_INDEX: 1
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet121 (Functional)     (None, 1024)              7037504   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,697,218
Trainable params: 658,178
Non-trainable params: 7,039,040
_________________________________________________________________
Fitting _7_point_criteria_aug_DenseNet121_150h_150w_1 model...
model_name: _7_point_criteria_aug_DenseNet121_150h_150w_1
Epoch: 1 loss: 0.8776 accuracy: 0.5757 val_loss: 0.6860 val_accuracy: 0.7094
Epoch: 2 loss: 0.8230 accuracy: 0.5707 val_loss: 0.6883 val_accuracy: 0.7044
Epoch: 3 loss: 0.7344 accuracy: 0.6389 val_loss: 0.6890 val_accuracy: 0.6601
Epoch: 4 loss: 0.7086 accuracy: 0.6389 val_loss: 0.6967 val_accuracy: 0.3350
Epoch: 5 loss: 0.6899 accuracy: 0.6489 val_loss: 0.6997 val_accuracy: 0.3005
Epoch: 6 loss: 0.6613 accuracy: 0.6628 val_loss: 0.7012 val_accuracy: 0.3054
Epoch: 7 loss: 0.7143 accuracy: 0.6389 val_loss: 0.6937 val_accuracy: 0.4384
Epoch: 8 loss: 0.6945 accuracy: 0.6539 val_loss: 0.6941 val_accuracy: 0.4335
Epoch: 9 loss: 0.6535 accuracy: 0.6722 val_loss: 0.6991 val_accuracy: 0.3547
Epoch: 10 loss: 0.6136 accuracy: 0.6955 val_loss: 0.6916 val_accuracy: 0.5172
Epoch: 11 loss: 0.6744 accuracy: 0.6805 val_loss: 0.7023 val_accuracy: 0.3596
Epoch: 12 loss: 0.6460 accuracy: 0.6990 val_loss: 0.7216 val_accuracy: 0.3153
Epoch: 13 loss: 0.6981 accuracy: 0.6705 val_loss: 0.7254 val_accuracy: 0.3153
Epoch: 14 loss: 0.6331 accuracy: 0.6972 val_loss: 0.7231 val_accuracy: 0.3300
Epoch: 15 loss: 0.6609 accuracy: 0.6622 val_loss: 0.7090 val_accuracy: 0.3547
Epoch: 16 loss: 0.6612 accuracy: 0.6938 val_loss: 0.7093 val_accuracy: 0.3645
Epoch: 17 loss: 0.6207 accuracy: 0.6988 val_loss: 0.7425 val_accuracy: 0.3251
Epoch: 18 loss: 0.5891 accuracy: 0.6872 val_loss: 0.7195 val_accuracy: 0.3990
Epoch: 19 loss: 0.6234 accuracy: 0.6955 val_loss: 0.7130 val_accuracy: 0.4187
Epoch: 20 loss: 0.5726 accuracy: 0.7188 val_loss: 0.7221 val_accuracy: 0.3744
Job ended!
