Fri 01 Mar 2024 02:23:16 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2019']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB0
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb0 (Functional)  (None, 1280)              4049571   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 4,840,357
Trainable params: 789,250
Non-trainable params: 4,051,107
_________________________________________________________________
Fitting ISIC2019_aug_EfficientNetB0_150h_150w_None model...
model_name: ISIC2019_aug_EfficientNetB0_150h_150w_None
Epoch: 1 loss: 0.6085 accuracy: 0.7254 val_loss: 0.3627 val_accuracy: 0.8593
Epoch: 2 loss: 0.5098 accuracy: 0.7630 val_loss: 0.3412 val_accuracy: 0.8609
Epoch: 3 loss: 0.4791 accuracy: 0.7817 val_loss: 0.3349 val_accuracy: 0.8642
Epoch: 4 loss: 0.4597 accuracy: 0.7839 val_loss: 0.3283 val_accuracy: 0.8709
Epoch: 5 loss: 0.4449 accuracy: 0.7940 val_loss: 0.3207 val_accuracy: 0.8709
Epoch: 6 loss: 0.4337 accuracy: 0.7978 val_loss: 0.3204 val_accuracy: 0.8715
Epoch: 7 loss: 0.4211 accuracy: 0.8067 val_loss: 0.3110 val_accuracy: 0.8711
Epoch: 8 loss: 0.4128 accuracy: 0.8088 val_loss: 0.3109 val_accuracy: 0.8733
Epoch: 9 loss: 0.4059 accuracy: 0.8134 val_loss: 0.3069 val_accuracy: 0.8763
Epoch: 10 loss: 0.3959 accuracy: 0.8173 val_loss: 0.3080 val_accuracy: 0.8721
Epoch: 11 loss: 0.3926 accuracy: 0.8194 val_loss: 0.3114 val_accuracy: 0.8703
Epoch: 12 loss: 0.3836 accuracy: 0.8250 val_loss: 0.3067 val_accuracy: 0.8782
Epoch: 13 loss: 0.3761 accuracy: 0.8267 val_loss: 0.3164 val_accuracy: 0.8682
Epoch: 14 loss: 0.3735 accuracy: 0.8288 val_loss: 0.3132 val_accuracy: 0.8770
Epoch: 15 loss: 0.3687 accuracy: 0.8335 val_loss: 0.3027 val_accuracy: 0.8755
Epoch: 16 loss: 0.3639 accuracy: 0.8349 val_loss: 0.3042 val_accuracy: 0.8757
Epoch: 17 loss: 0.3620 accuracy: 0.8353 val_loss: 0.3023 val_accuracy: 0.8765
Epoch: 18 loss: 0.3493 accuracy: 0.8395 val_loss: 0.3088 val_accuracy: 0.8743
Epoch: 19 loss: 0.3479 accuracy: 0.8392 val_loss: 0.3041 val_accuracy: 0.8792
Epoch: 20 loss: 0.3433 accuracy: 0.8437 val_loss: 0.3027 val_accuracy: 0.8788
Job ended!
