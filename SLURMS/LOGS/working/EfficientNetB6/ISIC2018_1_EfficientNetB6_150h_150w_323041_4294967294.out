Tue 27 Feb 2024 05:10:52 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2018']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB6
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb6 (Functional)  (None, 2304)              40960143  
_________________________________________________________________
dense (Dense)                (None, 512)               1180160   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 42,275,217
Trainable params: 1,313,538
Non-trainable params: 40,961,679
_________________________________________________________________
Fitting ISIC2018_aug_EfficientNetB6_150h_150w_None model...
model_name: ISIC2018_aug_EfficientNetB6_150h_150w_None
Epoch: 1 loss: 0.6074 accuracy: 0.6880 val_loss: 0.4518 val_accuracy: 0.8912
Epoch: 2 loss: 0.5617 accuracy: 0.7309 val_loss: 0.4048 val_accuracy: 0.8912
Epoch: 3 loss: 0.5603 accuracy: 0.7294 val_loss: 0.3561 val_accuracy: 0.8912
Epoch: 4 loss: 0.5620 accuracy: 0.7294 val_loss: 0.3612 val_accuracy: 0.8912
Epoch: 5 loss: 0.5576 accuracy: 0.7317 val_loss: 0.3656 val_accuracy: 0.8912
Epoch: 6 loss: 0.5520 accuracy: 0.7331 val_loss: 0.3445 val_accuracy: 0.8912
Epoch: 7 loss: 0.5537 accuracy: 0.7326 val_loss: 0.3841 val_accuracy: 0.8912
Epoch: 8 loss: 0.5527 accuracy: 0.7327 val_loss: 0.3523 val_accuracy: 0.8912
Epoch: 9 loss: 0.5472 accuracy: 0.7346 val_loss: 0.3885 val_accuracy: 0.8912
Epoch: 10 loss: 0.5455 accuracy: 0.7337 val_loss: 0.3656 val_accuracy: 0.8912
Epoch: 11 loss: 0.5430 accuracy: 0.7366 val_loss: 0.3601 val_accuracy: 0.8912
Epoch: 12 loss: 0.5488 accuracy: 0.7347 val_loss: 0.4072 val_accuracy: 0.8808
Epoch: 13 loss: 0.5444 accuracy: 0.7358 val_loss: 0.3870 val_accuracy: 0.8912
Epoch: 14 loss: 0.5479 accuracy: 0.7362 val_loss: 0.3767 val_accuracy: 0.8912
Epoch: 15 loss: 0.5444 accuracy: 0.7380 val_loss: 0.3775 val_accuracy: 0.8912
Epoch: 16 loss: 0.5451 accuracy: 0.7366 val_loss: 0.4047 val_accuracy: 0.8912
Epoch: 17 loss: 0.5435 accuracy: 0.7356 val_loss: 0.3909 val_accuracy: 0.8808
Epoch: 18 loss: 0.5408 accuracy: 0.7365 val_loss: 0.3385 val_accuracy: 0.8912
Epoch: 19 loss: 0.5414 accuracy: 0.7384 val_loss: 0.4377 val_accuracy: 0.8912
Epoch: 20 loss: 0.5403 accuracy: 0.7386 val_loss: 0.3577 val_accuracy: 0.8912
Job ended!
