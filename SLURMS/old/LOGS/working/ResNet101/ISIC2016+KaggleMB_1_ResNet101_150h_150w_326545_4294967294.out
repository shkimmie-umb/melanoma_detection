Fri 01 Mar 2024 06:34:24 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'KaggleMB']
IMG_SIZE: [150, 150]
CLASSIFIER: ResNet101
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
resnet101 (Functional)       (None, 2048)              42658176  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 43,842,178
Trainable params: 1,182,466
Non-trainable params: 42,659,712
_________________________________________________________________
Fitting ISIC2016+KaggleMB_aug_ResNet101_150h_150w_None model...
model_name: ISIC2016+KaggleMB_aug_ResNet101_150h_150w_None
Epoch: 1 loss: 0.8300 accuracy: 0.6375 val_loss: 0.4912 val_accuracy: 0.7944
Epoch: 2 loss: 0.6403 accuracy: 0.7173 val_loss: 0.4654 val_accuracy: 0.8111
Epoch: 3 loss: 0.5491 accuracy: 0.7520 val_loss: 0.4666 val_accuracy: 0.8278
Epoch: 4 loss: 0.4447 accuracy: 0.8049 val_loss: 0.4596 val_accuracy: 0.8167
Epoch: 5 loss: 0.4278 accuracy: 0.8127 val_loss: 0.4555 val_accuracy: 0.8222
Epoch: 6 loss: 0.3855 accuracy: 0.8395 val_loss: 0.4599 val_accuracy: 0.8278
Epoch: 7 loss: 0.3508 accuracy: 0.8439 val_loss: 0.4610 val_accuracy: 0.8333
Epoch: 8 loss: 0.3108 accuracy: 0.8716 val_loss: 0.4545 val_accuracy: 0.8389
Epoch: 9 loss: 0.2998 accuracy: 0.8664 val_loss: 0.4657 val_accuracy: 0.8500
Epoch: 10 loss: 0.2794 accuracy: 0.8809 val_loss: 0.4922 val_accuracy: 0.8444
Epoch: 11 loss: 0.2346 accuracy: 0.9003 val_loss: 0.5021 val_accuracy: 0.8333
Epoch: 12 loss: 0.2053 accuracy: 0.9237 val_loss: 0.5400 val_accuracy: 0.8167
Epoch: 13 loss: 0.2044 accuracy: 0.9193 val_loss: 0.5153 val_accuracy: 0.8167
Epoch: 14 loss: 0.1859 accuracy: 0.9306 val_loss: 0.5229 val_accuracy: 0.8278
Epoch: 15 loss: 0.1600 accuracy: 0.9419 val_loss: 0.5374 val_accuracy: 0.8222
Epoch: 16 loss: 0.1553 accuracy: 0.9428 val_loss: 0.5485 val_accuracy: 0.8056
Epoch: 17 loss: 0.1362 accuracy: 0.9488 val_loss: 0.5754 val_accuracy: 0.8333
Epoch: 18 loss: 0.1267 accuracy: 0.9566 val_loss: 0.5810 val_accuracy: 0.8056
Epoch: 19 loss: 0.1119 accuracy: 0.9627 val_loss: 0.5716 val_accuracy: 0.8222
Epoch: 20 loss: 0.1052 accuracy: 0.9688 val_loss: 0.5684 val_accuracy: 0.8111
Job ended!
