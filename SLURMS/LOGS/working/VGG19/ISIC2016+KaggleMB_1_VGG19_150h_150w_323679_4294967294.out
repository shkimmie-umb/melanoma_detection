Wed 28 Feb 2024 10:56:22 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'KaggleMB']
IMG_SIZE: [150, 150]
CLASSIFIER: VGG19
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
vgg19 (Functional)           (None, 512)               20024384  
_________________________________________________________________
dense (Dense)                (None, 512)               262656    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 20,421,954
Trainable params: 396,034
Non-trainable params: 20,025,920
_________________________________________________________________
Fitting ISIC2016+KaggleMB_aug_VGG19_150h_150w_None model...
model_name: ISIC2016+KaggleMB_aug_VGG19_150h_150w_None
Epoch: 1 loss: 0.9131 accuracy: 0.5491 val_loss: 0.6575 val_accuracy: 0.6257
Epoch: 2 loss: 0.8111 accuracy: 0.5800 val_loss: 0.6671 val_accuracy: 0.6257
Epoch: 3 loss: 0.8002 accuracy: 0.5817 val_loss: 0.6534 val_accuracy: 0.6384
Epoch: 4 loss: 0.7521 accuracy: 0.5983 val_loss: 0.6145 val_accuracy: 0.6568
Epoch: 5 loss: 0.7378 accuracy: 0.6064 val_loss: 0.6463 val_accuracy: 0.6441
Epoch: 6 loss: 0.7415 accuracy: 0.6035 val_loss: 0.6433 val_accuracy: 0.6582
Epoch: 7 loss: 0.7131 accuracy: 0.6067 val_loss: 0.6722 val_accuracy: 0.6610
Epoch: 8 loss: 0.7095 accuracy: 0.6263 val_loss: 0.6239 val_accuracy: 0.6582
Epoch: 9 loss: 0.6993 accuracy: 0.6291 val_loss: 0.6228 val_accuracy: 0.6836
Epoch: 10 loss: 0.6880 accuracy: 0.6314 val_loss: 0.6415 val_accuracy: 0.6709
Epoch: 11 loss: 0.6815 accuracy: 0.6329 val_loss: 0.5890 val_accuracy: 0.6808
Epoch: 12 loss: 0.6638 accuracy: 0.6613 val_loss: 0.6567 val_accuracy: 0.6596
Epoch: 13 loss: 0.6715 accuracy: 0.6433 val_loss: 0.5624 val_accuracy: 0.7048
Epoch: 14 loss: 0.6466 accuracy: 0.6576 val_loss: 0.6105 val_accuracy: 0.6653
Epoch: 15 loss: 0.6466 accuracy: 0.6525 val_loss: 0.6748 val_accuracy: 0.6356
Epoch: 16 loss: 0.6445 accuracy: 0.6613 val_loss: 0.5934 val_accuracy: 0.6992
Epoch: 17 loss: 0.6279 accuracy: 0.6634 val_loss: 0.5567 val_accuracy: 0.7161
Epoch: 18 loss: 0.6206 accuracy: 0.6694 val_loss: 0.5491 val_accuracy: 0.7020
Epoch: 19 loss: 0.6309 accuracy: 0.6749 val_loss: 0.5505 val_accuracy: 0.7218
Epoch: 20 loss: 0.6076 accuracy: 0.6817 val_loss: 0.5809 val_accuracy: 0.6893
Job ended!
