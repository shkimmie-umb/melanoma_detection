Tue 27 Feb 2024 12:21:33 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['_7_point_criteria']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB5
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb5 (Functional)  (None, 2048)              28513527  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 29,697,529
Trainable params: 1,182,466
Non-trainable params: 28,515,063
_________________________________________________________________
Fitting _7_point_criteria_aug_EfficientNetB5_150h_150w_None model...
model_name: _7_point_criteria_aug_EfficientNetB5_150h_150w_None
Epoch: 1 loss: 0.6860 accuracy: 0.5275 val_loss: 0.6847 val_accuracy: 0.6995
Epoch: 2 loss: 0.6653 accuracy: 0.6040 val_loss: 0.6771 val_accuracy: 0.6995
Epoch: 3 loss: 0.6724 accuracy: 0.6106 val_loss: 0.6705 val_accuracy: 0.6995
Epoch: 4 loss: 0.6625 accuracy: 0.5907 val_loss: 0.6636 val_accuracy: 0.6995
Epoch: 5 loss: 0.6404 accuracy: 0.6506 val_loss: 0.6581 val_accuracy: 0.6995
Epoch: 6 loss: 0.6451 accuracy: 0.6473 val_loss: 0.6529 val_accuracy: 0.6995
Epoch: 7 loss: 0.6493 accuracy: 0.6423 val_loss: 0.6506 val_accuracy: 0.6995
Epoch: 8 loss: 0.6559 accuracy: 0.6290 val_loss: 0.6484 val_accuracy: 0.6995
Epoch: 9 loss: 0.6452 accuracy: 0.6489 val_loss: 0.6446 val_accuracy: 0.6995
Epoch: 10 loss: 0.6486 accuracy: 0.6306 val_loss: 0.6417 val_accuracy: 0.6995
Epoch: 11 loss: 0.6405 accuracy: 0.6439 val_loss: 0.6386 val_accuracy: 0.6995
Epoch: 12 loss: 0.6315 accuracy: 0.6506 val_loss: 0.6377 val_accuracy: 0.6995
Epoch: 13 loss: 0.6530 accuracy: 0.6240 val_loss: 0.6367 val_accuracy: 0.6995
Epoch: 14 loss: 0.6577 accuracy: 0.6349 val_loss: 0.6346 val_accuracy: 0.6995
Epoch: 15 loss: 0.6451 accuracy: 0.6156 val_loss: 0.6334 val_accuracy: 0.6995
Epoch: 16 loss: 0.6342 accuracy: 0.6423 val_loss: 0.6317 val_accuracy: 0.6995
Epoch: 17 loss: 0.6241 accuracy: 0.6689 val_loss: 0.6300 val_accuracy: 0.6995
Epoch: 18 loss: 0.6314 accuracy: 0.6356 val_loss: 0.6246 val_accuracy: 0.6995
Epoch: 19 loss: 0.6328 accuracy: 0.6406 val_loss: 0.6242 val_accuracy: 0.6995
Epoch: 20 loss: 0.6130 accuracy: 0.6772 val_loss: 0.6237 val_accuracy: 0.6995
Job ended!
