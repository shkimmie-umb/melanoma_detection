Sun 03 Mar 2024 12:34:45 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['KaggleMB']
IMG_SIZE: [150, 150]
CLASSIFIER: ResNet50
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
resnet50 (Functional)        (None, 2048)              23587712  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 24,771,714
Trainable params: 1,182,466
Non-trainable params: 23,589,248
_________________________________________________________________
Fitting KaggleMB_aug_ResNet50_150h_150w_None model...
model_name: KaggleMB_aug_ResNet50_150h_150w_None
Epoch: 1 loss: 0.5286 accuracy: 0.7685 val_loss: 0.3285 val_accuracy: 0.8390
Epoch: 2 loss: 0.3656 accuracy: 0.8418 val_loss: 0.2898 val_accuracy: 0.8750
Epoch: 3 loss: 0.2846 accuracy: 0.8787 val_loss: 0.2598 val_accuracy: 0.8864
Epoch: 4 loss: 0.2500 accuracy: 0.8944 val_loss: 0.2730 val_accuracy: 0.8807
Epoch: 5 loss: 0.2215 accuracy: 0.9067 val_loss: 0.2588 val_accuracy: 0.8920
Epoch: 6 loss: 0.1983 accuracy: 0.9192 val_loss: 0.2649 val_accuracy: 0.8845
Epoch: 7 loss: 0.1748 accuracy: 0.9278 val_loss: 0.2725 val_accuracy: 0.8807
Epoch: 8 loss: 0.1527 accuracy: 0.9381 val_loss: 0.2685 val_accuracy: 0.8845
Epoch: 9 loss: 0.1531 accuracy: 0.9369 val_loss: 0.2450 val_accuracy: 0.8902
Epoch: 10 loss: 0.1355 accuracy: 0.9472 val_loss: 0.2555 val_accuracy: 0.8845
Epoch: 11 loss: 0.1246 accuracy: 0.9546 val_loss: 0.2538 val_accuracy: 0.8939
Epoch: 12 loss: 0.1136 accuracy: 0.9566 val_loss: 0.2666 val_accuracy: 0.8958
Epoch: 13 loss: 0.0999 accuracy: 0.9606 val_loss: 0.2960 val_accuracy: 0.8826
Epoch: 14 loss: 0.0969 accuracy: 0.9660 val_loss: 0.2559 val_accuracy: 0.8864
Epoch: 15 loss: 0.0818 accuracy: 0.9697 val_loss: 0.2765 val_accuracy: 0.8845
Epoch: 16 loss: 0.0801 accuracy: 0.9706 val_loss: 0.3049 val_accuracy: 0.8902
Epoch: 17 loss: 0.0675 accuracy: 0.9772 val_loss: 0.3200 val_accuracy: 0.8845
Epoch: 18 loss: 0.0726 accuracy: 0.9715 val_loss: 0.3252 val_accuracy: 0.8902
Epoch: 19 loss: 0.0650 accuracy: 0.9783 val_loss: 0.3392 val_accuracy: 0.8883
Epoch: 20 loss: 0.0697 accuracy: 0.9717 val_loss: 0.3236 val_accuracy: 0.8845
Job ended!
