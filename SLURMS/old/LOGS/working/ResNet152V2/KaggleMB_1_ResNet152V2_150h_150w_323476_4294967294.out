Wed 28 Feb 2024 07:11:11 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['KaggleMB']
IMG_SIZE: [150, 150]
CLASSIFIER: ResNet152V2
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
resnet152v2 (Functional)     (None, 2048)              58331648  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 59,515,650
Trainable params: 1,182,466
Non-trainable params: 58,333,184
_________________________________________________________________
Fitting KaggleMB_aug_ResNet152V2_150h_150w_None model...
model_name: KaggleMB_aug_ResNet152V2_150h_150w_None
Epoch: 1 loss: 0.7172 accuracy: 0.6614 val_loss: 0.6666 val_accuracy: 0.7633
Epoch: 2 loss: 0.6122 accuracy: 0.7131 val_loss: 0.6433 val_accuracy: 0.6761
Epoch: 3 loss: 0.5634 accuracy: 0.7379 val_loss: 0.7318 val_accuracy: 0.4527
Epoch: 4 loss: 0.5345 accuracy: 0.7602 val_loss: 0.6414 val_accuracy: 0.6307
Epoch: 5 loss: 0.5419 accuracy: 0.7534 val_loss: 0.6363 val_accuracy: 0.6288
Epoch: 6 loss: 0.5362 accuracy: 0.7482 val_loss: 0.7247 val_accuracy: 0.5587
Epoch: 7 loss: 0.5324 accuracy: 0.7534 val_loss: 0.7182 val_accuracy: 0.6307
Epoch: 8 loss: 0.5094 accuracy: 0.7745 val_loss: 0.6523 val_accuracy: 0.7008
Epoch: 9 loss: 0.5271 accuracy: 0.7616 val_loss: 0.6232 val_accuracy: 0.7064
Epoch: 10 loss: 0.5072 accuracy: 0.7725 val_loss: 0.9873 val_accuracy: 0.4621
Epoch: 11 loss: 0.5275 accuracy: 0.7511 val_loss: 1.4483 val_accuracy: 0.4337
Epoch: 12 loss: 0.4974 accuracy: 0.7622 val_loss: 1.2315 val_accuracy: 0.4356
Epoch: 13 loss: 0.4797 accuracy: 0.7728 val_loss: 0.7123 val_accuracy: 0.6648
Epoch: 14 loss: 0.4558 accuracy: 0.7833 val_loss: 0.8033 val_accuracy: 0.6326
Epoch: 15 loss: 0.4385 accuracy: 0.7979 val_loss: 0.4817 val_accuracy: 0.7765
Epoch: 16 loss: 0.4514 accuracy: 0.7919 val_loss: 0.4170 val_accuracy: 0.7917
Epoch: 17 loss: 0.4166 accuracy: 0.8073 val_loss: 0.4351 val_accuracy: 0.7765
Epoch: 18 loss: 0.4311 accuracy: 0.8090 val_loss: 0.4432 val_accuracy: 0.7727
Epoch: 19 loss: 0.4193 accuracy: 0.8073 val_loss: 0.4280 val_accuracy: 0.7917
Epoch: 20 loss: 0.4259 accuracy: 0.8045 val_loss: 0.5408 val_accuracy: 0.6970
Job ended!
