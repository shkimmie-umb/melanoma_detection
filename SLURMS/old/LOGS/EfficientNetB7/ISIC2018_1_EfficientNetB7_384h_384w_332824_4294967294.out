Wed 08 May 2024 07:19:33 PM EDT
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2018']
IMG_SIZE: [384, 384]
CLASSIFIER: EfficientNetB7
JOB_INDEX: None
Start training augmented images
Combining...
Combining 1th db out of 1 dbs
Stacking data
Combining complete
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb7 (Functional)  (None, 2560)              64097687  
_________________________________________________________________
dense (Dense)                (None, 512)               1311232   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 65,543,833
Trainable params: 1,444,610
Non-trainable params: 64,099,223
_________________________________________________________________
Fitting ISIC2018_aug_EfficientNetB7_384h_384w_None model...
model_name: ISIC2018_aug_EfficientNetB7_384h_384w_None
Epoch: 1 loss: 1.3233 accuracy: 0.5478 val_loss: 1.3049 val_accuracy: 0.1088
Epoch: 2 loss: 1.1158 accuracy: 0.6512 val_loss: 1.1383 val_accuracy: 0.1399
Epoch: 3 loss: 1.0585 accuracy: 0.6902 val_loss: 1.0893 val_accuracy: 0.8912
Epoch: 4 loss: 1.0147 accuracy: 0.7172 val_loss: 0.9683 val_accuracy: 0.8912
Epoch: 5 loss: 0.9876 accuracy: 0.7244 val_loss: 0.8408 val_accuracy: 0.8912
Epoch: 6 loss: 0.9804 accuracy: 0.7152 val_loss: 0.8289 val_accuracy: 0.8912
Epoch: 7 loss: 0.9500 accuracy: 0.7261 val_loss: 0.7085 val_accuracy: 0.8912
Epoch: 8 loss: 0.9315 accuracy: 0.7243 val_loss: 0.7734 val_accuracy: 0.8912
Epoch: 9 loss: 0.9189 accuracy: 0.7220 val_loss: 0.7767 val_accuracy: 0.8912
Epoch: 10 loss: 0.8950 accuracy: 0.7235 val_loss: 0.7807 val_accuracy: 0.8912
Epoch: 11 loss: 0.8805 accuracy: 0.7251 val_loss: 0.7475 val_accuracy: 0.8912
Epoch: 12 loss: 0.8671 accuracy: 0.7212 val_loss: 0.6450 val_accuracy: 0.8912
Epoch: 13 loss: 0.8413 accuracy: 0.7314 val_loss: 0.7712 val_accuracy: 0.8912
Epoch: 14 loss: 0.8227 accuracy: 0.7350 val_loss: 0.7516 val_accuracy: 0.8912
Epoch: 15 loss: 0.8125 accuracy: 0.7297 val_loss: 0.6156 val_accuracy: 0.8912
Epoch: 16 loss: 0.7973 accuracy: 0.7293 val_loss: 0.6558 val_accuracy: 0.8912
Epoch: 17 loss: 0.7876 accuracy: 0.7238 val_loss: 0.5832 val_accuracy: 0.8912
Epoch: 18 loss: 0.7720 accuracy: 0.7249 val_loss: 0.6085 val_accuracy: 0.8912
Epoch: 19 loss: 0.7617 accuracy: 0.7230 val_loss: 0.7853 val_accuracy: 0.8912
Epoch: 20 loss: 0.7477 accuracy: 0.7244 val_loss: 0.5261 val_accuracy: 0.8912
Epoch: 21 loss: 0.7326 accuracy: 0.7275 val_loss: 0.5229 val_accuracy: 0.8912
Epoch: 22 loss: 0.7268 accuracy: 0.7238 val_loss: 0.5744 val_accuracy: 0.8912
Epoch: 23 loss: 0.7113 accuracy: 0.7282 val_loss: 0.5515 val_accuracy: 0.8912
Epoch: 24 loss: 0.7069 accuracy: 0.7234 val_loss: 0.6090 val_accuracy: 0.8912
Epoch: 25 loss: 0.6894 accuracy: 0.7321 val_loss: 0.5357 val_accuracy: 0.8912
Epoch: 26 loss: 0.6844 accuracy: 0.7285 val_loss: 0.5007 val_accuracy: 0.8912
Epoch: 27 loss: 0.6735 accuracy: 0.7312 val_loss: 0.5041 val_accuracy: 0.8912
Epoch: 28 loss: 0.6665 accuracy: 0.7327 val_loss: 0.4892 val_accuracy: 0.8912
Epoch: 29 loss: 0.6629 accuracy: 0.7292 val_loss: 0.4920 val_accuracy: 0.8912
Epoch: 30 loss: 0.6556 accuracy: 0.7304 val_loss: 0.4653 val_accuracy: 0.8912
Epoch: 31 loss: 0.6560 accuracy: 0.7250 val_loss: 0.4578 val_accuracy: 0.8912
Epoch: 32 loss: 0.6449 accuracy: 0.7327 val_loss: 0.4338 val_accuracy: 0.8912
Epoch: 33 loss: 0.6478 accuracy: 0.7248 val_loss: 0.4322 val_accuracy: 0.8912
Epoch: 34 loss: 0.6397 accuracy: 0.7300 val_loss: 0.4798 val_accuracy: 0.8912
Epoch: 35 loss: 0.6446 accuracy: 0.7219 val_loss: 0.4722 val_accuracy: 0.8912
Epoch: 36 loss: 0.6367 accuracy: 0.7267 val_loss: 0.4674 val_accuracy: 0.8912
Epoch: 37 loss: 0.6267 accuracy: 0.7338 val_loss: 0.4271 val_accuracy: 0.8912
Epoch: 38 loss: 0.6289 accuracy: 0.7293 val_loss: 0.6213 val_accuracy: 0.8912
Epoch: 39 loss: 0.6327 accuracy: 0.7243 val_loss: 0.4561 val_accuracy: 0.8912
Epoch: 40 loss: 0.6168 accuracy: 0.7357 val_loss: 0.4293 val_accuracy: 0.8912
Epoch: 41 loss: 0.6230 accuracy: 0.7282 val_loss: 0.4454 val_accuracy: 0.8912
Epoch: 42 loss: 0.6214 accuracy: 0.7281 val_loss: 0.3922 val_accuracy: 0.8912
Epoch: 43 loss: 0.6184 accuracy: 0.7307 val_loss: 0.4751 val_accuracy: 0.8912
Epoch: 44 loss: 0.6239 accuracy: 0.7218 val_loss: 0.4791 val_accuracy: 0.8912
Epoch: 45 loss: 0.6152 accuracy: 0.7290 val_loss: 0.5048 val_accuracy: 0.8912
Epoch: 46 loss: 0.6150 accuracy: 0.7282 val_loss: 0.4400 val_accuracy: 0.8912
Epoch: 47 loss: 0.6177 accuracy: 0.7239 val_loss: 0.4650 val_accuracy: 0.8912

Epoch 00047: ReduceLROnPlateau reducing learning rate to 7.999999797903001e-05.
Epoch: 48 loss: 0.6117 accuracy: 0.7286 val_loss: 0.4384 val_accuracy: 0.8912
Epoch: 49 loss: 0.6134 accuracy: 0.7254 val_loss: 0.4419 val_accuracy: 0.8912
Epoch: 50 loss: 0.6111 accuracy: 0.7258 val_loss: 0.4491 val_accuracy: 0.8912
Epoch: 51 loss: 0.6100 accuracy: 0.7269 val_loss: 0.4227 val_accuracy: 0.8912
Epoch: 52 loss: 0.6041 accuracy: 0.7316 val_loss: 0.4283 val_accuracy: 0.8912

Epoch 00052: ReduceLROnPlateau reducing learning rate to 6.399999838322402e-05.
End of augmented training
Finish
Job ended!
