Thu 29 Feb 2024 07:41:37 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet169
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet169 (Functional)     (None, 1664)              12642880  
_________________________________________________________________
dense (Dense)                (None, 512)               852480    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 13,630,274
Trainable params: 985,858
Non-trainable params: 12,644,416
_________________________________________________________________
Fitting ISIC2016_aug_DenseNet169_150h_150w_None model...
model_name: ISIC2016_aug_DenseNet169_150h_150w_None
Epoch: 1 loss: 0.8335 accuracy: 0.6288 val_loss: 0.5479 val_accuracy: 0.8000
Epoch: 2 loss: 0.6544 accuracy: 0.7155 val_loss: 0.4853 val_accuracy: 0.8111
Epoch: 3 loss: 0.5410 accuracy: 0.7520 val_loss: 0.4695 val_accuracy: 0.7889
Epoch: 4 loss: 0.4864 accuracy: 0.7910 val_loss: 0.4812 val_accuracy: 0.7833
Epoch: 5 loss: 0.4961 accuracy: 0.7788 val_loss: 0.4805 val_accuracy: 0.8167
Epoch: 6 loss: 0.4233 accuracy: 0.7892 val_loss: 0.4781 val_accuracy: 0.8000
Epoch: 7 loss: 0.3797 accuracy: 0.8361 val_loss: 0.4919 val_accuracy: 0.7778
Epoch: 8 loss: 0.3523 accuracy: 0.8508 val_loss: 0.4911 val_accuracy: 0.7944
Epoch: 9 loss: 0.3061 accuracy: 0.8664 val_loss: 0.4862 val_accuracy: 0.7833
Epoch: 10 loss: 0.3024 accuracy: 0.8760 val_loss: 0.4935 val_accuracy: 0.7833
Epoch: 11 loss: 0.2899 accuracy: 0.8803 val_loss: 0.4766 val_accuracy: 0.8056
Epoch: 12 loss: 0.2731 accuracy: 0.8829 val_loss: 0.4894 val_accuracy: 0.7944
Epoch: 13 loss: 0.2653 accuracy: 0.8951 val_loss: 0.4987 val_accuracy: 0.7889
Epoch: 14 loss: 0.2285 accuracy: 0.9046 val_loss: 0.4999 val_accuracy: 0.8000
Epoch: 15 loss: 0.2352 accuracy: 0.9020 val_loss: 0.4731 val_accuracy: 0.8167
Epoch: 16 loss: 0.2052 accuracy: 0.9237 val_loss: 0.4948 val_accuracy: 0.7944
Epoch: 17 loss: 0.2084 accuracy: 0.9124 val_loss: 0.5290 val_accuracy: 0.8056
Epoch: 18 loss: 0.1713 accuracy: 0.9341 val_loss: 0.5404 val_accuracy: 0.8000
Epoch: 19 loss: 0.1540 accuracy: 0.9454 val_loss: 0.5795 val_accuracy: 0.7389
Epoch: 20 loss: 0.1621 accuracy: 0.9315 val_loss: 0.5541 val_accuracy: 0.7833
Job ended!
