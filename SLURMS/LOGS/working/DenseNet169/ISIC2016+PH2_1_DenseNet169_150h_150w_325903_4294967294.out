Fri 01 Mar 2024 12:34:37 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'PH2']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet169
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet169 (Functional)     (None, 1664)              12642880  
_________________________________________________________________
dense (Dense)                (None, 512)               852480    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 13,630,274
Trainable params: 985,858
Non-trainable params: 12,644,416
_________________________________________________________________
Fitting ISIC2016+PH2_aug_DenseNet169_150h_150w_None model...
model_name: ISIC2016+PH2_aug_DenseNet169_150h_150w_None
Epoch: 1 loss: 0.8296 accuracy: 0.6356 val_loss: 0.4236 val_accuracy: 0.8167
Epoch: 2 loss: 0.5951 accuracy: 0.7296 val_loss: 0.4062 val_accuracy: 0.8500
Epoch: 3 loss: 0.5450 accuracy: 0.7632 val_loss: 0.4151 val_accuracy: 0.8389
Epoch: 4 loss: 0.4384 accuracy: 0.8023 val_loss: 0.4220 val_accuracy: 0.8278
Epoch: 5 loss: 0.4156 accuracy: 0.8133 val_loss: 0.4127 val_accuracy: 0.8389
Epoch: 6 loss: 0.3863 accuracy: 0.8401 val_loss: 0.4235 val_accuracy: 0.8222
Epoch: 7 loss: 0.3609 accuracy: 0.8339 val_loss: 0.4155 val_accuracy: 0.8278
Epoch: 8 loss: 0.3194 accuracy: 0.8572 val_loss: 0.4348 val_accuracy: 0.8222
Epoch: 9 loss: 0.3075 accuracy: 0.8655 val_loss: 0.4437 val_accuracy: 0.8333
Epoch: 10 loss: 0.2759 accuracy: 0.8854 val_loss: 0.4589 val_accuracy: 0.8000
Epoch: 11 loss: 0.2700 accuracy: 0.8854 val_loss: 0.4487 val_accuracy: 0.8389
Epoch: 12 loss: 0.2400 accuracy: 0.8970 val_loss: 0.4683 val_accuracy: 0.8278
Epoch: 13 loss: 0.2316 accuracy: 0.9060 val_loss: 0.4646 val_accuracy: 0.8500
Epoch: 14 loss: 0.2028 accuracy: 0.9197 val_loss: 0.4823 val_accuracy: 0.8389
Epoch: 15 loss: 0.1896 accuracy: 0.9197 val_loss: 0.4800 val_accuracy: 0.8389
Epoch: 16 loss: 0.1731 accuracy: 0.9369 val_loss: 0.4928 val_accuracy: 0.8444
Epoch: 17 loss: 0.1753 accuracy: 0.9341 val_loss: 0.4971 val_accuracy: 0.8111
Epoch: 18 loss: 0.1516 accuracy: 0.9492 val_loss: 0.5014 val_accuracy: 0.8500
Epoch: 19 loss: 0.1343 accuracy: 0.9547 val_loss: 0.5283 val_accuracy: 0.8278
Epoch: 20 loss: 0.1328 accuracy: 0.9568 val_loss: 0.5356 val_accuracy: 0.8111
Job ended!
