Fri 03 May 2024 11:02:45 AM EDT
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'PAD_UFES_20']
IMG_SIZE: [384, 384]
CLASSIFIER: EfficientNetB2
JOB_INDEX: None
Start training augmented images
Combining...
Combining 1th db out of 2 dbs
Combining 2th db out of 2 dbs
Stacking data
Combining complete
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb2 (Functional)  (None, 1408)              7768569   
_________________________________________________________________
dense (Dense)                (None, 512)               721408    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 8,624,891
Trainable params: 854,786
Non-trainable params: 7,770,105
_________________________________________________________________
Fitting ISIC2016+PAD_UFES_20_aug_EfficientNetB2_384h_384w_None model...
model_name: ISIC2016+PAD_UFES_20_aug_EfficientNetB2_384h_384w_None
Epoch: 1 loss: 1.4419 accuracy: 0.5201 val_loss: 1.1710 val_accuracy: 0.9328
Epoch: 2 loss: 1.3004 accuracy: 0.5482 val_loss: 1.0890 val_accuracy: 0.9328
Epoch: 3 loss: 1.2207 accuracy: 0.5622 val_loss: 0.8627 val_accuracy: 0.9328
Epoch: 4 loss: 1.1636 accuracy: 0.5927 val_loss: 0.8545 val_accuracy: 0.9328
Epoch: 5 loss: 1.1201 accuracy: 0.6192 val_loss: 0.7056 val_accuracy: 0.9328
Epoch: 6 loss: 1.0811 accuracy: 0.6475 val_loss: 0.7813 val_accuracy: 0.9328
Epoch: 7 loss: 1.0636 accuracy: 0.6605 val_loss: 0.7844 val_accuracy: 0.9328
Epoch: 8 loss: 1.0353 accuracy: 0.6825 val_loss: 0.6829 val_accuracy: 0.9328
Epoch: 9 loss: 1.0219 accuracy: 0.6909 val_loss: 0.7631 val_accuracy: 0.9328
Epoch: 10 loss: 1.0230 accuracy: 0.6968 val_loss: 0.7760 val_accuracy: 0.9328
Epoch: 11 loss: 1.0012 accuracy: 0.7121 val_loss: 0.8483 val_accuracy: 0.9328
Epoch: 12 loss: 0.9951 accuracy: 0.7148 val_loss: 0.6848 val_accuracy: 0.9328
Epoch: 13 loss: 0.9805 accuracy: 0.7240 val_loss: 0.6216 val_accuracy: 0.9328
Epoch: 14 loss: 0.9984 accuracy: 0.7145 val_loss: 0.6291 val_accuracy: 0.9328
Epoch: 15 loss: 0.9745 accuracy: 0.7259 val_loss: 0.6559 val_accuracy: 0.9328
Epoch: 16 loss: 0.9668 accuracy: 0.7291 val_loss: 0.6272 val_accuracy: 0.9328
Epoch: 17 loss: 0.9758 accuracy: 0.7240 val_loss: 0.6620 val_accuracy: 0.9328
Epoch: 18 loss: 0.9704 accuracy: 0.7214 val_loss: 0.6157 val_accuracy: 0.9328
Epoch: 19 loss: 0.9631 accuracy: 0.7233 val_loss: 0.6414 val_accuracy: 0.9328
Epoch: 20 loss: 0.9503 accuracy: 0.7362 val_loss: 0.6357 val_accuracy: 0.9328
Epoch: 21 loss: 0.9355 accuracy: 0.7413 val_loss: 0.6382 val_accuracy: 0.9328
Epoch: 22 loss: 0.9362 accuracy: 0.7439 val_loss: 0.6283 val_accuracy: 0.9328
Epoch: 23 loss: 0.9281 accuracy: 0.7497 val_loss: 0.9297 val_accuracy: 0.9328

Epoch 00023: ReduceLROnPlateau reducing learning rate to 7.999999797903001e-05.
Epoch: 24 loss: 0.9362 accuracy: 0.7399 val_loss: 0.5915 val_accuracy: 0.9328
Epoch: 25 loss: 0.9412 accuracy: 0.7354 val_loss: 0.6295 val_accuracy: 0.9328
Epoch: 26 loss: 0.9301 accuracy: 0.7423 val_loss: 0.5975 val_accuracy: 0.9328
Epoch: 27 loss: 0.9367 accuracy: 0.7338 val_loss: 0.6151 val_accuracy: 0.9328
Epoch: 28 loss: 0.9250 accuracy: 0.7370 val_loss: 0.6068 val_accuracy: 0.9328
Epoch: 29 loss: 0.9042 accuracy: 0.7548 val_loss: 0.6125 val_accuracy: 0.9328

Epoch 00029: ReduceLROnPlateau reducing learning rate to 6.399999838322402e-05.
Epoch: 30 loss: 0.9097 accuracy: 0.7492 val_loss: 0.6036 val_accuracy: 0.9328
Epoch: 31 loss: 0.9056 accuracy: 0.7466 val_loss: 0.5911 val_accuracy: 0.9328
Epoch: 32 loss: 0.8918 accuracy: 0.7561 val_loss: 0.6268 val_accuracy: 0.9328
Epoch: 33 loss: 0.9046 accuracy: 0.7378 val_loss: 0.6095 val_accuracy: 0.9328
Epoch: 34 loss: 0.8963 accuracy: 0.7489 val_loss: 0.6293 val_accuracy: 0.9328
Epoch: 35 loss: 0.8930 accuracy: 0.7516 val_loss: 0.6088 val_accuracy: 0.9328
Epoch: 36 loss: 0.8806 accuracy: 0.7606 val_loss: 0.5859 val_accuracy: 0.9328
Epoch: 37 loss: 0.8946 accuracy: 0.7466 val_loss: 0.6111 val_accuracy: 0.9328
Epoch: 38 loss: 0.8679 accuracy: 0.7619 val_loss: 0.6003 val_accuracy: 0.9328
Epoch: 39 loss: 0.9118 accuracy: 0.7331 val_loss: 0.6625 val_accuracy: 0.9328
Epoch: 40 loss: 0.8830 accuracy: 0.7495 val_loss: 0.5893 val_accuracy: 0.9328
Epoch: 41 loss: 0.8797 accuracy: 0.7524 val_loss: 0.6168 val_accuracy: 0.9328

Epoch 00041: ReduceLROnPlateau reducing learning rate to 5.119999987073243e-05.
Epoch: 42 loss: 0.8621 accuracy: 0.7619 val_loss: 0.6474 val_accuracy: 0.9328
Epoch: 43 loss: 0.8562 accuracy: 0.7685 val_loss: 0.6563 val_accuracy: 0.9328
Epoch: 44 loss: 0.8787 accuracy: 0.7492 val_loss: 0.7007 val_accuracy: 0.9328
Epoch: 45 loss: 0.8743 accuracy: 0.7508 val_loss: 0.6352 val_accuracy: 0.9328
Epoch: 46 loss: 0.8728 accuracy: 0.7542 val_loss: 0.6877 val_accuracy: 0.9328

Epoch 00046: ReduceLROnPlateau reducing learning rate to 4.0960000478662555e-05.
End of augmented training
Finish
Job ended!
