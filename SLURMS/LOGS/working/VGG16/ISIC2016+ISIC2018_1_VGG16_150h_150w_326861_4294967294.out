Fri 01 Mar 2024 11:30:13 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'ISIC2018']
IMG_SIZE: [150, 150]
CLASSIFIER: VGG16
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
vgg16 (Functional)           (None, 512)               14714688  
_________________________________________________________________
dense (Dense)                (None, 512)               262656    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 15,112,258
Trainable params: 396,034
Non-trainable params: 14,716,224
_________________________________________________________________
Fitting ISIC2016+ISIC2018_aug_VGG16_150h_150w_None model...
model_name: ISIC2016+ISIC2018_aug_VGG16_150h_150w_None
Epoch: 1 loss: 0.6222 accuracy: 0.7039 val_loss: 0.4193 val_accuracy: 0.8177
Epoch: 2 loss: 0.4801 accuracy: 0.7833 val_loss: 0.3722 val_accuracy: 0.8499
Epoch: 3 loss: 0.4286 accuracy: 0.8045 val_loss: 0.3478 val_accuracy: 0.8847
Epoch: 4 loss: 0.4007 accuracy: 0.8187 val_loss: 0.3494 val_accuracy: 0.8713
Epoch: 5 loss: 0.3845 accuracy: 0.8235 val_loss: 0.3415 val_accuracy: 0.8660
Epoch: 6 loss: 0.3665 accuracy: 0.8343 val_loss: 0.3385 val_accuracy: 0.8713
Epoch: 7 loss: 0.3500 accuracy: 0.8430 val_loss: 0.3297 val_accuracy: 0.8847
Epoch: 8 loss: 0.3398 accuracy: 0.8469 val_loss: 0.3357 val_accuracy: 0.8686
Epoch: 9 loss: 0.3276 accuracy: 0.8563 val_loss: 0.3702 val_accuracy: 0.8606
Epoch: 10 loss: 0.3174 accuracy: 0.8577 val_loss: 0.3531 val_accuracy: 0.8660
Epoch: 11 loss: 0.3119 accuracy: 0.8595 val_loss: 0.3548 val_accuracy: 0.8633
Epoch: 12 loss: 0.2974 accuracy: 0.8721 val_loss: 0.3656 val_accuracy: 0.8686
Epoch: 13 loss: 0.2904 accuracy: 0.8721 val_loss: 0.3595 val_accuracy: 0.8740
Epoch: 14 loss: 0.2748 accuracy: 0.8839 val_loss: 0.3476 val_accuracy: 0.8740
Epoch: 15 loss: 0.2687 accuracy: 0.8825 val_loss: 0.3494 val_accuracy: 0.8820
Epoch: 16 loss: 0.2562 accuracy: 0.8882 val_loss: 0.3452 val_accuracy: 0.8660
Epoch: 17 loss: 0.2505 accuracy: 0.8948 val_loss: 0.3600 val_accuracy: 0.8820
Epoch: 18 loss: 0.2471 accuracy: 0.8943 val_loss: 0.3807 val_accuracy: 0.8794
Epoch: 19 loss: 0.2386 accuracy: 0.8992 val_loss: 0.3720 val_accuracy: 0.8686
Epoch: 20 loss: 0.2314 accuracy: 0.9009 val_loss: 0.3578 val_accuracy: 0.8767
Job ended!
