Fri 03 May 2024 05:43:07 AM EDT
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['PAD_UFES_20']
IMG_SIZE: [384, 384]
CLASSIFIER: EfficientNetB1
JOB_INDEX: None
Start training augmented images
Combining...
Combining 1th db out of 1 dbs
Stacking data
Combining complete
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb1 (Functional)  (None, 1280)              6575239   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,366,025
Trainable params: 789,250
Non-trainable params: 6,576,775
_________________________________________________________________
Fitting PAD_UFES_20_aug_EfficientNetB1_384h_384w_None model...
model_name: PAD_UFES_20_aug_EfficientNetB1_384h_384w_None
Epoch: 1 loss: 1.4366 accuracy: 0.4992 val_loss: 1.2214 val_accuracy: 0.0239
Epoch: 2 loss: 1.2950 accuracy: 0.5523 val_loss: 1.0868 val_accuracy: 0.9761
Epoch: 3 loss: 1.2198 accuracy: 0.5590 val_loss: 1.0115 val_accuracy: 0.9761
Epoch: 4 loss: 1.1697 accuracy: 0.5984 val_loss: 0.9646 val_accuracy: 0.9761
Epoch: 5 loss: 1.1175 accuracy: 0.6387 val_loss: 0.9303 val_accuracy: 0.9761
Epoch: 6 loss: 1.0839 accuracy: 0.6820 val_loss: 0.8547 val_accuracy: 0.9761
Epoch: 7 loss: 1.0446 accuracy: 0.7117 val_loss: 0.8641 val_accuracy: 0.9761
Epoch: 8 loss: 1.0151 accuracy: 0.7359 val_loss: 0.8372 val_accuracy: 0.9761
Epoch: 9 loss: 1.0048 accuracy: 0.7387 val_loss: 0.8115 val_accuracy: 0.9761
Epoch: 10 loss: 0.9846 accuracy: 0.7605 val_loss: 0.7625 val_accuracy: 0.9761
Epoch: 11 loss: 0.9576 accuracy: 0.7848 val_loss: 0.8256 val_accuracy: 0.9761
Epoch: 12 loss: 0.9371 accuracy: 0.7984 val_loss: 0.7411 val_accuracy: 0.9761
Epoch: 13 loss: 0.9379 accuracy: 0.7969 val_loss: 0.7136 val_accuracy: 0.9761
Epoch: 14 loss: 0.9247 accuracy: 0.8059 val_loss: 0.7136 val_accuracy: 0.9761
Epoch: 15 loss: 0.9164 accuracy: 0.8035 val_loss: 0.6666 val_accuracy: 0.9761
Epoch: 16 loss: 0.8924 accuracy: 0.8277 val_loss: 0.6462 val_accuracy: 0.9761
Epoch: 17 loss: 0.8904 accuracy: 0.8211 val_loss: 0.6537 val_accuracy: 0.9761
Epoch: 18 loss: 0.8747 accuracy: 0.8195 val_loss: 0.6732 val_accuracy: 0.9761
Epoch: 19 loss: 0.8630 accuracy: 0.8328 val_loss: 0.6814 val_accuracy: 0.9761
Epoch: 20 loss: 0.8474 accuracy: 0.8387 val_loss: 0.7211 val_accuracy: 0.9761
Epoch: 21 loss: 0.8633 accuracy: 0.8285 val_loss: 0.6368 val_accuracy: 0.9761
Epoch: 22 loss: 0.8417 accuracy: 0.8410 val_loss: 0.5893 val_accuracy: 0.9761
Epoch: 23 loss: 0.8666 accuracy: 0.8148 val_loss: 0.6138 val_accuracy: 0.9761
Epoch: 24 loss: 0.8447 accuracy: 0.8262 val_loss: 0.5535 val_accuracy: 0.9761
Epoch: 25 loss: 0.8559 accuracy: 0.8191 val_loss: 0.5807 val_accuracy: 0.9761
Epoch: 26 loss: 0.8540 accuracy: 0.8184 val_loss: 0.5483 val_accuracy: 0.9761
Epoch: 27 loss: 0.8484 accuracy: 0.8234 val_loss: 0.5333 val_accuracy: 0.9761
Epoch: 28 loss: 0.8279 accuracy: 0.8309 val_loss: 0.5239 val_accuracy: 0.9761
Epoch: 29 loss: 0.8269 accuracy: 0.8277 val_loss: 0.5502 val_accuracy: 0.9761
Epoch: 30 loss: 0.8326 accuracy: 0.8262 val_loss: 0.5767 val_accuracy: 0.9761
Epoch: 31 loss: 0.8543 accuracy: 0.8133 val_loss: 0.5123 val_accuracy: 0.9761
Epoch: 32 loss: 0.8266 accuracy: 0.8230 val_loss: 0.5258 val_accuracy: 0.9761
Epoch: 33 loss: 0.8065 accuracy: 0.8359 val_loss: 0.5214 val_accuracy: 0.9761
Epoch: 34 loss: 0.8201 accuracy: 0.8238 val_loss: 0.5109 val_accuracy: 0.9761
Epoch: 35 loss: 0.7929 accuracy: 0.8371 val_loss: 0.5146 val_accuracy: 0.9761
Epoch: 36 loss: 0.7964 accuracy: 0.8340 val_loss: 0.5064 val_accuracy: 0.9761
Epoch: 37 loss: 0.8071 accuracy: 0.8258 val_loss: 0.5386 val_accuracy: 0.9761
Epoch: 38 loss: 0.8150 accuracy: 0.8230 val_loss: 0.6021 val_accuracy: 0.9761
Epoch: 39 loss: 0.7996 accuracy: 0.8273 val_loss: 0.5557 val_accuracy: 0.9761
Epoch: 40 loss: 0.7969 accuracy: 0.8281 val_loss: 0.5152 val_accuracy: 0.9761
Epoch: 41 loss: 0.8239 accuracy: 0.8078 val_loss: 0.5198 val_accuracy: 0.9761

Epoch 00041: ReduceLROnPlateau reducing learning rate to 7.999999797903001e-05.
Epoch: 42 loss: 0.8004 accuracy: 0.8219 val_loss: 0.5927 val_accuracy: 0.9761
Epoch: 43 loss: 0.7883 accuracy: 0.8289 val_loss: 0.5995 val_accuracy: 0.9761
Epoch: 44 loss: 0.7709 accuracy: 0.8363 val_loss: 0.5465 val_accuracy: 0.9761
Epoch: 45 loss: 0.7847 accuracy: 0.8262 val_loss: 0.5440 val_accuracy: 0.9761
Epoch: 46 loss: 0.7756 accuracy: 0.8348 val_loss: 0.5445 val_accuracy: 0.9761

Epoch 00046: ReduceLROnPlateau reducing learning rate to 6.399999838322402e-05.
End of augmented training
Finish
Job ended!
