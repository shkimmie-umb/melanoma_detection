Thu 29 Feb 2024 01:31:01 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['KaggleMB']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet121
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet121 (Functional)     (None, 1024)              7037504   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,697,218
Trainable params: 658,178
Non-trainable params: 7,039,040
_________________________________________________________________
Fitting KaggleMB_aug_DenseNet121_150h_150w_None model...
model_name: KaggleMB_aug_DenseNet121_150h_150w_None
Epoch: 1 loss: 0.6218 accuracy: 0.7314 val_loss: 0.4251 val_accuracy: 0.8144
Epoch: 2 loss: 0.4552 accuracy: 0.8122 val_loss: 0.3643 val_accuracy: 0.8504
Epoch: 3 loss: 0.3774 accuracy: 0.8370 val_loss: 0.3387 val_accuracy: 0.8674
Epoch: 4 loss: 0.3425 accuracy: 0.8564 val_loss: 0.3240 val_accuracy: 0.8617
Epoch: 5 loss: 0.3140 accuracy: 0.8658 val_loss: 0.3274 val_accuracy: 0.8504
Epoch: 6 loss: 0.2912 accuracy: 0.8735 val_loss: 0.2993 val_accuracy: 0.8617
Epoch: 7 loss: 0.2741 accuracy: 0.8855 val_loss: 0.3171 val_accuracy: 0.8636
Epoch: 8 loss: 0.2527 accuracy: 0.8958 val_loss: 0.3011 val_accuracy: 0.8636
Epoch: 9 loss: 0.2298 accuracy: 0.9081 val_loss: 0.3076 val_accuracy: 0.8636
Epoch: 10 loss: 0.2298 accuracy: 0.9021 val_loss: 0.3137 val_accuracy: 0.8636
Epoch: 11 loss: 0.1970 accuracy: 0.9169 val_loss: 0.2942 val_accuracy: 0.8731
Epoch: 12 loss: 0.1847 accuracy: 0.9266 val_loss: 0.2992 val_accuracy: 0.8731
Epoch: 13 loss: 0.1814 accuracy: 0.9263 val_loss: 0.3093 val_accuracy: 0.8636
Epoch: 14 loss: 0.1723 accuracy: 0.9255 val_loss: 0.2864 val_accuracy: 0.8731
Epoch: 15 loss: 0.1426 accuracy: 0.9432 val_loss: 0.3305 val_accuracy: 0.8693
Epoch: 16 loss: 0.1467 accuracy: 0.9412 val_loss: 0.3096 val_accuracy: 0.8769
Epoch: 17 loss: 0.1401 accuracy: 0.9440 val_loss: 0.2944 val_accuracy: 0.8750
Epoch: 18 loss: 0.1267 accuracy: 0.9509 val_loss: 0.2934 val_accuracy: 0.8826
Epoch: 19 loss: 0.1161 accuracy: 0.9555 val_loss: 0.3234 val_accuracy: 0.8731
Epoch: 20 loss: 0.1111 accuracy: 0.9578 val_loss: 0.3264 val_accuracy: 0.8826
Job ended!
