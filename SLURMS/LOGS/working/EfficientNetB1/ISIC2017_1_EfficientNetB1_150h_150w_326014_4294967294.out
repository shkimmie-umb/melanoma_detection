Fri 01 Mar 2024 04:06:13 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2017']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB1
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb1 (Functional)  (None, 1280)              6575239   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,366,025
Trainable params: 789,250
Non-trainable params: 6,576,775
_________________________________________________________________
Fitting ISIC2017_aug_EfficientNetB1_150h_150w_None model...
model_name: ISIC2017_aug_EfficientNetB1_150h_150w_None
Epoch: 1 loss: 0.7772 accuracy: 0.6573 val_loss: 0.4920 val_accuracy: 0.8067
Epoch: 2 loss: 0.6742 accuracy: 0.6890 val_loss: 0.4373 val_accuracy: 0.8067
Epoch: 3 loss: 0.5967 accuracy: 0.7311 val_loss: 0.4337 val_accuracy: 0.8200
Epoch: 4 loss: 0.5504 accuracy: 0.7408 val_loss: 0.4350 val_accuracy: 0.8333
Epoch: 5 loss: 0.5437 accuracy: 0.7535 val_loss: 0.4514 val_accuracy: 0.8333
Epoch: 6 loss: 0.5109 accuracy: 0.7669 val_loss: 0.4542 val_accuracy: 0.7933
Epoch: 7 loss: 0.4920 accuracy: 0.7719 val_loss: 0.4486 val_accuracy: 0.8200
Epoch: 8 loss: 0.4875 accuracy: 0.7735 val_loss: 0.4803 val_accuracy: 0.8200
Epoch: 9 loss: 0.4608 accuracy: 0.7879 val_loss: 0.4473 val_accuracy: 0.8333
Epoch: 10 loss: 0.4436 accuracy: 0.7949 val_loss: 0.4040 val_accuracy: 0.8533
Epoch: 11 loss: 0.4476 accuracy: 0.8003 val_loss: 0.4402 val_accuracy: 0.8267
Epoch: 12 loss: 0.4177 accuracy: 0.8096 val_loss: 0.4641 val_accuracy: 0.8333
Epoch: 13 loss: 0.4119 accuracy: 0.8136 val_loss: 0.4536 val_accuracy: 0.8267
Epoch: 14 loss: 0.4261 accuracy: 0.8113 val_loss: 0.4427 val_accuracy: 0.8200
Epoch: 15 loss: 0.4006 accuracy: 0.8113 val_loss: 0.4454 val_accuracy: 0.8133
Epoch: 16 loss: 0.3944 accuracy: 0.8210 val_loss: 0.4354 val_accuracy: 0.8333
Epoch: 17 loss: 0.4045 accuracy: 0.8076 val_loss: 0.4630 val_accuracy: 0.8267
Epoch: 18 loss: 0.3836 accuracy: 0.8223 val_loss: 0.4678 val_accuracy: 0.8333
Epoch: 19 loss: 0.3770 accuracy: 0.8263 val_loss: 0.4593 val_accuracy: 0.8533
Epoch: 20 loss: 0.3577 accuracy: 0.8363 val_loss: 0.4613 val_accuracy: 0.8467
Job ended!
