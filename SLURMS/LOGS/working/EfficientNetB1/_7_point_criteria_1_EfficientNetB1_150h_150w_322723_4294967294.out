Tue 27 Feb 2024 05:39:47 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['_7_point_criteria']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB1
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb1 (Functional)  (None, 1280)              6575239   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,366,025
Trainable params: 789,250
Non-trainable params: 6,576,775
_________________________________________________________________
Fitting _7_point_criteria_aug_EfficientNetB1_150h_150w_None model...
model_name: _7_point_criteria_aug_EfficientNetB1_150h_150w_None
Epoch: 1 loss: 0.6950 accuracy: 0.5225 val_loss: 0.6843 val_accuracy: 0.6995
Epoch: 2 loss: 0.6909 accuracy: 0.5291 val_loss: 0.6758 val_accuracy: 0.6995
Epoch: 3 loss: 0.6710 accuracy: 0.5607 val_loss: 0.6688 val_accuracy: 0.6995
Epoch: 4 loss: 0.6805 accuracy: 0.5441 val_loss: 0.6617 val_accuracy: 0.6995
Epoch: 5 loss: 0.6735 accuracy: 0.5691 val_loss: 0.6564 val_accuracy: 0.6995
Epoch: 6 loss: 0.6838 accuracy: 0.5740 val_loss: 0.6513 val_accuracy: 0.6995
Epoch: 7 loss: 0.6623 accuracy: 0.5874 val_loss: 0.6474 val_accuracy: 0.6995
Epoch: 8 loss: 0.6590 accuracy: 0.6173 val_loss: 0.6445 val_accuracy: 0.6995
Epoch: 9 loss: 0.6651 accuracy: 0.6090 val_loss: 0.6416 val_accuracy: 0.6995
Epoch: 10 loss: 0.6515 accuracy: 0.6240 val_loss: 0.6381 val_accuracy: 0.6995
Epoch: 11 loss: 0.6622 accuracy: 0.6007 val_loss: 0.6371 val_accuracy: 0.6995
Epoch: 12 loss: 0.6552 accuracy: 0.6173 val_loss: 0.6351 val_accuracy: 0.6995
Epoch: 13 loss: 0.6514 accuracy: 0.6140 val_loss: 0.6345 val_accuracy: 0.6995
Epoch: 14 loss: 0.6541 accuracy: 0.6106 val_loss: 0.6335 val_accuracy: 0.6995
Epoch: 15 loss: 0.6328 accuracy: 0.6539 val_loss: 0.6306 val_accuracy: 0.6995
Epoch: 16 loss: 0.6525 accuracy: 0.6373 val_loss: 0.6289 val_accuracy: 0.6995
Epoch: 17 loss: 0.6439 accuracy: 0.6273 val_loss: 0.6307 val_accuracy: 0.6995
Epoch: 18 loss: 0.6464 accuracy: 0.6373 val_loss: 0.6326 val_accuracy: 0.6995
Epoch: 19 loss: 0.6300 accuracy: 0.6705 val_loss: 0.6294 val_accuracy: 0.6995
Epoch: 20 loss: 0.6374 accuracy: 0.6323 val_loss: 0.6289 val_accuracy: 0.6995
Job ended!
