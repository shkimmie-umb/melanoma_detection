Thu 29 Feb 2024 10:03:32 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['HAM10000']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet121
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet121 (Functional)     (None, 1024)              7037504   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,697,218
Trainable params: 658,178
Non-trainable params: 7,039,040
_________________________________________________________________
Fitting HAM10000_aug_DenseNet121_150h_150w_None model...
model_name: HAM10000_aug_DenseNet121_150h_150w_None
Epoch: 1 loss: 0.6963 accuracy: 0.6902 val_loss: 0.2719 val_accuracy: 0.9094
Epoch: 2 loss: 0.5273 accuracy: 0.7609 val_loss: 0.2006 val_accuracy: 0.9434
Epoch: 3 loss: 0.4668 accuracy: 0.7920 val_loss: 0.1675 val_accuracy: 0.9558
Epoch: 4 loss: 0.4386 accuracy: 0.8088 val_loss: 0.1415 val_accuracy: 0.9581
Epoch: 5 loss: 0.4080 accuracy: 0.8176 val_loss: 0.1606 val_accuracy: 0.9445
Epoch: 6 loss: 0.3976 accuracy: 0.8226 val_loss: 0.1430 val_accuracy: 0.9536
Epoch: 7 loss: 0.3709 accuracy: 0.8331 val_loss: 0.1290 val_accuracy: 0.9638
Epoch: 8 loss: 0.3581 accuracy: 0.8431 val_loss: 0.1584 val_accuracy: 0.9513
Epoch: 9 loss: 0.3418 accuracy: 0.8500 val_loss: 0.1333 val_accuracy: 0.9524
Epoch: 10 loss: 0.3331 accuracy: 0.8534 val_loss: 0.1333 val_accuracy: 0.9558
Epoch: 11 loss: 0.3169 accuracy: 0.8603 val_loss: 0.1420 val_accuracy: 0.9502
Epoch: 12 loss: 0.3111 accuracy: 0.8631 val_loss: 0.1563 val_accuracy: 0.9411
Epoch: 13 loss: 0.2985 accuracy: 0.8694 val_loss: 0.1292 val_accuracy: 0.9558
Epoch: 14 loss: 0.2886 accuracy: 0.8724 val_loss: 0.1383 val_accuracy: 0.9513
Epoch: 15 loss: 0.2742 accuracy: 0.8822 val_loss: 0.1414 val_accuracy: 0.9513
Epoch: 16 loss: 0.2585 accuracy: 0.8894 val_loss: 0.1214 val_accuracy: 0.9558
Epoch: 17 loss: 0.2488 accuracy: 0.8970 val_loss: 0.1478 val_accuracy: 0.9422
Epoch: 18 loss: 0.2384 accuracy: 0.8992 val_loss: 0.1316 val_accuracy: 0.9502
Epoch: 19 loss: 0.2316 accuracy: 0.9038 val_loss: 0.1454 val_accuracy: 0.9445
Epoch: 20 loss: 0.2230 accuracy: 0.9051 val_loss: 0.1344 val_accuracy: 0.9479
Job ended!
