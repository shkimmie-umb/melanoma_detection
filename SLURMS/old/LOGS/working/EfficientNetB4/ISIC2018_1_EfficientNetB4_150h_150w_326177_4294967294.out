Fri 01 Mar 2024 08:41:29 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2018']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB4
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb4 (Functional)  (None, 1792)              17673823  
_________________________________________________________________
dense (Dense)                (None, 512)               918016    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 18,726,753
Trainable params: 1,051,394
Non-trainable params: 17,675,359
_________________________________________________________________
Fitting ISIC2018_aug_EfficientNetB4_150h_150w_None model...
model_name: ISIC2018_aug_EfficientNetB4_150h_150w_None
Epoch: 1 loss: 0.6371 accuracy: 0.7146 val_loss: 0.3124 val_accuracy: 0.8860
Epoch: 2 loss: 0.4775 accuracy: 0.7914 val_loss: 0.2574 val_accuracy: 0.8860
Epoch: 3 loss: 0.4302 accuracy: 0.8126 val_loss: 0.2394 val_accuracy: 0.9119
Epoch: 4 loss: 0.4108 accuracy: 0.8173 val_loss: 0.2437 val_accuracy: 0.8705
Epoch: 5 loss: 0.3973 accuracy: 0.8251 val_loss: 0.2444 val_accuracy: 0.8964
Epoch: 6 loss: 0.3825 accuracy: 0.8321 val_loss: 0.2660 val_accuracy: 0.8705
Epoch: 7 loss: 0.3768 accuracy: 0.8362 val_loss: 0.2354 val_accuracy: 0.8756
Epoch: 8 loss: 0.3622 accuracy: 0.8423 val_loss: 0.2502 val_accuracy: 0.8705
Epoch: 9 loss: 0.3530 accuracy: 0.8470 val_loss: 0.2516 val_accuracy: 0.8756
Epoch: 10 loss: 0.3448 accuracy: 0.8511 val_loss: 0.2617 val_accuracy: 0.8705
Epoch: 11 loss: 0.3414 accuracy: 0.8494 val_loss: 0.2588 val_accuracy: 0.8860
Epoch: 12 loss: 0.3337 accuracy: 0.8548 val_loss: 0.2286 val_accuracy: 0.8756
Epoch: 13 loss: 0.3237 accuracy: 0.8586 val_loss: 0.2666 val_accuracy: 0.8705
Epoch: 14 loss: 0.3199 accuracy: 0.8601 val_loss: 0.2426 val_accuracy: 0.8964
Epoch: 15 loss: 0.3150 accuracy: 0.8623 val_loss: 0.2347 val_accuracy: 0.9016
Epoch: 16 loss: 0.3117 accuracy: 0.8653 val_loss: 0.2605 val_accuracy: 0.8808
Epoch: 17 loss: 0.3077 accuracy: 0.8703 val_loss: 0.2440 val_accuracy: 0.8808
Epoch: 18 loss: 0.3075 accuracy: 0.8660 val_loss: 0.2451 val_accuracy: 0.8860
Epoch: 19 loss: 0.3039 accuracy: 0.8677 val_loss: 0.2557 val_accuracy: 0.8912
Epoch: 20 loss: 0.2951 accuracy: 0.8749 val_loss: 0.2495 val_accuracy: 0.9016
Job ended!
