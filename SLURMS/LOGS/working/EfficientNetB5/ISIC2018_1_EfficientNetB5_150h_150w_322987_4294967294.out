Tue 27 Feb 2024 02:34:53 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2018']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB5
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb5 (Functional)  (None, 2048)              28513527  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 29,697,529
Trainable params: 1,182,466
Non-trainable params: 28,515,063
_________________________________________________________________
Fitting ISIC2018_aug_EfficientNetB5_150h_150w_None model...
model_name: ISIC2018_aug_EfficientNetB5_150h_150w_None
Epoch: 1 loss: 0.6195 accuracy: 0.6904 val_loss: 0.4505 val_accuracy: 0.8912
Epoch: 2 loss: 0.5693 accuracy: 0.7271 val_loss: 0.4232 val_accuracy: 0.8912
Epoch: 3 loss: 0.5612 accuracy: 0.7271 val_loss: 0.3577 val_accuracy: 0.8912
Epoch: 4 loss: 0.5613 accuracy: 0.7277 val_loss: 0.3653 val_accuracy: 0.8912
Epoch: 5 loss: 0.5558 accuracy: 0.7284 val_loss: 0.3872 val_accuracy: 0.8912
Epoch: 6 loss: 0.5505 accuracy: 0.7284 val_loss: 0.3298 val_accuracy: 0.8912
Epoch: 7 loss: 0.5532 accuracy: 0.7287 val_loss: 0.3294 val_accuracy: 0.8912
Epoch: 8 loss: 0.5540 accuracy: 0.7259 val_loss: 0.3784 val_accuracy: 0.8912
Epoch: 9 loss: 0.5585 accuracy: 0.7267 val_loss: 0.3972 val_accuracy: 0.8912
Epoch: 10 loss: 0.5512 accuracy: 0.7293 val_loss: 0.5121 val_accuracy: 0.8031
Epoch: 11 loss: 0.5484 accuracy: 0.7275 val_loss: 0.3842 val_accuracy: 0.8912
Epoch: 12 loss: 0.5464 accuracy: 0.7294 val_loss: 0.3389 val_accuracy: 0.8912
Epoch: 13 loss: 0.5480 accuracy: 0.7301 val_loss: 0.4204 val_accuracy: 0.8808
Epoch: 14 loss: 0.5481 accuracy: 0.7310 val_loss: 0.4103 val_accuracy: 0.8912
Epoch: 15 loss: 0.5476 accuracy: 0.7307 val_loss: 0.3616 val_accuracy: 0.8912
Epoch: 16 loss: 0.5429 accuracy: 0.7338 val_loss: 0.3523 val_accuracy: 0.8912
Epoch: 17 loss: 0.5471 accuracy: 0.7309 val_loss: 0.3115 val_accuracy: 0.8912
Epoch: 18 loss: 0.5439 accuracy: 0.7312 val_loss: 0.4196 val_accuracy: 0.8912
Epoch: 19 loss: 0.5394 accuracy: 0.7308 val_loss: 0.3869 val_accuracy: 0.8912
Epoch: 20 loss: 0.5386 accuracy: 0.7345 val_loss: 0.3622 val_accuracy: 0.8912
Job ended!
