Fri 01 Mar 2024 08:29:55 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'MEDNODE']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB4
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb4 (Functional)  (None, 1792)              17673823  
_________________________________________________________________
dense (Dense)                (None, 512)               918016    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 18,726,753
Trainable params: 1,051,394
Non-trainable params: 17,675,359
_________________________________________________________________
Fitting ISIC2016+MEDNODE_aug_EfficientNetB4_150h_150w_None model...
model_name: ISIC2016+MEDNODE_aug_EfficientNetB4_150h_150w_None
Epoch: 1 loss: 0.9336 accuracy: 0.6071 val_loss: 0.5659 val_accuracy: 0.7523
Epoch: 2 loss: 0.7020 accuracy: 0.6863 val_loss: 0.5841 val_accuracy: 0.7009
Epoch: 3 loss: 0.5887 accuracy: 0.7284 val_loss: 0.5692 val_accuracy: 0.7290
Epoch: 4 loss: 0.5780 accuracy: 0.7429 val_loss: 0.5375 val_accuracy: 0.7196
Epoch: 5 loss: 0.5430 accuracy: 0.7524 val_loss: 0.5253 val_accuracy: 0.7430
Epoch: 6 loss: 0.5072 accuracy: 0.7734 val_loss: 0.5743 val_accuracy: 0.6869
Epoch: 7 loss: 0.4602 accuracy: 0.7945 val_loss: 0.5167 val_accuracy: 0.7383
Epoch: 8 loss: 0.4437 accuracy: 0.8046 val_loss: 0.5147 val_accuracy: 0.7617
Epoch: 9 loss: 0.4540 accuracy: 0.8003 val_loss: 0.4984 val_accuracy: 0.7757
Epoch: 10 loss: 0.4313 accuracy: 0.8112 val_loss: 0.5024 val_accuracy: 0.7710
Epoch: 11 loss: 0.3839 accuracy: 0.8119 val_loss: 0.5065 val_accuracy: 0.7757
Epoch: 12 loss: 0.3786 accuracy: 0.8337 val_loss: 0.5333 val_accuracy: 0.7570
Epoch: 13 loss: 0.3661 accuracy: 0.8351 val_loss: 0.5184 val_accuracy: 0.7757
Epoch: 14 loss: 0.3564 accuracy: 0.8453 val_loss: 0.5202 val_accuracy: 0.7664
Epoch: 15 loss: 0.3424 accuracy: 0.8511 val_loss: 0.5292 val_accuracy: 0.7710
Epoch: 16 loss: 0.3706 accuracy: 0.8381 val_loss: 0.5417 val_accuracy: 0.7523
Epoch: 17 loss: 0.3123 accuracy: 0.8642 val_loss: 0.5489 val_accuracy: 0.7804
Epoch: 18 loss: 0.2912 accuracy: 0.8751 val_loss: 0.5486 val_accuracy: 0.7664
Epoch: 19 loss: 0.3018 accuracy: 0.8780 val_loss: 0.5597 val_accuracy: 0.7664
Epoch: 20 loss: 0.3088 accuracy: 0.8569 val_loss: 0.5250 val_accuracy: 0.7944
Job ended!
