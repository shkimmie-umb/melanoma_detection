Thu 02 May 2024 09:42:28 PM EDT
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'PAD_UFES_20']
IMG_SIZE: [384, 384]
CLASSIFIER: EfficientNetB0
JOB_INDEX: None
Start training augmented images
Combining...
Combining 1th db out of 2 dbs
Combining 2th db out of 2 dbs
Stacking data
Combining complete
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb0 (Functional)  (None, 1280)              4049571   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 4,840,357
Trainable params: 789,250
Non-trainable params: 4,051,107
_________________________________________________________________
Fitting ISIC2016+PAD_UFES_20_aug_EfficientNetB0_384h_384w_None model...
model_name: ISIC2016+PAD_UFES_20_aug_EfficientNetB0_384h_384w_None
Epoch: 1 loss: 1.4147 accuracy: 0.5064 val_loss: 1.1361 val_accuracy: 0.9328
Epoch: 2 loss: 1.2734 accuracy: 0.5283 val_loss: 1.0338 val_accuracy: 0.9328
Epoch: 3 loss: 1.1833 accuracy: 0.5644 val_loss: 0.9749 val_accuracy: 0.9328
Epoch: 4 loss: 1.1113 accuracy: 0.5964 val_loss: 0.9003 val_accuracy: 0.9328
Epoch: 5 loss: 1.0658 accuracy: 0.6314 val_loss: 0.8465 val_accuracy: 0.9328
Epoch: 6 loss: 1.0441 accuracy: 0.6494 val_loss: 0.7753 val_accuracy: 0.9328
Epoch: 7 loss: 1.0037 accuracy: 0.6655 val_loss: 0.7480 val_accuracy: 0.9328
Epoch: 8 loss: 0.9938 accuracy: 0.6671 val_loss: 0.7450 val_accuracy: 0.9328
Epoch: 9 loss: 0.9826 accuracy: 0.6825 val_loss: 0.8013 val_accuracy: 0.9328
Epoch: 10 loss: 0.9678 accuracy: 0.6947 val_loss: 0.7323 val_accuracy: 0.9328
Epoch: 11 loss: 0.9701 accuracy: 0.6954 val_loss: 0.7479 val_accuracy: 0.9328
Epoch: 12 loss: 0.9356 accuracy: 0.7103 val_loss: 0.8132 val_accuracy: 0.9328
Epoch: 13 loss: 0.9286 accuracy: 0.7193 val_loss: 0.6852 val_accuracy: 0.9328
Epoch: 14 loss: 0.9190 accuracy: 0.7166 val_loss: 0.6767 val_accuracy: 0.9328
Epoch: 15 loss: 0.9215 accuracy: 0.7185 val_loss: 0.7619 val_accuracy: 0.9328
Epoch: 16 loss: 0.9257 accuracy: 0.7145 val_loss: 0.6795 val_accuracy: 0.9328
Epoch: 17 loss: 0.9207 accuracy: 0.7174 val_loss: 0.6801 val_accuracy: 0.9328
Epoch: 18 loss: 0.9001 accuracy: 0.7299 val_loss: 0.6028 val_accuracy: 0.9328
Epoch: 19 loss: 0.8880 accuracy: 0.7320 val_loss: 0.5841 val_accuracy: 0.9328
Epoch: 20 loss: 0.8815 accuracy: 0.7444 val_loss: 0.6212 val_accuracy: 0.9328
Epoch: 21 loss: 0.8798 accuracy: 0.7402 val_loss: 0.6856 val_accuracy: 0.9328
Epoch: 22 loss: 0.8785 accuracy: 0.7352 val_loss: 0.7232 val_accuracy: 0.9328
Epoch: 23 loss: 0.8858 accuracy: 0.7336 val_loss: 0.6341 val_accuracy: 0.9328
Epoch: 24 loss: 0.8588 accuracy: 0.7503 val_loss: 0.6618 val_accuracy: 0.9328

Epoch 00024: ReduceLROnPlateau reducing learning rate to 7.999999797903001e-05.
Epoch: 25 loss: 0.8602 accuracy: 0.7436 val_loss: 0.6053 val_accuracy: 0.9328
Epoch: 26 loss: 0.8571 accuracy: 0.7516 val_loss: 0.5821 val_accuracy: 0.9328
Epoch: 27 loss: 0.8550 accuracy: 0.7466 val_loss: 0.6571 val_accuracy: 0.9328
Epoch: 28 loss: 0.8527 accuracy: 0.7460 val_loss: 0.7160 val_accuracy: 0.9328
Epoch: 29 loss: 0.8474 accuracy: 0.7476 val_loss: 0.6847 val_accuracy: 0.9328
Epoch: 30 loss: 0.8361 accuracy: 0.7537 val_loss: 0.8716 val_accuracy: 0.9328
Epoch: 31 loss: 0.8423 accuracy: 0.7474 val_loss: 0.7027 val_accuracy: 0.9328

Epoch 00031: ReduceLROnPlateau reducing learning rate to 6.399999838322402e-05.
Epoch: 32 loss: 0.8302 accuracy: 0.7577 val_loss: 0.6616 val_accuracy: 0.9328
Epoch: 33 loss: 0.8206 accuracy: 0.7611 val_loss: 0.6027 val_accuracy: 0.9328
Epoch: 34 loss: 0.8251 accuracy: 0.7532 val_loss: 0.5946 val_accuracy: 0.9328
Epoch: 35 loss: 0.8333 accuracy: 0.7474 val_loss: 0.7201 val_accuracy: 0.9328
Epoch: 36 loss: 0.8157 accuracy: 0.7566 val_loss: 0.5791 val_accuracy: 0.9328
Epoch: 37 loss: 0.8235 accuracy: 0.7548 val_loss: 0.5700 val_accuracy: 0.9328
Epoch: 38 loss: 0.8421 accuracy: 0.7362 val_loss: 0.5995 val_accuracy: 0.9328
Epoch: 39 loss: 0.8000 accuracy: 0.7672 val_loss: 0.5868 val_accuracy: 0.9328
Epoch: 40 loss: 0.8060 accuracy: 0.7614 val_loss: 0.5830 val_accuracy: 0.9328
Epoch: 41 loss: 0.8114 accuracy: 0.7508 val_loss: 0.6458 val_accuracy: 0.9328
Epoch: 42 loss: 0.8071 accuracy: 0.7585 val_loss: 0.6355 val_accuracy: 0.9328

Epoch 00042: ReduceLROnPlateau reducing learning rate to 5.119999987073243e-05.
Epoch: 43 loss: 0.8121 accuracy: 0.7534 val_loss: 0.6498 val_accuracy: 0.9328
Epoch: 44 loss: 0.7970 accuracy: 0.7545 val_loss: 0.6354 val_accuracy: 0.9328
Epoch: 45 loss: 0.8104 accuracy: 0.7476 val_loss: 0.6629 val_accuracy: 0.9328
Epoch: 46 loss: 0.7889 accuracy: 0.7609 val_loss: 0.5855 val_accuracy: 0.9328
Epoch: 47 loss: 0.7914 accuracy: 0.7627 val_loss: 0.6399 val_accuracy: 0.9328

Epoch 00047: ReduceLROnPlateau reducing learning rate to 4.0960000478662555e-05.
End of augmented training
Finish
Job ended!
