Fri 01 Mar 2024 07:04:17 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', '_7_point_criteria']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB4
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb4 (Functional)  (None, 1792)              17673823  
_________________________________________________________________
dense (Dense)                (None, 512)               918016    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 18,726,753
Trainable params: 1,051,394
Non-trainable params: 17,675,359
_________________________________________________________________
Fitting ISIC2016+_7_point_criteria_aug_EfficientNetB4_150h_150w_None model...
model_name: ISIC2016+_7_point_criteria_aug_EfficientNetB4_150h_150w_None
Epoch: 1 loss: 0.8303 accuracy: 0.6321 val_loss: 0.5688 val_accuracy: 0.7546
Epoch: 2 loss: 0.6924 accuracy: 0.6909 val_loss: 0.5360 val_accuracy: 0.7781
Epoch: 3 loss: 0.6092 accuracy: 0.7245 val_loss: 0.5058 val_accuracy: 0.7702
Epoch: 4 loss: 0.5832 accuracy: 0.7324 val_loss: 0.4997 val_accuracy: 0.7885
Epoch: 5 loss: 0.5667 accuracy: 0.7486 val_loss: 0.4919 val_accuracy: 0.7833
Epoch: 6 loss: 0.5028 accuracy: 0.7766 val_loss: 0.4785 val_accuracy: 0.7859
Epoch: 7 loss: 0.4862 accuracy: 0.7805 val_loss: 0.4714 val_accuracy: 0.7676
Epoch: 8 loss: 0.4386 accuracy: 0.8057 val_loss: 0.4861 val_accuracy: 0.7859
Epoch: 9 loss: 0.4385 accuracy: 0.8029 val_loss: 0.4906 val_accuracy: 0.7755
Epoch: 10 loss: 0.4064 accuracy: 0.8124 val_loss: 0.5088 val_accuracy: 0.7702
Epoch: 11 loss: 0.3935 accuracy: 0.8253 val_loss: 0.5065 val_accuracy: 0.7781
Epoch: 12 loss: 0.3755 accuracy: 0.8371 val_loss: 0.5111 val_accuracy: 0.7755
Epoch: 13 loss: 0.3808 accuracy: 0.8337 val_loss: 0.5248 val_accuracy: 0.7885
Epoch: 14 loss: 0.3674 accuracy: 0.8292 val_loss: 0.5351 val_accuracy: 0.7702
Epoch: 15 loss: 0.3641 accuracy: 0.8371 val_loss: 0.5359 val_accuracy: 0.7624
Epoch: 16 loss: 0.3552 accuracy: 0.8410 val_loss: 0.5419 val_accuracy: 0.7781
Epoch: 17 loss: 0.3145 accuracy: 0.8589 val_loss: 0.5183 val_accuracy: 0.7728
Epoch: 18 loss: 0.3115 accuracy: 0.8684 val_loss: 0.5503 val_accuracy: 0.7676
Epoch: 19 loss: 0.3014 accuracy: 0.8606 val_loss: 0.5553 val_accuracy: 0.7728
Epoch: 20 loss: 0.3119 accuracy: 0.8651 val_loss: 0.5896 val_accuracy: 0.7728
Job ended!
