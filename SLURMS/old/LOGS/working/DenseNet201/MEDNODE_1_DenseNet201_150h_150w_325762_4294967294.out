Thu 29 Feb 2024 05:34:12 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['MEDNODE']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet201
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet201 (Functional)     (None, 1920)              18321984  
_________________________________________________________________
dense (Dense)                (None, 512)               983552    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 19,440,450
Trainable params: 1,116,930
Non-trainable params: 18,323,520
_________________________________________________________________
Fitting MEDNODE_aug_DenseNet201_150h_150w_None model...
model_name: MEDNODE_aug_DenseNet201_150h_150w_None
Epoch: 1 loss: 0.9195 accuracy: 0.5536 val_loss: 0.6718 val_accuracy: 0.5882
Epoch: 2 loss: 0.7010 accuracy: 0.6875 val_loss: 0.5963 val_accuracy: 0.6176
Epoch: 3 loss: 0.4883 accuracy: 0.7991 val_loss: 0.5315 val_accuracy: 0.6471
Epoch: 4 loss: 0.4227 accuracy: 0.8080 val_loss: 0.5052 val_accuracy: 0.6471
Epoch: 5 loss: 0.3261 accuracy: 0.8348 val_loss: 0.4844 val_accuracy: 0.6471
Epoch: 6 loss: 0.3223 accuracy: 0.8795 val_loss: 0.4618 val_accuracy: 0.6765
Epoch: 7 loss: 0.2407 accuracy: 0.8929 val_loss: 0.4594 val_accuracy: 0.7059
Epoch: 8 loss: 0.2588 accuracy: 0.8929 val_loss: 0.4552 val_accuracy: 0.7353
Epoch: 9 loss: 0.2278 accuracy: 0.9152 val_loss: 0.4547 val_accuracy: 0.7647
Epoch: 10 loss: 0.2418 accuracy: 0.9018 val_loss: 0.4617 val_accuracy: 0.7353
Epoch: 11 loss: 0.2304 accuracy: 0.9330 val_loss: 0.4498 val_accuracy: 0.7647
Epoch: 12 loss: 0.1493 accuracy: 0.9598 val_loss: 0.4393 val_accuracy: 0.7647
Epoch: 13 loss: 0.1481 accuracy: 0.9598 val_loss: 0.4344 val_accuracy: 0.7941
Epoch: 14 loss: 0.1829 accuracy: 0.9509 val_loss: 0.4409 val_accuracy: 0.7941
Epoch: 15 loss: 0.1586 accuracy: 0.9286 val_loss: 0.4410 val_accuracy: 0.7941
Epoch: 16 loss: 0.1380 accuracy: 0.9464 val_loss: 0.4383 val_accuracy: 0.7941
Epoch: 17 loss: 0.0958 accuracy: 0.9777 val_loss: 0.4489 val_accuracy: 0.7941
Epoch: 18 loss: 0.0760 accuracy: 0.9866 val_loss: 0.4648 val_accuracy: 0.7647
Epoch: 19 loss: 0.0915 accuracy: 0.9821 val_loss: 0.4738 val_accuracy: 0.7647
Epoch: 20 loss: 0.0989 accuracy: 0.9732 val_loss: 0.4745 val_accuracy: 0.7647
Job ended!
