Thu 29 Feb 2024 02:15:26 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['HAM10000']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet201
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet201 (Functional)     (None, 1920)              18321984  
_________________________________________________________________
dense (Dense)                (None, 512)               983552    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 19,440,450
Trainable params: 1,116,930
Non-trainable params: 18,323,520
_________________________________________________________________
Fitting HAM10000_aug_DenseNet201_150h_150w_None model...
model_name: HAM10000_aug_DenseNet201_150h_150w_None
Epoch: 1 loss: 0.6592 accuracy: 0.6961 val_loss: 0.2291 val_accuracy: 0.9241
Epoch: 2 loss: 0.4778 accuracy: 0.7899 val_loss: 0.1671 val_accuracy: 0.9445
Epoch: 3 loss: 0.4158 accuracy: 0.8167 val_loss: 0.1621 val_accuracy: 0.9479
Epoch: 4 loss: 0.3834 accuracy: 0.8280 val_loss: 0.1478 val_accuracy: 0.9524
Epoch: 5 loss: 0.3656 accuracy: 0.8410 val_loss: 0.1509 val_accuracy: 0.9434
Epoch: 6 loss: 0.3386 accuracy: 0.8522 val_loss: 0.1502 val_accuracy: 0.9524
Epoch: 7 loss: 0.3179 accuracy: 0.8652 val_loss: 0.1243 val_accuracy: 0.9558
Epoch: 8 loss: 0.3010 accuracy: 0.8689 val_loss: 0.1319 val_accuracy: 0.9558
Epoch: 9 loss: 0.2892 accuracy: 0.8779 val_loss: 0.1357 val_accuracy: 0.9502
Epoch: 10 loss: 0.2773 accuracy: 0.8811 val_loss: 0.1400 val_accuracy: 0.9445
Epoch: 11 loss: 0.2626 accuracy: 0.8899 val_loss: 0.1258 val_accuracy: 0.9547
Epoch: 12 loss: 0.2442 accuracy: 0.8958 val_loss: 0.1165 val_accuracy: 0.9592
Epoch: 13 loss: 0.2364 accuracy: 0.8999 val_loss: 0.1534 val_accuracy: 0.9411
Epoch: 14 loss: 0.2216 accuracy: 0.9076 val_loss: 0.1241 val_accuracy: 0.9513
Epoch: 15 loss: 0.2052 accuracy: 0.9139 val_loss: 0.1387 val_accuracy: 0.9513
Epoch: 16 loss: 0.1895 accuracy: 0.9221 val_loss: 0.1589 val_accuracy: 0.9377
Epoch: 17 loss: 0.1908 accuracy: 0.9201 val_loss: 0.1343 val_accuracy: 0.9604
Epoch: 18 loss: 0.1688 accuracy: 0.9303 val_loss: 0.1470 val_accuracy: 0.9411
Epoch: 19 loss: 0.1639 accuracy: 0.9337 val_loss: 0.1421 val_accuracy: 0.9456
Epoch: 20 loss: 0.1570 accuracy: 0.9376 val_loss: 0.1428 val_accuracy: 0.9513
Job ended!
