Thu 02 May 2024 03:14:55 PM EDT
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', '_7_point_criteria', 'PAD_UFES_20', 'MEDNODE']
IMG_SIZE: [384, 384]
CLASSIFIER: EfficientNetB0
JOB_INDEX: None
Start training augmented images
Combining...
Combining 1th db out of 4 dbs
Combining 2th db out of 4 dbs
Combining 3th db out of 4 dbs
Combining 4th db out of 4 dbs
Stacking data
Combining complete
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb0 (Functional)  (None, 1280)              4049571   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 4,840,357
Trainable params: 789,250
Non-trainable params: 4,051,107
_________________________________________________________________
Fitting ISIC2016+_7_point_criteria+PAD_UFES_20+MEDNODE_aug_EfficientNetB0_384h_384w_None model...
model_name: ISIC2016+_7_point_criteria+PAD_UFES_20+MEDNODE_aug_EfficientNetB0_384h_384w_None
Epoch: 1 loss: 1.4152 accuracy: 0.5095 val_loss: 1.0477 val_accuracy: 0.8609
Epoch: 2 loss: 1.2480 accuracy: 0.5365 val_loss: 0.9103 val_accuracy: 0.8609
Epoch: 3 loss: 1.1721 accuracy: 0.5749 val_loss: 0.8379 val_accuracy: 0.8609
Epoch: 4 loss: 1.1083 accuracy: 0.5942 val_loss: 0.8147 val_accuracy: 0.8609
Epoch: 5 loss: 1.0789 accuracy: 0.6098 val_loss: 0.7847 val_accuracy: 0.8609
Epoch: 6 loss: 1.0605 accuracy: 0.6317 val_loss: 0.7798 val_accuracy: 0.8609
Epoch: 7 loss: 1.0134 accuracy: 0.6547 val_loss: 0.7642 val_accuracy: 0.8609
Epoch: 8 loss: 0.9940 accuracy: 0.6695 val_loss: 0.7410 val_accuracy: 0.8609
Epoch: 9 loss: 0.9920 accuracy: 0.6617 val_loss: 0.7984 val_accuracy: 0.8609
Epoch: 10 loss: 0.9897 accuracy: 0.6740 val_loss: 0.8349 val_accuracy: 0.8609
Epoch: 11 loss: 0.9695 accuracy: 0.6788 val_loss: 0.9009 val_accuracy: 0.8609
Epoch: 12 loss: 0.9597 accuracy: 0.6853 val_loss: 0.7340 val_accuracy: 0.8609
Epoch: 13 loss: 0.9619 accuracy: 0.6823 val_loss: 0.7170 val_accuracy: 0.8609
Epoch: 14 loss: 0.9455 accuracy: 0.6871 val_loss: 0.7116 val_accuracy: 0.8609
Epoch: 15 loss: 0.9438 accuracy: 0.6931 val_loss: 0.7044 val_accuracy: 0.8609
Epoch: 16 loss: 0.9333 accuracy: 0.6979 val_loss: 0.7092 val_accuracy: 0.8609
Epoch: 17 loss: 0.9275 accuracy: 0.6992 val_loss: 0.7502 val_accuracy: 0.8609
Epoch: 18 loss: 0.9365 accuracy: 0.6853 val_loss: 0.7203 val_accuracy: 0.8609
Epoch: 19 loss: 0.9169 accuracy: 0.6984 val_loss: 0.6824 val_accuracy: 0.8609
Epoch: 20 loss: 0.9041 accuracy: 0.6957 val_loss: 0.6787 val_accuracy: 0.8609
Epoch: 21 loss: 0.8960 accuracy: 0.7079 val_loss: 0.6745 val_accuracy: 0.8609
Epoch: 22 loss: 0.8855 accuracy: 0.7146 val_loss: 0.7028 val_accuracy: 0.8609
Epoch: 23 loss: 0.8771 accuracy: 0.7120 val_loss: 0.6757 val_accuracy: 0.8609
Epoch: 24 loss: 0.8891 accuracy: 0.7057 val_loss: 0.7649 val_accuracy: 0.8609
Epoch: 25 loss: 0.8857 accuracy: 0.6994 val_loss: 0.6950 val_accuracy: 0.8609
Epoch: 26 loss: 0.8906 accuracy: 0.6947 val_loss: 0.6641 val_accuracy: 0.8609
Epoch: 27 loss: 0.8924 accuracy: 0.6892 val_loss: 0.6581 val_accuracy: 0.8609
Epoch: 28 loss: 0.8609 accuracy: 0.7107 val_loss: 0.6473 val_accuracy: 0.8609
Epoch: 29 loss: 0.8697 accuracy: 0.7055 val_loss: 0.6928 val_accuracy: 0.8609
Epoch: 30 loss: 0.8615 accuracy: 0.7072 val_loss: 0.7294 val_accuracy: 0.8609
Epoch: 31 loss: 0.8437 accuracy: 0.7179 val_loss: 0.6787 val_accuracy: 0.8609
Epoch: 32 loss: 0.8476 accuracy: 0.7099 val_loss: 0.6656 val_accuracy: 0.8609
Epoch: 33 loss: 0.8447 accuracy: 0.7116 val_loss: 0.6951 val_accuracy: 0.8609

Epoch 00033: ReduceLROnPlateau reducing learning rate to 7.999999797903001e-05.
Epoch: 34 loss: 0.8284 accuracy: 0.7233 val_loss: 0.6793 val_accuracy: 0.8609
Epoch: 35 loss: 0.8314 accuracy: 0.7201 val_loss: 0.6612 val_accuracy: 0.8609
Epoch: 36 loss: 0.8309 accuracy: 0.7188 val_loss: 0.7338 val_accuracy: 0.8609
Epoch: 37 loss: 0.8315 accuracy: 0.7055 val_loss: 0.6483 val_accuracy: 0.8609
Epoch: 38 loss: 0.8288 accuracy: 0.7107 val_loss: 0.7397 val_accuracy: 0.8609

Epoch 00038: ReduceLROnPlateau reducing learning rate to 6.399999838322402e-05.
End of augmented training
Finish
Job ended!
