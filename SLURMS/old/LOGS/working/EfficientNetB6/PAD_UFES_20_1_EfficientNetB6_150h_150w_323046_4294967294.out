Tue 27 Feb 2024 05:16:23 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['PAD_UFES_20']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB6
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb6 (Functional)  (None, 2304)              40960143  
_________________________________________________________________
dense (Dense)                (None, 512)               1180160   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 42,275,217
Trainable params: 1,313,538
Non-trainable params: 40,961,679
_________________________________________________________________
Fitting PAD_UFES_20_aug_EfficientNetB6_150h_150w_None model...
model_name: PAD_UFES_20_aug_EfficientNetB6_150h_150w_None
Epoch: 1 loss: 0.6620 accuracy: 0.5981 val_loss: 0.5842 val_accuracy: 0.9804
Epoch: 2 loss: 0.5938 accuracy: 0.7743 val_loss: 0.4898 val_accuracy: 0.9804
Epoch: 3 loss: 0.5431 accuracy: 0.8214 val_loss: 0.4097 val_accuracy: 0.9804
Epoch: 4 loss: 0.5029 accuracy: 0.8296 val_loss: 0.3425 val_accuracy: 0.9804
Epoch: 5 loss: 0.4792 accuracy: 0.8296 val_loss: 0.2968 val_accuracy: 0.9804
Epoch: 6 loss: 0.4636 accuracy: 0.8292 val_loss: 0.2637 val_accuracy: 0.9804
Epoch: 7 loss: 0.4563 accuracy: 0.8296 val_loss: 0.2519 val_accuracy: 0.9804
Epoch: 8 loss: 0.4561 accuracy: 0.8285 val_loss: 0.2252 val_accuracy: 0.9804
Epoch: 9 loss: 0.4547 accuracy: 0.8285 val_loss: 0.2261 val_accuracy: 0.9804
Epoch: 10 loss: 0.4488 accuracy: 0.8304 val_loss: 0.2224 val_accuracy: 0.9804
Epoch: 11 loss: 0.4541 accuracy: 0.8296 val_loss: 0.2250 val_accuracy: 0.9804
Epoch: 12 loss: 0.4529 accuracy: 0.8277 val_loss: 0.2107 val_accuracy: 0.9804
Epoch: 13 loss: 0.4525 accuracy: 0.8288 val_loss: 0.2697 val_accuracy: 0.9804
Epoch: 14 loss: 0.4522 accuracy: 0.8288 val_loss: 0.2252 val_accuracy: 0.9804
Epoch: 15 loss: 0.4485 accuracy: 0.8296 val_loss: 0.2005 val_accuracy: 0.9804
Epoch: 16 loss: 0.4519 accuracy: 0.8281 val_loss: 0.2515 val_accuracy: 0.9804
Epoch: 17 loss: 0.4517 accuracy: 0.8288 val_loss: 0.2145 val_accuracy: 0.9804
Epoch: 18 loss: 0.4531 accuracy: 0.8285 val_loss: 0.2592 val_accuracy: 0.9804
Epoch: 19 loss: 0.4498 accuracy: 0.8296 val_loss: 0.1878 val_accuracy: 0.9804
Epoch: 20 loss: 0.4495 accuracy: 0.8285 val_loss: 0.1882 val_accuracy: 0.9804
Job ended!
