Fri 01 Mar 2024 05:14:53 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'KaggleMB']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB2
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb2 (Functional)  (None, 1408)              7768569   
_________________________________________________________________
dense (Dense)                (None, 512)               721408    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 8,624,891
Trainable params: 854,786
Non-trainable params: 7,770,105
_________________________________________________________________
Fitting ISIC2016+KaggleMB_aug_EfficientNetB2_150h_150w_None model...
model_name: ISIC2016+KaggleMB_aug_EfficientNetB2_150h_150w_None
Epoch: 1 loss: 0.7176 accuracy: 0.6807 val_loss: 0.4954 val_accuracy: 0.7415
Epoch: 2 loss: 0.5484 accuracy: 0.7560 val_loss: 0.4361 val_accuracy: 0.7853
Epoch: 3 loss: 0.4938 accuracy: 0.7807 val_loss: 0.4143 val_accuracy: 0.8037
Epoch: 4 loss: 0.4465 accuracy: 0.8023 val_loss: 0.4111 val_accuracy: 0.8220
Epoch: 5 loss: 0.4220 accuracy: 0.8180 val_loss: 0.4240 val_accuracy: 0.8249
Epoch: 6 loss: 0.3964 accuracy: 0.8210 val_loss: 0.4067 val_accuracy: 0.8079
Epoch: 7 loss: 0.3874 accuracy: 0.8311 val_loss: 0.4128 val_accuracy: 0.8079
Epoch: 8 loss: 0.3690 accuracy: 0.8451 val_loss: 0.4143 val_accuracy: 0.8150
Epoch: 9 loss: 0.3411 accuracy: 0.8511 val_loss: 0.4063 val_accuracy: 0.8206
Epoch: 10 loss: 0.3399 accuracy: 0.8554 val_loss: 0.3989 val_accuracy: 0.8263
Epoch: 11 loss: 0.3269 accuracy: 0.8590 val_loss: 0.4029 val_accuracy: 0.8277
Epoch: 12 loss: 0.2959 accuracy: 0.8729 val_loss: 0.4098 val_accuracy: 0.8263
Epoch: 13 loss: 0.2969 accuracy: 0.8724 val_loss: 0.4001 val_accuracy: 0.8305
Epoch: 14 loss: 0.2885 accuracy: 0.8716 val_loss: 0.4121 val_accuracy: 0.8263
Epoch: 15 loss: 0.2712 accuracy: 0.8820 val_loss: 0.4065 val_accuracy: 0.8362
Epoch: 16 loss: 0.2794 accuracy: 0.8835 val_loss: 0.4117 val_accuracy: 0.8291
Epoch: 17 loss: 0.2666 accuracy: 0.8882 val_loss: 0.4278 val_accuracy: 0.8263
Epoch: 18 loss: 0.2551 accuracy: 0.8897 val_loss: 0.4141 val_accuracy: 0.8263
Epoch: 19 loss: 0.2339 accuracy: 0.9029 val_loss: 0.4193 val_accuracy: 0.8263
Epoch: 20 loss: 0.2372 accuracy: 0.9053 val_loss: 0.4105 val_accuracy: 0.8249
Job ended!
