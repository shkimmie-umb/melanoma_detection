Thu 29 Feb 2024 05:29:22 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2018']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet201
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet201 (Functional)     (None, 1920)              18321984  
_________________________________________________________________
dense (Dense)                (None, 512)               983552    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 19,440,450
Trainable params: 1,116,930
Non-trainable params: 18,323,520
_________________________________________________________________
Fitting ISIC2018_aug_DenseNet201_150h_150w_None model...
model_name: ISIC2018_aug_DenseNet201_150h_150w_None
Epoch: 1 loss: 0.6051 accuracy: 0.7333 val_loss: 0.3354 val_accuracy: 0.8497
Epoch: 2 loss: 0.4318 accuracy: 0.8142 val_loss: 0.2401 val_accuracy: 0.8860
Epoch: 3 loss: 0.3768 accuracy: 0.8393 val_loss: 0.2424 val_accuracy: 0.8808
Epoch: 4 loss: 0.3495 accuracy: 0.8470 val_loss: 0.2041 val_accuracy: 0.8912
Epoch: 5 loss: 0.3286 accuracy: 0.8582 val_loss: 0.2075 val_accuracy: 0.8964
Epoch: 6 loss: 0.3038 accuracy: 0.8678 val_loss: 0.1922 val_accuracy: 0.9016
Epoch: 7 loss: 0.2934 accuracy: 0.8720 val_loss: 0.1939 val_accuracy: 0.9119
Epoch: 8 loss: 0.2705 accuracy: 0.8863 val_loss: 0.1827 val_accuracy: 0.9171
Epoch: 9 loss: 0.2547 accuracy: 0.8917 val_loss: 0.2017 val_accuracy: 0.9067
Epoch: 10 loss: 0.2460 accuracy: 0.8928 val_loss: 0.1937 val_accuracy: 0.9016
Epoch: 11 loss: 0.2332 accuracy: 0.9007 val_loss: 0.1801 val_accuracy: 0.9119
Epoch: 12 loss: 0.2285 accuracy: 0.9044 val_loss: 0.1784 val_accuracy: 0.9119
Epoch: 13 loss: 0.2160 accuracy: 0.9109 val_loss: 0.2016 val_accuracy: 0.9067
Epoch: 14 loss: 0.2078 accuracy: 0.9110 val_loss: 0.1960 val_accuracy: 0.9016
Epoch: 15 loss: 0.1926 accuracy: 0.9206 val_loss: 0.1776 val_accuracy: 0.9067
Epoch: 16 loss: 0.1821 accuracy: 0.9256 val_loss: 0.1825 val_accuracy: 0.8964
Epoch: 17 loss: 0.1727 accuracy: 0.9280 val_loss: 0.1620 val_accuracy: 0.9067
Epoch: 18 loss: 0.1662 accuracy: 0.9331 val_loss: 0.1964 val_accuracy: 0.8912
Epoch: 19 loss: 0.1566 accuracy: 0.9350 val_loss: 0.1616 val_accuracy: 0.9275
Epoch: 20 loss: 0.1506 accuracy: 0.9389 val_loss: 0.2139 val_accuracy: 0.9119
Job ended!
