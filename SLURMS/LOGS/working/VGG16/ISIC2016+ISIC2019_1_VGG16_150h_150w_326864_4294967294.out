Fri 01 Mar 2024 11:31:54 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'ISIC2019']
IMG_SIZE: [150, 150]
CLASSIFIER: VGG16
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
vgg16 (Functional)           (None, 512)               14714688  
_________________________________________________________________
dense (Dense)                (None, 512)               262656    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 15,112,258
Trainable params: 396,034
Non-trainable params: 14,716,224
_________________________________________________________________
Fitting ISIC2016+ISIC2019_aug_VGG16_150h_150w_None model...
model_name: ISIC2016+ISIC2019_aug_VGG16_150h_150w_None
Epoch: 1 loss: 0.6291 accuracy: 0.7062 val_loss: 0.3900 val_accuracy: 0.8475
Epoch: 2 loss: 0.5362 accuracy: 0.7467 val_loss: 0.3646 val_accuracy: 0.8546
Epoch: 3 loss: 0.4942 accuracy: 0.7658 val_loss: 0.3601 val_accuracy: 0.8534
Epoch: 4 loss: 0.4742 accuracy: 0.7758 val_loss: 0.3477 val_accuracy: 0.8573
Epoch: 5 loss: 0.4565 accuracy: 0.7832 val_loss: 0.3518 val_accuracy: 0.8550
Epoch: 6 loss: 0.4441 accuracy: 0.7885 val_loss: 0.3433 val_accuracy: 0.8603
Epoch: 7 loss: 0.4281 accuracy: 0.7973 val_loss: 0.3444 val_accuracy: 0.8565
Epoch: 8 loss: 0.4195 accuracy: 0.8022 val_loss: 0.3362 val_accuracy: 0.8614
Epoch: 9 loss: 0.4108 accuracy: 0.8078 val_loss: 0.3365 val_accuracy: 0.8607
Epoch: 10 loss: 0.3944 accuracy: 0.8176 val_loss: 0.3380 val_accuracy: 0.8626
Epoch: 11 loss: 0.3904 accuracy: 0.8191 val_loss: 0.3296 val_accuracy: 0.8647
Epoch: 12 loss: 0.3789 accuracy: 0.8267 val_loss: 0.3301 val_accuracy: 0.8639
Epoch: 13 loss: 0.3681 accuracy: 0.8313 val_loss: 0.3315 val_accuracy: 0.8637
Epoch: 14 loss: 0.3601 accuracy: 0.8354 val_loss: 0.3241 val_accuracy: 0.8674
Epoch: 15 loss: 0.3516 accuracy: 0.8377 val_loss: 0.3225 val_accuracy: 0.8687
Epoch: 16 loss: 0.3410 accuracy: 0.8449 val_loss: 0.3272 val_accuracy: 0.8674
Epoch: 17 loss: 0.3342 accuracy: 0.8493 val_loss: 0.3301 val_accuracy: 0.8670
Epoch: 18 loss: 0.3297 accuracy: 0.8518 val_loss: 0.3322 val_accuracy: 0.8664
Epoch: 19 loss: 0.3113 accuracy: 0.8596 val_loss: 0.3304 val_accuracy: 0.8694
Epoch: 20 loss: 0.3063 accuracy: 0.8617 val_loss: 0.3346 val_accuracy: 0.8630
Job ended!
