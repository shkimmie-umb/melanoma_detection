Tue 27 Feb 2024 04:28:23 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['PAD_UFES_20']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet201
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet201 (Functional)     (None, 1920)              18321984  
_________________________________________________________________
dense (Dense)                (None, 512)               983552    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 19,440,450
Trainable params: 1,116,930
Non-trainable params: 18,323,520
_________________________________________________________________
Fitting PAD_UFES_20_aug_DenseNet201_150h_150w_None model...
model_name: PAD_UFES_20_aug_DenseNet201_150h_150w_None
Epoch: 1 loss: 0.8028 accuracy: 0.6136 val_loss: 0.5538 val_accuracy: 0.9804
Epoch: 2 loss: 0.6816 accuracy: 0.6717 val_loss: 0.4263 val_accuracy: 0.9804
Epoch: 3 loss: 0.5714 accuracy: 0.7326 val_loss: 0.3406 val_accuracy: 0.9804
Epoch: 4 loss: 0.5343 accuracy: 0.7415 val_loss: 0.2794 val_accuracy: 0.9804
Epoch: 5 loss: 0.4749 accuracy: 0.7875 val_loss: 0.2398 val_accuracy: 0.9804
Epoch: 6 loss: 0.4741 accuracy: 0.7871 val_loss: 0.2453 val_accuracy: 0.9696
Epoch: 7 loss: 0.4337 accuracy: 0.8109 val_loss: 0.2470 val_accuracy: 0.9652
Epoch: 8 loss: 0.4112 accuracy: 0.8285 val_loss: 0.1524 val_accuracy: 0.9739
Epoch: 9 loss: 0.3854 accuracy: 0.8402 val_loss: 0.1334 val_accuracy: 0.9761
Epoch: 10 loss: 0.3729 accuracy: 0.8398 val_loss: 0.3475 val_accuracy: 0.8891
Epoch: 11 loss: 0.3793 accuracy: 0.8464 val_loss: 0.1752 val_accuracy: 0.9587
Epoch: 12 loss: 0.3502 accuracy: 0.8546 val_loss: 0.1815 val_accuracy: 0.9565
Epoch: 13 loss: 0.3469 accuracy: 0.8596 val_loss: 0.1563 val_accuracy: 0.9609
Epoch: 14 loss: 0.3454 accuracy: 0.8573 val_loss: 0.2765 val_accuracy: 0.9022
Epoch: 15 loss: 0.3312 accuracy: 0.8608 val_loss: 0.1961 val_accuracy: 0.9652
Epoch: 16 loss: 0.3140 accuracy: 0.8768 val_loss: 0.1523 val_accuracy: 0.9543
Epoch: 17 loss: 0.3106 accuracy: 0.8791 val_loss: 0.1329 val_accuracy: 0.9652
Epoch: 18 loss: 0.3323 accuracy: 0.8635 val_loss: 0.2041 val_accuracy: 0.9326
Epoch: 19 loss: 0.3191 accuracy: 0.8729 val_loss: 0.1316 val_accuracy: 0.9630
Epoch: 20 loss: 0.3206 accuracy: 0.8643 val_loss: 0.1320 val_accuracy: 0.9652
Job ended!
