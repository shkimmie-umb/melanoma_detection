Fri 01 Mar 2024 01:07:49 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB7
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb7 (Functional)  (None, 2560)              64097687  
_________________________________________________________________
dense (Dense)                (None, 512)               1311232   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 65,543,833
Trainable params: 1,444,610
Non-trainable params: 64,099,223
_________________________________________________________________
Fitting ISIC2016_aug_EfficientNetB7_150h_150w_None model...
model_name: ISIC2016_aug_EfficientNetB7_150h_150w_None
Epoch: 1 loss: 0.8399 accuracy: 0.6583 val_loss: 0.5927 val_accuracy: 0.7722
Epoch: 2 loss: 0.7169 accuracy: 0.6964 val_loss: 0.6373 val_accuracy: 0.6778
Epoch: 3 loss: 0.6246 accuracy: 0.7138 val_loss: 0.7501 val_accuracy: 0.4611
Epoch: 4 loss: 0.5931 accuracy: 0.7363 val_loss: 0.7141 val_accuracy: 0.5611
Epoch: 5 loss: 0.5743 accuracy: 0.7355 val_loss: 0.6030 val_accuracy: 0.6778
Epoch: 6 loss: 0.5569 accuracy: 0.7398 val_loss: 0.7499 val_accuracy: 0.5778
Epoch: 7 loss: 0.4907 accuracy: 0.7788 val_loss: 0.5624 val_accuracy: 0.6944
Epoch: 8 loss: 0.5125 accuracy: 0.7693 val_loss: 0.5518 val_accuracy: 0.7111
Epoch: 9 loss: 0.4602 accuracy: 0.8049 val_loss: 0.5343 val_accuracy: 0.7389
Epoch: 10 loss: 0.4684 accuracy: 0.7875 val_loss: 0.5592 val_accuracy: 0.7167
Epoch: 11 loss: 0.4475 accuracy: 0.7988 val_loss: 0.5526 val_accuracy: 0.7278
Epoch: 12 loss: 0.4425 accuracy: 0.8083 val_loss: 0.5584 val_accuracy: 0.7611
Epoch: 13 loss: 0.4174 accuracy: 0.8092 val_loss: 0.5711 val_accuracy: 0.7389
Epoch: 14 loss: 0.4418 accuracy: 0.8066 val_loss: 0.6012 val_accuracy: 0.7278
Epoch: 15 loss: 0.4309 accuracy: 0.8118 val_loss: 0.5647 val_accuracy: 0.7556
Epoch: 16 loss: 0.4385 accuracy: 0.8135 val_loss: 0.5905 val_accuracy: 0.7389
Epoch: 17 loss: 0.3974 accuracy: 0.8248 val_loss: 0.5527 val_accuracy: 0.7556
Epoch: 18 loss: 0.3938 accuracy: 0.8300 val_loss: 0.5874 val_accuracy: 0.7333
Epoch: 19 loss: 0.3801 accuracy: 0.8352 val_loss: 0.5933 val_accuracy: 0.7611
Epoch: 20 loss: 0.3652 accuracy: 0.8378 val_loss: 0.6120 val_accuracy: 0.7167
Job ended!
