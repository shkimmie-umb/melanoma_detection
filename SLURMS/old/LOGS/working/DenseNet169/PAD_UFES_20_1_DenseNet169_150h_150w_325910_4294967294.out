Fri 01 Mar 2024 12:40:56 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['PAD_UFES_20']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet169
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet169 (Functional)     (None, 1664)              12642880  
_________________________________________________________________
dense (Dense)                (None, 512)               852480    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 13,630,274
Trainable params: 985,858
Non-trainable params: 12,644,416
_________________________________________________________________
Fitting PAD_UFES_20_aug_DenseNet169_150h_150w_None model...
model_name: PAD_UFES_20_aug_DenseNet169_150h_150w_None
Epoch: 1 loss: 0.7532 accuracy: 0.6542 val_loss: 0.2864 val_accuracy: 0.9565
Epoch: 2 loss: 0.5581 accuracy: 0.7478 val_loss: 0.2524 val_accuracy: 0.9522
Epoch: 3 loss: 0.4431 accuracy: 0.8039 val_loss: 0.2372 val_accuracy: 0.9478
Epoch: 4 loss: 0.3709 accuracy: 0.8444 val_loss: 0.2048 val_accuracy: 0.9500
Epoch: 5 loss: 0.3126 accuracy: 0.8803 val_loss: 0.1483 val_accuracy: 0.9739
Epoch: 6 loss: 0.2578 accuracy: 0.9060 val_loss: 0.1568 val_accuracy: 0.9630
Epoch: 7 loss: 0.2229 accuracy: 0.9275 val_loss: 0.1357 val_accuracy: 0.9696
Epoch: 8 loss: 0.2144 accuracy: 0.9326 val_loss: 0.1326 val_accuracy: 0.9630
Epoch: 9 loss: 0.1715 accuracy: 0.9478 val_loss: 0.1246 val_accuracy: 0.9630
Epoch: 10 loss: 0.1471 accuracy: 0.9583 val_loss: 0.1116 val_accuracy: 0.9717
Epoch: 11 loss: 0.1244 accuracy: 0.9669 val_loss: 0.0995 val_accuracy: 0.9739
Epoch: 12 loss: 0.1413 accuracy: 0.9587 val_loss: 0.1086 val_accuracy: 0.9717
Epoch: 13 loss: 0.1080 accuracy: 0.9676 val_loss: 0.0975 val_accuracy: 0.9717
Epoch: 14 loss: 0.0822 accuracy: 0.9782 val_loss: 0.0881 val_accuracy: 0.9674
Epoch: 15 loss: 0.0793 accuracy: 0.9801 val_loss: 0.0852 val_accuracy: 0.9717
Epoch: 16 loss: 0.0757 accuracy: 0.9789 val_loss: 0.0830 val_accuracy: 0.9739
Epoch: 17 loss: 0.0676 accuracy: 0.9834 val_loss: 0.0888 val_accuracy: 0.9761
Epoch: 18 loss: 0.0650 accuracy: 0.9821 val_loss: 0.0838 val_accuracy: 0.9739
Epoch: 19 loss: 0.0516 accuracy: 0.9864 val_loss: 0.0779 val_accuracy: 0.9717
Epoch: 20 loss: 0.0521 accuracy: 0.9867 val_loss: 0.0766 val_accuracy: 0.9717
Job ended!
