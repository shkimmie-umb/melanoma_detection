Tue 27 Feb 2024 08:35:02 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2020']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB2
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb2 (Functional)  (None, 1408)              7768569   
_________________________________________________________________
dense (Dense)                (None, 512)               721408    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 8,624,891
Trainable params: 854,786
Non-trainable params: 7,770,105
_________________________________________________________________
Fitting ISIC2020_aug_EfficientNetB2_150h_150w_None model...
model_name: ISIC2020_aug_EfficientNetB2_150h_150w_None
Epoch: 1 loss: 0.5114 accuracy: 0.7951 val_loss: 0.1977 val_accuracy: 0.9843
Epoch: 2 loss: 0.4725 accuracy: 0.8111 val_loss: 0.2009 val_accuracy: 0.9843
Epoch: 3 loss: 0.4713 accuracy: 0.8111 val_loss: 0.1813 val_accuracy: 0.9843
Epoch: 4 loss: 0.4703 accuracy: 0.8112 val_loss: 0.2249 val_accuracy: 0.9843
Epoch: 5 loss: 0.4690 accuracy: 0.8113 val_loss: 0.2194 val_accuracy: 0.9843
Epoch: 6 loss: 0.4688 accuracy: 0.8112 val_loss: 0.1737 val_accuracy: 0.9843
Epoch: 7 loss: 0.4683 accuracy: 0.8112 val_loss: 0.2678 val_accuracy: 0.9843
Epoch: 8 loss: 0.4660 accuracy: 0.8112 val_loss: 0.2525 val_accuracy: 0.9843
Epoch: 9 loss: 0.4662 accuracy: 0.8111 val_loss: 0.2990 val_accuracy: 0.9843
Epoch: 10 loss: 0.4639 accuracy: 0.8111 val_loss: 0.3077 val_accuracy: 0.9843
Epoch: 11 loss: 0.4641 accuracy: 0.8112 val_loss: 0.4204 val_accuracy: 0.9843
Epoch: 12 loss: 0.4638 accuracy: 0.8111 val_loss: 0.2789 val_accuracy: 0.9843
Epoch: 13 loss: 0.4623 accuracy: 0.8112 val_loss: 0.2030 val_accuracy: 0.9843
Epoch: 14 loss: 0.4621 accuracy: 0.8111 val_loss: 0.2802 val_accuracy: 0.9843
Epoch: 15 loss: 0.4613 accuracy: 0.8111 val_loss: 0.3059 val_accuracy: 0.9843
Epoch: 16 loss: 0.4594 accuracy: 0.8112 val_loss: 0.3591 val_accuracy: 0.9843
Epoch: 17 loss: 0.4589 accuracy: 0.8112 val_loss: 0.1840 val_accuracy: 0.9843
Epoch: 18 loss: 0.4577 accuracy: 0.8112 val_loss: 0.3926 val_accuracy: 0.9843
Epoch: 19 loss: 0.4575 accuracy: 0.8112 val_loss: 0.3121 val_accuracy: 0.9843
Epoch: 20 loss: 0.4568 accuracy: 0.8112 val_loss: 0.1704 val_accuracy: 0.9843
Job ended!
