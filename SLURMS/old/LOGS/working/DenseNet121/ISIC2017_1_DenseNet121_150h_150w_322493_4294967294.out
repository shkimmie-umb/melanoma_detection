Tue 27 Feb 2024 01:22:25 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2017']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet121
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet121 (Functional)     (None, 1024)              7037504   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,697,218
Trainable params: 658,178
Non-trainable params: 7,039,040
_________________________________________________________________
Fitting ISIC2017_aug_DenseNet121_150h_150w_None model...
model_name: ISIC2017_aug_DenseNet121_150h_150w_None
Epoch: 1 loss: 0.8991 accuracy: 0.5508 val_loss: 0.6654 val_accuracy: 0.8000
Epoch: 2 loss: 0.8106 accuracy: 0.5945 val_loss: 0.6455 val_accuracy: 0.7800
Epoch: 3 loss: 0.7713 accuracy: 0.6099 val_loss: 0.6610 val_accuracy: 0.7000
Epoch: 4 loss: 0.7313 accuracy: 0.6283 val_loss: 0.6367 val_accuracy: 0.5800
Epoch: 5 loss: 0.7346 accuracy: 0.6303 val_loss: 0.6522 val_accuracy: 0.6400
Epoch: 6 loss: 0.7222 accuracy: 0.6306 val_loss: 0.6033 val_accuracy: 0.6733
Epoch: 7 loss: 0.7057 accuracy: 0.6423 val_loss: 0.5913 val_accuracy: 0.6600
Epoch: 8 loss: 0.7032 accuracy: 0.6446 val_loss: 0.6213 val_accuracy: 0.6467
Epoch: 9 loss: 0.7013 accuracy: 0.6546 val_loss: 0.7106 val_accuracy: 0.5800
Epoch: 10 loss: 0.6774 accuracy: 0.6526 val_loss: 0.5823 val_accuracy: 0.7133
Epoch: 11 loss: 0.6865 accuracy: 0.6583 val_loss: 0.6621 val_accuracy: 0.6000
Epoch: 12 loss: 0.6527 accuracy: 0.6850 val_loss: 0.5445 val_accuracy: 0.7733
Epoch: 13 loss: 0.6742 accuracy: 0.6597 val_loss: 0.5790 val_accuracy: 0.7533
Epoch: 14 loss: 0.6681 accuracy: 0.6647 val_loss: 0.5975 val_accuracy: 0.7333
Epoch: 15 loss: 0.6518 accuracy: 0.6700 val_loss: 0.5569 val_accuracy: 0.7400
Epoch: 16 loss: 0.6492 accuracy: 0.6794 val_loss: 0.5701 val_accuracy: 0.6933
Epoch: 17 loss: 0.6655 accuracy: 0.6690 val_loss: 0.5190 val_accuracy: 0.7467
Epoch: 18 loss: 0.6521 accuracy: 0.6827 val_loss: 0.5541 val_accuracy: 0.7533
Epoch: 19 loss: 0.6406 accuracy: 0.6867 val_loss: 0.5398 val_accuracy: 0.7467
Epoch: 20 loss: 0.6521 accuracy: 0.6687 val_loss: 0.7674 val_accuracy: 0.5000
Job ended!
