Mon 06 May 2024 09:17:36 PM EDT
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', '_7_point_criteria', 'PAD_UFES_20', 'MEDNODE']
IMG_SIZE: [384, 384]
CLASSIFIER: EfficientNetB4
JOB_INDEX: None
Start training augmented images
Combining...
Combining 1th db out of 4 dbs
Combining 2th db out of 4 dbs
Combining 3th db out of 4 dbs
Combining 4th db out of 4 dbs
Stacking data
Combining complete
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb4 (Functional)  (None, 1792)              17673823  
_________________________________________________________________
dense (Dense)                (None, 512)               918016    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 18,726,753
Trainable params: 1,051,394
Non-trainable params: 17,675,359
_________________________________________________________________
Fitting ISIC2016+_7_point_criteria+PAD_UFES_20+MEDNODE_aug_EfficientNetB4_384h_384w_None model...
model_name: ISIC2016+_7_point_criteria+PAD_UFES_20+MEDNODE_aug_EfficientNetB4_384h_384w_None
Epoch: 1 loss: 1.4914 accuracy: 0.5152 val_loss: 1.1002 val_accuracy: 0.8609
Epoch: 2 loss: 1.3303 accuracy: 0.5352 val_loss: 1.0541 val_accuracy: 0.8609
Epoch: 3 loss: 1.2361 accuracy: 0.5655 val_loss: 0.9800 val_accuracy: 0.8609
Epoch: 4 loss: 1.1755 accuracy: 0.5924 val_loss: 0.8750 val_accuracy: 0.8609
Epoch: 5 loss: 1.1362 accuracy: 0.6189 val_loss: 0.8766 val_accuracy: 0.8609
Epoch: 6 loss: 1.1166 accuracy: 0.6285 val_loss: 0.9574 val_accuracy: 0.8609
Epoch: 7 loss: 1.0964 accuracy: 0.6450 val_loss: 0.9134 val_accuracy: 0.8609
Epoch: 8 loss: 1.0732 accuracy: 0.6545 val_loss: 0.8177 val_accuracy: 0.8609
Epoch: 9 loss: 1.0659 accuracy: 0.6582 val_loss: 1.0725 val_accuracy: 0.8483
Epoch: 10 loss: 1.0566 accuracy: 0.6623 val_loss: 0.8936 val_accuracy: 0.8609
Epoch: 11 loss: 1.0509 accuracy: 0.6669 val_loss: 0.8560 val_accuracy: 0.8609
Epoch: 12 loss: 1.0206 accuracy: 0.6890 val_loss: 0.8141 val_accuracy: 0.8609
Epoch: 13 loss: 1.0412 accuracy: 0.6691 val_loss: 0.8012 val_accuracy: 0.8609
Epoch: 14 loss: 1.0167 accuracy: 0.6812 val_loss: 0.7919 val_accuracy: 0.8609
Epoch: 15 loss: 1.0114 accuracy: 0.6899 val_loss: 0.8056 val_accuracy: 0.8609
Epoch: 16 loss: 1.0054 accuracy: 0.6949 val_loss: 0.8251 val_accuracy: 0.8609
Epoch: 17 loss: 1.0129 accuracy: 0.6821 val_loss: 0.9212 val_accuracy: 0.8609
Epoch: 18 loss: 0.9908 accuracy: 0.6912 val_loss: 0.7841 val_accuracy: 0.8609
Epoch: 19 loss: 1.0017 accuracy: 0.6897 val_loss: 0.7636 val_accuracy: 0.8609
Epoch: 20 loss: 0.9874 accuracy: 0.6886 val_loss: 0.7730 val_accuracy: 0.8609
Epoch: 21 loss: 0.9632 accuracy: 0.6986 val_loss: 0.8071 val_accuracy: 0.8609
Epoch: 22 loss: 0.9582 accuracy: 0.7072 val_loss: 0.7630 val_accuracy: 0.8609
Epoch: 23 loss: 0.9812 accuracy: 0.6806 val_loss: 0.8089 val_accuracy: 0.8609
Epoch: 24 loss: 0.9671 accuracy: 0.6895 val_loss: 0.7967 val_accuracy: 0.8609
Epoch: 25 loss: 0.9621 accuracy: 0.6862 val_loss: 0.7235 val_accuracy: 0.8609
Epoch: 26 loss: 0.9532 accuracy: 0.6981 val_loss: 0.7556 val_accuracy: 0.8609
Epoch: 27 loss: 0.9306 accuracy: 0.7062 val_loss: 0.9304 val_accuracy: 0.8609
Epoch: 28 loss: 0.9435 accuracy: 0.7059 val_loss: 0.7943 val_accuracy: 0.8609
Epoch: 29 loss: 0.9242 accuracy: 0.7070 val_loss: 0.7091 val_accuracy: 0.8609
Epoch: 30 loss: 0.9365 accuracy: 0.7023 val_loss: 0.7778 val_accuracy: 0.8609
Epoch: 31 loss: 0.9251 accuracy: 0.7038 val_loss: 0.7007 val_accuracy: 0.8609
Epoch: 32 loss: 0.9122 accuracy: 0.7103 val_loss: 0.7524 val_accuracy: 0.8609
Epoch: 33 loss: 0.9011 accuracy: 0.7194 val_loss: 0.7201 val_accuracy: 0.8609
Epoch: 34 loss: 0.8912 accuracy: 0.7190 val_loss: 0.7746 val_accuracy: 0.8609
Epoch: 35 loss: 0.8882 accuracy: 0.7281 val_loss: 0.7480 val_accuracy: 0.8609
Epoch: 36 loss: 0.8930 accuracy: 0.7174 val_loss: 0.7327 val_accuracy: 0.8609

Epoch 00036: ReduceLROnPlateau reducing learning rate to 7.999999797903001e-05.
Epoch: 37 loss: 0.8943 accuracy: 0.7120 val_loss: 0.6822 val_accuracy: 0.8609
Epoch: 38 loss: 0.8866 accuracy: 0.7174 val_loss: 0.6774 val_accuracy: 0.8609
Epoch: 39 loss: 0.8829 accuracy: 0.7172 val_loss: 0.7306 val_accuracy: 0.8609
Epoch: 40 loss: 0.8815 accuracy: 0.7159 val_loss: 0.7078 val_accuracy: 0.8609
Epoch: 41 loss: 0.8825 accuracy: 0.7127 val_loss: 0.6915 val_accuracy: 0.8609
Epoch: 42 loss: 0.8662 accuracy: 0.7177 val_loss: 0.6956 val_accuracy: 0.8609
Epoch: 43 loss: 0.8651 accuracy: 0.7144 val_loss: 0.6985 val_accuracy: 0.8609

Epoch 00043: ReduceLROnPlateau reducing learning rate to 6.399999838322402e-05.
Epoch: 44 loss: 0.8648 accuracy: 0.7183 val_loss: 0.7139 val_accuracy: 0.8609
Epoch: 45 loss: 0.8584 accuracy: 0.7153 val_loss: 0.7218 val_accuracy: 0.8609
Epoch: 46 loss: 0.8552 accuracy: 0.7205 val_loss: 0.7093 val_accuracy: 0.8609
Epoch: 47 loss: 0.8492 accuracy: 0.7220 val_loss: 0.7122 val_accuracy: 0.8609
Epoch: 48 loss: 0.8464 accuracy: 0.7211 val_loss: 0.7187 val_accuracy: 0.8609

Epoch 00048: ReduceLROnPlateau reducing learning rate to 5.119999987073243e-05.
End of augmented training
Finish
Job ended!
