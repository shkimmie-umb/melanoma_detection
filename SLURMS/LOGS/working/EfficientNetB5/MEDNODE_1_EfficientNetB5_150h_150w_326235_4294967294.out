Fri 01 Mar 2024 10:43:03 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['MEDNODE']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB5
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb5 (Functional)  (None, 2048)              28513527  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 29,697,529
Trainable params: 1,182,466
Non-trainable params: 28,515,063
_________________________________________________________________
Fitting MEDNODE_aug_EfficientNetB5_150h_150w_None model...
model_name: MEDNODE_aug_EfficientNetB5_150h_150w_None
Epoch: 1 loss: 0.8133 accuracy: 0.6027 val_loss: 0.6463 val_accuracy: 0.6471
Epoch: 2 loss: 0.6676 accuracy: 0.6964 val_loss: 0.6034 val_accuracy: 0.7059
Epoch: 3 loss: 0.4679 accuracy: 0.7589 val_loss: 0.5697 val_accuracy: 0.7353
Epoch: 4 loss: 0.4098 accuracy: 0.8214 val_loss: 0.5445 val_accuracy: 0.7353
Epoch: 5 loss: 0.4063 accuracy: 0.7991 val_loss: 0.5286 val_accuracy: 0.7647
Epoch: 6 loss: 0.3668 accuracy: 0.8259 val_loss: 0.5136 val_accuracy: 0.7647
Epoch: 7 loss: 0.2473 accuracy: 0.9018 val_loss: 0.5028 val_accuracy: 0.7941
Epoch: 8 loss: 0.3243 accuracy: 0.8661 val_loss: 0.4973 val_accuracy: 0.7647
Epoch: 9 loss: 0.2675 accuracy: 0.8750 val_loss: 0.4906 val_accuracy: 0.7647
Epoch: 10 loss: 0.2239 accuracy: 0.9062 val_loss: 0.4849 val_accuracy: 0.7353
Epoch: 11 loss: 0.2312 accuracy: 0.9062 val_loss: 0.4784 val_accuracy: 0.7353
Epoch: 12 loss: 0.2359 accuracy: 0.8884 val_loss: 0.4692 val_accuracy: 0.7353
Epoch: 13 loss: 0.2110 accuracy: 0.9062 val_loss: 0.4694 val_accuracy: 0.7059
Epoch: 14 loss: 0.2079 accuracy: 0.9107 val_loss: 0.4564 val_accuracy: 0.7353
Epoch: 15 loss: 0.1942 accuracy: 0.9330 val_loss: 0.4511 val_accuracy: 0.7941
Epoch: 16 loss: 0.1478 accuracy: 0.9420 val_loss: 0.4426 val_accuracy: 0.8235
Epoch: 17 loss: 0.1682 accuracy: 0.9241 val_loss: 0.4323 val_accuracy: 0.8235
Epoch: 18 loss: 0.1945 accuracy: 0.9152 val_loss: 0.4219 val_accuracy: 0.8235
Epoch: 19 loss: 0.1163 accuracy: 0.9732 val_loss: 0.4132 val_accuracy: 0.8235
Epoch: 20 loss: 0.1774 accuracy: 0.9375 val_loss: 0.4085 val_accuracy: 0.8235
Job ended!
