Tue 27 Feb 2024 05:11:43 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2020']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB6
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb6 (Functional)  (None, 2304)              40960143  
_________________________________________________________________
dense (Dense)                (None, 512)               1180160   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 42,275,217
Trainable params: 1,313,538
Non-trainable params: 40,961,679
_________________________________________________________________
Fitting ISIC2020_aug_EfficientNetB6_150h_150w_None model...
model_name: ISIC2020_aug_EfficientNetB6_150h_150w_None
Epoch: 1 loss: 0.4995 accuracy: 0.7916 val_loss: 0.1695 val_accuracy: 0.9843
Epoch: 2 loss: 0.4603 accuracy: 0.8115 val_loss: 0.1768 val_accuracy: 0.9843
Epoch: 3 loss: 0.4569 accuracy: 0.8117 val_loss: 0.1648 val_accuracy: 0.9843
Epoch: 4 loss: 0.4547 accuracy: 0.8126 val_loss: 0.1712 val_accuracy: 0.9840
Epoch: 5 loss: 0.4533 accuracy: 0.8127 val_loss: 0.1858 val_accuracy: 0.9843
Epoch: 6 loss: 0.4570 accuracy: 0.8121 val_loss: 0.2079 val_accuracy: 0.9840
Epoch: 7 loss: 0.4517 accuracy: 0.8129 val_loss: 0.1579 val_accuracy: 0.9840
Epoch: 8 loss: 0.4507 accuracy: 0.8129 val_loss: 0.2198 val_accuracy: 0.9831
Epoch: 9 loss: 0.4484 accuracy: 0.8132 val_loss: 0.2290 val_accuracy: 0.9835
Epoch: 10 loss: 0.4473 accuracy: 0.8134 val_loss: 0.1859 val_accuracy: 0.9839
Epoch: 11 loss: 0.4449 accuracy: 0.8135 val_loss: 0.2625 val_accuracy: 0.9799
Epoch: 12 loss: 0.4438 accuracy: 0.8137 val_loss: 0.1793 val_accuracy: 0.9840
Epoch: 13 loss: 0.4429 accuracy: 0.8140 val_loss: 0.2230 val_accuracy: 0.9825
Epoch: 14 loss: 0.4424 accuracy: 0.8140 val_loss: 0.1981 val_accuracy: 0.9816
Epoch: 15 loss: 0.4392 accuracy: 0.8144 val_loss: 0.2224 val_accuracy: 0.9834
Epoch: 16 loss: 0.4399 accuracy: 0.8146 val_loss: 0.1838 val_accuracy: 0.9840
Epoch: 17 loss: 0.4387 accuracy: 0.8142 val_loss: 0.1974 val_accuracy: 0.9829
Epoch: 18 loss: 0.4396 accuracy: 0.8151 val_loss: 0.2865 val_accuracy: 0.9811
Epoch: 19 loss: 0.4380 accuracy: 0.8147 val_loss: 0.1937 val_accuracy: 0.9842
Epoch: 20 loss: 0.4375 accuracy: 0.8142 val_loss: 0.1971 val_accuracy: 0.9837
Job ended!
