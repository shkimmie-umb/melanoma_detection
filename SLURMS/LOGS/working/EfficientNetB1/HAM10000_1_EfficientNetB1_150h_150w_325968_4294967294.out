Fri 01 Mar 2024 02:34:11 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['HAM10000']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB1
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb1 (Functional)  (None, 1280)              6575239   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,366,025
Trainable params: 789,250
Non-trainable params: 6,576,775
_________________________________________________________________
Fitting HAM10000_aug_EfficientNetB1_150h_150w_None model...
model_name: HAM10000_aug_EfficientNetB1_150h_150w_None
Epoch: 1 loss: 0.6708 accuracy: 0.7026 val_loss: 0.1536 val_accuracy: 0.9592
Epoch: 2 loss: 0.5080 accuracy: 0.7724 val_loss: 0.1649 val_accuracy: 0.9502
Epoch: 3 loss: 0.4694 accuracy: 0.7926 val_loss: 0.1430 val_accuracy: 0.9604
Epoch: 4 loss: 0.4399 accuracy: 0.8046 val_loss: 0.1218 val_accuracy: 0.9649
Epoch: 5 loss: 0.4173 accuracy: 0.8139 val_loss: 0.1367 val_accuracy: 0.9592
Epoch: 6 loss: 0.4113 accuracy: 0.8164 val_loss: 0.1404 val_accuracy: 0.9547
Epoch: 7 loss: 0.3968 accuracy: 0.8180 val_loss: 0.1265 val_accuracy: 0.9638
Epoch: 8 loss: 0.3856 accuracy: 0.8307 val_loss: 0.1290 val_accuracy: 0.9649
Epoch: 9 loss: 0.3762 accuracy: 0.8347 val_loss: 0.1320 val_accuracy: 0.9581
Epoch: 10 loss: 0.3719 accuracy: 0.8369 val_loss: 0.1385 val_accuracy: 0.9479
Epoch: 11 loss: 0.3593 accuracy: 0.8375 val_loss: 0.1239 val_accuracy: 0.9626
Epoch: 12 loss: 0.3431 accuracy: 0.8489 val_loss: 0.1275 val_accuracy: 0.9615
Epoch: 13 loss: 0.3480 accuracy: 0.8448 val_loss: 0.1330 val_accuracy: 0.9558
Epoch: 14 loss: 0.3391 accuracy: 0.8462 val_loss: 0.1407 val_accuracy: 0.9570
Epoch: 15 loss: 0.3360 accuracy: 0.8567 val_loss: 0.1248 val_accuracy: 0.9615
Epoch: 16 loss: 0.3352 accuracy: 0.8538 val_loss: 0.1344 val_accuracy: 0.9581
Epoch: 17 loss: 0.3237 accuracy: 0.8588 val_loss: 0.1295 val_accuracy: 0.9638
Epoch: 18 loss: 0.3201 accuracy: 0.8604 val_loss: 0.1294 val_accuracy: 0.9604
Epoch: 19 loss: 0.3157 accuracy: 0.8591 val_loss: 0.1279 val_accuracy: 0.9592
Epoch: 20 loss: 0.3123 accuracy: 0.8675 val_loss: 0.1349 val_accuracy: 0.9592
Job ended!
