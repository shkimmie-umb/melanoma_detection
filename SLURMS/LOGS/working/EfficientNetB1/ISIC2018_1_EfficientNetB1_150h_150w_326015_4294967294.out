Fri 01 Mar 2024 04:06:25 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2018']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB1
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb1 (Functional)  (None, 1280)              6575239   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,366,025
Trainable params: 789,250
Non-trainable params: 6,576,775
_________________________________________________________________
Fitting ISIC2018_aug_EfficientNetB1_150h_150w_None model...
model_name: ISIC2018_aug_EfficientNetB1_150h_150w_None
Epoch: 1 loss: 0.6141 accuracy: 0.7170 val_loss: 0.3290 val_accuracy: 0.8497
Epoch: 2 loss: 0.4684 accuracy: 0.7939 val_loss: 0.2935 val_accuracy: 0.8601
Epoch: 3 loss: 0.4248 accuracy: 0.8099 val_loss: 0.2624 val_accuracy: 0.8912
Epoch: 4 loss: 0.3981 accuracy: 0.8243 val_loss: 0.2627 val_accuracy: 0.8653
Epoch: 5 loss: 0.3853 accuracy: 0.8311 val_loss: 0.2385 val_accuracy: 0.9067
Epoch: 6 loss: 0.3721 accuracy: 0.8411 val_loss: 0.2194 val_accuracy: 0.8964
Epoch: 7 loss: 0.3581 accuracy: 0.8459 val_loss: 0.2452 val_accuracy: 0.8912
Epoch: 8 loss: 0.3484 accuracy: 0.8476 val_loss: 0.2348 val_accuracy: 0.8964
Epoch: 9 loss: 0.3386 accuracy: 0.8513 val_loss: 0.2257 val_accuracy: 0.8964
Epoch: 10 loss: 0.3324 accuracy: 0.8546 val_loss: 0.2402 val_accuracy: 0.8756
Epoch: 11 loss: 0.3282 accuracy: 0.8595 val_loss: 0.2376 val_accuracy: 0.8808
Epoch: 12 loss: 0.3245 accuracy: 0.8597 val_loss: 0.2206 val_accuracy: 0.9119
Epoch: 13 loss: 0.3233 accuracy: 0.8577 val_loss: 0.2142 val_accuracy: 0.9067
Epoch: 14 loss: 0.3178 accuracy: 0.8595 val_loss: 0.2240 val_accuracy: 0.9016
Epoch: 15 loss: 0.3105 accuracy: 0.8655 val_loss: 0.2264 val_accuracy: 0.8808
Epoch: 16 loss: 0.3021 accuracy: 0.8696 val_loss: 0.2149 val_accuracy: 0.9067
Epoch: 17 loss: 0.2994 accuracy: 0.8708 val_loss: 0.2113 val_accuracy: 0.9016
Epoch: 18 loss: 0.2956 accuracy: 0.8728 val_loss: 0.2332 val_accuracy: 0.9016
Epoch: 19 loss: 0.2927 accuracy: 0.8744 val_loss: 0.2375 val_accuracy: 0.8964
Epoch: 20 loss: 0.2936 accuracy: 0.8724 val_loss: 0.2264 val_accuracy: 0.9016
Job ended!
