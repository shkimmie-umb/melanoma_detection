Thu 29 Feb 2024 01:33:24 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['PAD_UFES_20']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet121
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet121 (Functional)     (None, 1024)              7037504   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,697,218
Trainable params: 658,178
Non-trainable params: 7,039,040
_________________________________________________________________
Fitting PAD_UFES_20_aug_DenseNet121_150h_150w_None model...
model_name: PAD_UFES_20_aug_DenseNet121_150h_150w_None
Epoch: 1 loss: 0.7776 accuracy: 0.6429 val_loss: 0.2048 val_accuracy: 0.9674
Epoch: 2 loss: 0.5832 accuracy: 0.7283 val_loss: 0.2653 val_accuracy: 0.9522
Epoch: 3 loss: 0.4907 accuracy: 0.7969 val_loss: 0.2392 val_accuracy: 0.9522
Epoch: 4 loss: 0.4122 accuracy: 0.8199 val_loss: 0.2254 val_accuracy: 0.9500
Epoch: 5 loss: 0.3631 accuracy: 0.8507 val_loss: 0.2042 val_accuracy: 0.9587
Epoch: 6 loss: 0.3194 accuracy: 0.8764 val_loss: 0.1710 val_accuracy: 0.9587
Epoch: 7 loss: 0.2710 accuracy: 0.9014 val_loss: 0.1778 val_accuracy: 0.9652
Epoch: 8 loss: 0.2485 accuracy: 0.9115 val_loss: 0.1341 val_accuracy: 0.9761
Epoch: 9 loss: 0.2186 accuracy: 0.9232 val_loss: 0.1748 val_accuracy: 0.9543
Epoch: 10 loss: 0.1949 accuracy: 0.9349 val_loss: 0.1410 val_accuracy: 0.9717
Epoch: 11 loss: 0.1805 accuracy: 0.9446 val_loss: 0.1154 val_accuracy: 0.9826
Epoch: 12 loss: 0.1693 accuracy: 0.9427 val_loss: 0.1139 val_accuracy: 0.9739
Epoch: 13 loss: 0.1380 accuracy: 0.9556 val_loss: 0.1055 val_accuracy: 0.9761
Epoch: 14 loss: 0.1400 accuracy: 0.9540 val_loss: 0.1046 val_accuracy: 0.9739
Epoch: 15 loss: 0.1131 accuracy: 0.9676 val_loss: 0.0982 val_accuracy: 0.9739
Epoch: 16 loss: 0.1202 accuracy: 0.9618 val_loss: 0.0990 val_accuracy: 0.9739
Epoch: 17 loss: 0.1008 accuracy: 0.9653 val_loss: 0.0945 val_accuracy: 0.9739
Epoch: 18 loss: 0.0895 accuracy: 0.9747 val_loss: 0.0855 val_accuracy: 0.9783
Epoch: 19 loss: 0.0892 accuracy: 0.9719 val_loss: 0.0837 val_accuracy: 0.9739
Epoch: 20 loss: 0.0927 accuracy: 0.9715 val_loss: 0.0925 val_accuracy: 0.9739
Job ended!
