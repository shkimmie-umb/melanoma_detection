Thu 29 Feb 2024 07:26:49 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['HAM10000']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet169
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet169 (Functional)     (None, 1664)              12642880  
_________________________________________________________________
dense (Dense)                (None, 512)               852480    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 13,630,274
Trainable params: 985,858
Non-trainable params: 12,644,416
_________________________________________________________________
Fitting HAM10000_aug_DenseNet169_150h_150w_None model...
model_name: HAM10000_aug_DenseNet169_150h_150w_None
Epoch: 1 loss: 0.6644 accuracy: 0.6997 val_loss: 0.1750 val_accuracy: 0.9445
Epoch: 2 loss: 0.4960 accuracy: 0.7768 val_loss: 0.1401 val_accuracy: 0.9615
Epoch: 3 loss: 0.4334 accuracy: 0.8069 val_loss: 0.1236 val_accuracy: 0.9592
Epoch: 4 loss: 0.4091 accuracy: 0.8198 val_loss: 0.1248 val_accuracy: 0.9570
Epoch: 5 loss: 0.3778 accuracy: 0.8339 val_loss: 0.1238 val_accuracy: 0.9626
Epoch: 6 loss: 0.3600 accuracy: 0.8440 val_loss: 0.1178 val_accuracy: 0.9638
Epoch: 7 loss: 0.3379 accuracy: 0.8509 val_loss: 0.1180 val_accuracy: 0.9604
Epoch: 8 loss: 0.3189 accuracy: 0.8578 val_loss: 0.1271 val_accuracy: 0.9547
Epoch: 9 loss: 0.3019 accuracy: 0.8690 val_loss: 0.1156 val_accuracy: 0.9649
Epoch: 10 loss: 0.2923 accuracy: 0.8769 val_loss: 0.1077 val_accuracy: 0.9672
Epoch: 11 loss: 0.2723 accuracy: 0.8815 val_loss: 0.1181 val_accuracy: 0.9649
Epoch: 12 loss: 0.2553 accuracy: 0.8888 val_loss: 0.1294 val_accuracy: 0.9479
Epoch: 13 loss: 0.2410 accuracy: 0.9014 val_loss: 0.1328 val_accuracy: 0.9513
Epoch: 14 loss: 0.2366 accuracy: 0.8997 val_loss: 0.1170 val_accuracy: 0.9615
Epoch: 15 loss: 0.2301 accuracy: 0.9032 val_loss: 0.1411 val_accuracy: 0.9513
Epoch: 16 loss: 0.2144 accuracy: 0.9052 val_loss: 0.1338 val_accuracy: 0.9524
Epoch: 17 loss: 0.2000 accuracy: 0.9196 val_loss: 0.1256 val_accuracy: 0.9604
Epoch: 18 loss: 0.1909 accuracy: 0.9230 val_loss: 0.1402 val_accuracy: 0.9513
Epoch: 19 loss: 0.1770 accuracy: 0.9287 val_loss: 0.1283 val_accuracy: 0.9490
Epoch: 20 loss: 0.1719 accuracy: 0.9276 val_loss: 0.1239 val_accuracy: 0.9604
Job ended!
