Fri 01 Mar 2024 05:28:39 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2019']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB2
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb2 (Functional)  (None, 1408)              7768569   
_________________________________________________________________
dense (Dense)                (None, 512)               721408    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 8,624,891
Trainable params: 854,786
Non-trainable params: 7,770,105
_________________________________________________________________
Fitting ISIC2019_aug_EfficientNetB2_150h_150w_None model...
model_name: ISIC2019_aug_EfficientNetB2_150h_150w_None
Epoch: 1 loss: 0.6092 accuracy: 0.7234 val_loss: 0.3701 val_accuracy: 0.8482
Epoch: 2 loss: 0.5114 accuracy: 0.7652 val_loss: 0.3428 val_accuracy: 0.8634
Epoch: 3 loss: 0.4793 accuracy: 0.7753 val_loss: 0.3396 val_accuracy: 0.8638
Epoch: 4 loss: 0.4595 accuracy: 0.7868 val_loss: 0.3415 val_accuracy: 0.8642
Epoch: 5 loss: 0.4447 accuracy: 0.7923 val_loss: 0.3253 val_accuracy: 0.8735
Epoch: 6 loss: 0.4322 accuracy: 0.8007 val_loss: 0.3229 val_accuracy: 0.8725
Epoch: 7 loss: 0.4206 accuracy: 0.8063 val_loss: 0.3213 val_accuracy: 0.8727
Epoch: 8 loss: 0.4140 accuracy: 0.8068 val_loss: 0.3211 val_accuracy: 0.8709
Epoch: 9 loss: 0.4072 accuracy: 0.8114 val_loss: 0.3168 val_accuracy: 0.8753
Epoch: 10 loss: 0.3990 accuracy: 0.8169 val_loss: 0.3122 val_accuracy: 0.8767
Epoch: 11 loss: 0.3935 accuracy: 0.8168 val_loss: 0.3095 val_accuracy: 0.8717
Epoch: 12 loss: 0.3849 accuracy: 0.8244 val_loss: 0.3247 val_accuracy: 0.8638
Epoch: 13 loss: 0.3812 accuracy: 0.8253 val_loss: 0.3124 val_accuracy: 0.8769
Epoch: 14 loss: 0.3714 accuracy: 0.8321 val_loss: 0.3126 val_accuracy: 0.8782
Epoch: 15 loss: 0.3636 accuracy: 0.8355 val_loss: 0.3217 val_accuracy: 0.8810
Epoch: 16 loss: 0.3609 accuracy: 0.8343 val_loss: 0.3197 val_accuracy: 0.8778
Epoch: 17 loss: 0.3546 accuracy: 0.8385 val_loss: 0.3133 val_accuracy: 0.8776
Epoch: 18 loss: 0.3511 accuracy: 0.8406 val_loss: 0.3136 val_accuracy: 0.8731
Epoch: 19 loss: 0.3430 accuracy: 0.8460 val_loss: 0.3096 val_accuracy: 0.8806
Epoch: 20 loss: 0.3407 accuracy: 0.8468 val_loss: 0.3091 val_accuracy: 0.8761
Job ended!
