Fri 01 Mar 2024 06:57:43 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'PH2']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB3
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb3 (Functional)  (None, 1536)              10783535  
_________________________________________________________________
dense (Dense)                (None, 512)               786944    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 11,705,393
Trainable params: 920,322
Non-trainable params: 10,785,071
_________________________________________________________________
Fitting ISIC2016+PH2_aug_EfficientNetB3_150h_150w_None model...
model_name: ISIC2016+PH2_aug_EfficientNetB3_150h_150w_None
Epoch: 1 loss: 0.7955 accuracy: 0.6534 val_loss: 0.5165 val_accuracy: 0.7667
Epoch: 2 loss: 0.7079 accuracy: 0.6815 val_loss: 0.5068 val_accuracy: 0.7722
Epoch: 3 loss: 0.5371 accuracy: 0.7440 val_loss: 0.5133 val_accuracy: 0.7611
Epoch: 4 loss: 0.5163 accuracy: 0.7632 val_loss: 0.4911 val_accuracy: 0.7556
Epoch: 5 loss: 0.4773 accuracy: 0.7852 val_loss: 0.4842 val_accuracy: 0.7500
Epoch: 6 loss: 0.4485 accuracy: 0.7955 val_loss: 0.4862 val_accuracy: 0.7722
Epoch: 7 loss: 0.4169 accuracy: 0.8071 val_loss: 0.4834 val_accuracy: 0.7944
Epoch: 8 loss: 0.4130 accuracy: 0.8147 val_loss: 0.4745 val_accuracy: 0.7611
Epoch: 9 loss: 0.3815 accuracy: 0.8298 val_loss: 0.4651 val_accuracy: 0.8056
Epoch: 10 loss: 0.3715 accuracy: 0.8222 val_loss: 0.4801 val_accuracy: 0.7833
Epoch: 11 loss: 0.3775 accuracy: 0.8415 val_loss: 0.4755 val_accuracy: 0.7833
Epoch: 12 loss: 0.3410 accuracy: 0.8586 val_loss: 0.4944 val_accuracy: 0.7722
Epoch: 13 loss: 0.2946 accuracy: 0.8847 val_loss: 0.4866 val_accuracy: 0.7944
Epoch: 14 loss: 0.3368 accuracy: 0.8504 val_loss: 0.5039 val_accuracy: 0.8000
Epoch: 15 loss: 0.3109 accuracy: 0.8710 val_loss: 0.5126 val_accuracy: 0.8056
Epoch: 16 loss: 0.2888 accuracy: 0.8840 val_loss: 0.5153 val_accuracy: 0.7778
Epoch: 17 loss: 0.2777 accuracy: 0.8813 val_loss: 0.4944 val_accuracy: 0.7944
Epoch: 18 loss: 0.2792 accuracy: 0.8737 val_loss: 0.5165 val_accuracy: 0.7611
Epoch: 19 loss: 0.2419 accuracy: 0.8929 val_loss: 0.5409 val_accuracy: 0.7500
Epoch: 20 loss: 0.2433 accuracy: 0.8970 val_loss: 0.5255 val_accuracy: 0.7833
Job ended!
