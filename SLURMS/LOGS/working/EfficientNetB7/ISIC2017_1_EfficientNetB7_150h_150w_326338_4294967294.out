Fri 01 Mar 2024 03:42:33 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2017']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB7
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb7 (Functional)  (None, 2560)              64097687  
_________________________________________________________________
dense (Dense)                (None, 512)               1311232   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 65,543,833
Trainable params: 1,444,610
Non-trainable params: 64,099,223
_________________________________________________________________
Fitting ISIC2017_aug_EfficientNetB7_150h_150w_None model...
model_name: ISIC2017_aug_EfficientNetB7_150h_150w_None
Epoch: 1 loss: 0.7226 accuracy: 0.6623 val_loss: 0.4926 val_accuracy: 0.8200
Epoch: 2 loss: 0.5978 accuracy: 0.7255 val_loss: 0.3874 val_accuracy: 0.8467
Epoch: 3 loss: 0.5736 accuracy: 0.7365 val_loss: 0.3796 val_accuracy: 0.8333
Epoch: 4 loss: 0.5415 accuracy: 0.7582 val_loss: 0.3839 val_accuracy: 0.8467
Epoch: 5 loss: 0.5183 accuracy: 0.7602 val_loss: 0.3849 val_accuracy: 0.8200
Epoch: 6 loss: 0.5039 accuracy: 0.7645 val_loss: 0.3518 val_accuracy: 0.8667
Epoch: 7 loss: 0.4973 accuracy: 0.7652 val_loss: 0.3523 val_accuracy: 0.8333
Epoch: 8 loss: 0.4856 accuracy: 0.7749 val_loss: 0.3804 val_accuracy: 0.8333
Epoch: 9 loss: 0.4738 accuracy: 0.7829 val_loss: 0.4069 val_accuracy: 0.8200
Epoch: 10 loss: 0.4554 accuracy: 0.7939 val_loss: 0.3999 val_accuracy: 0.8600
Epoch: 11 loss: 0.4460 accuracy: 0.7949 val_loss: 0.4043 val_accuracy: 0.8333
Epoch: 12 loss: 0.4377 accuracy: 0.7969 val_loss: 0.4057 val_accuracy: 0.8333
Epoch: 13 loss: 0.4317 accuracy: 0.7989 val_loss: 0.3715 val_accuracy: 0.8400
Epoch: 14 loss: 0.4453 accuracy: 0.7912 val_loss: 0.3912 val_accuracy: 0.8200
Epoch: 15 loss: 0.4138 accuracy: 0.8100 val_loss: 0.3979 val_accuracy: 0.8467
Epoch: 16 loss: 0.4213 accuracy: 0.8110 val_loss: 0.3618 val_accuracy: 0.8533
Epoch: 17 loss: 0.4064 accuracy: 0.8143 val_loss: 0.3673 val_accuracy: 0.7933
Epoch: 18 loss: 0.3880 accuracy: 0.8253 val_loss: 0.4053 val_accuracy: 0.8000
Epoch: 19 loss: 0.3879 accuracy: 0.8220 val_loss: 0.4138 val_accuracy: 0.8000
Epoch: 20 loss: 0.3849 accuracy: 0.8240 val_loss: 0.4091 val_accuracy: 0.8333
Job ended!
