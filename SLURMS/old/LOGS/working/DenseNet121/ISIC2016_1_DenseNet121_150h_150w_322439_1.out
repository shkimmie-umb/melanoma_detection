Mon 26 Feb 2024 10:32:30 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID:  1
DB: ['ISIC2016']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet121
SELF_AUG: 1
JOB_INDEX: 1
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet121 (Functional)     (None, 1024)              7037504   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,697,218
Trainable params: 658,178
Non-trainable params: 7,039,040
_________________________________________________________________
Fitting ISIC2016_aug_DenseNet121_150h_150w_1 model...
model_name: ISIC2016_aug_DenseNet121_150h_150w_1
Epoch: 1 loss: 0.9122 accuracy: 0.5377 val_loss: 0.6503 val_accuracy: 0.8000
Epoch: 2 loss: 0.8624 accuracy: 0.5646 val_loss: 0.6297 val_accuracy: 0.8000
Epoch: 3 loss: 0.7979 accuracy: 0.5837 val_loss: 0.6114 val_accuracy: 0.8000
Epoch: 4 loss: 0.7957 accuracy: 0.5984 val_loss: 0.5889 val_accuracy: 0.8000
Epoch: 5 loss: 0.7699 accuracy: 0.5794 val_loss: 0.5705 val_accuracy: 0.8000
Epoch: 6 loss: 0.7245 accuracy: 0.6114 val_loss: 0.5528 val_accuracy: 0.8000
Epoch: 7 loss: 0.7431 accuracy: 0.6088 val_loss: 0.5385 val_accuracy: 0.8000
Epoch: 8 loss: 0.7424 accuracy: 0.6357 val_loss: 0.5480 val_accuracy: 0.8000
Epoch: 9 loss: 0.7404 accuracy: 0.6114 val_loss: 0.5919 val_accuracy: 0.7889
Epoch: 10 loss: 0.7251 accuracy: 0.6193 val_loss: 0.5735 val_accuracy: 0.8056
Epoch: 11 loss: 0.7273 accuracy: 0.6219 val_loss: 0.5432 val_accuracy: 0.8000
Epoch: 12 loss: 0.7180 accuracy: 0.6193 val_loss: 0.5282 val_accuracy: 0.8056
Epoch: 13 loss: 0.6761 accuracy: 0.6505 val_loss: 0.5350 val_accuracy: 0.8167
Epoch: 14 loss: 0.6844 accuracy: 0.6461 val_loss: 0.5724 val_accuracy: 0.8000
Epoch: 15 loss: 0.6872 accuracy: 0.6340 val_loss: 0.5344 val_accuracy: 0.7889
Epoch: 16 loss: 0.6906 accuracy: 0.6323 val_loss: 0.5834 val_accuracy: 0.7167
Epoch: 17 loss: 0.7034 accuracy: 0.6418 val_loss: 0.5062 val_accuracy: 0.7944
Epoch: 18 loss: 0.7137 accuracy: 0.6401 val_loss: 0.4995 val_accuracy: 0.8111
Epoch: 19 loss: 0.7113 accuracy: 0.6349 val_loss: 0.5377 val_accuracy: 0.7889
Epoch: 20 loss: 0.6703 accuracy: 0.6548 val_loss: 0.5000 val_accuracy: 0.7944
Job ended!
