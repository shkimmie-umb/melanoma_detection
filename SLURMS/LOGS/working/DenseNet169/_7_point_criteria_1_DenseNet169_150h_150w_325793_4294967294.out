Thu 29 Feb 2024 07:21:15 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['_7_point_criteria']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet169
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet169 (Functional)     (None, 1664)              12642880  
_________________________________________________________________
dense (Dense)                (None, 512)               852480    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 13,630,274
Trainable params: 985,858
Non-trainable params: 12,644,416
_________________________________________________________________
Fitting _7_point_criteria_aug_DenseNet169_150h_150w_None model...
model_name: _7_point_criteria_aug_DenseNet169_150h_150w_None
Epoch: 1 loss: 0.9766 accuracy: 0.5341 val_loss: 0.7155 val_accuracy: 0.5616
Epoch: 2 loss: 0.6831 accuracy: 0.7089 val_loss: 0.5956 val_accuracy: 0.6897
Epoch: 3 loss: 0.6367 accuracy: 0.7072 val_loss: 0.5786 val_accuracy: 0.6847
Epoch: 4 loss: 0.5118 accuracy: 0.7704 val_loss: 0.5733 val_accuracy: 0.6946
Epoch: 5 loss: 0.4785 accuracy: 0.7837 val_loss: 0.5529 val_accuracy: 0.7094
Epoch: 6 loss: 0.4258 accuracy: 0.7953 val_loss: 0.5501 val_accuracy: 0.7291
Epoch: 7 loss: 0.3696 accuracy: 0.8319 val_loss: 0.5533 val_accuracy: 0.7340
Epoch: 8 loss: 0.3604 accuracy: 0.8369 val_loss: 0.5440 val_accuracy: 0.7438
Epoch: 9 loss: 0.3385 accuracy: 0.8436 val_loss: 0.5337 val_accuracy: 0.7635
Epoch: 10 loss: 0.2593 accuracy: 0.8902 val_loss: 0.5451 val_accuracy: 0.7586
Epoch: 11 loss: 0.2230 accuracy: 0.9201 val_loss: 0.5425 val_accuracy: 0.7537
Epoch: 12 loss: 0.2446 accuracy: 0.8902 val_loss: 0.5432 val_accuracy: 0.7586
Epoch: 13 loss: 0.2287 accuracy: 0.9068 val_loss: 0.5479 val_accuracy: 0.7635
Epoch: 14 loss: 0.2126 accuracy: 0.9101 val_loss: 0.5527 val_accuracy: 0.7685
Epoch: 15 loss: 0.1922 accuracy: 0.9268 val_loss: 0.5575 val_accuracy: 0.7783
Epoch: 16 loss: 0.2100 accuracy: 0.9218 val_loss: 0.5659 val_accuracy: 0.7734
Epoch: 17 loss: 0.1346 accuracy: 0.9667 val_loss: 0.5817 val_accuracy: 0.7586
Epoch: 18 loss: 0.1676 accuracy: 0.9451 val_loss: 0.5684 val_accuracy: 0.7537
Epoch: 19 loss: 0.1729 accuracy: 0.9401 val_loss: 0.5693 val_accuracy: 0.7586
Epoch: 20 loss: 0.1472 accuracy: 0.9501 val_loss: 0.5929 val_accuracy: 0.7685
Job ended!
