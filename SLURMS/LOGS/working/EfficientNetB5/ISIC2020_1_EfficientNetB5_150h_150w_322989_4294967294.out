Tue 27 Feb 2024 02:36:33 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2020']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB5
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb5 (Functional)  (None, 2048)              28513527  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 29,697,529
Trainable params: 1,182,466
Non-trainable params: 28,515,063
_________________________________________________________________
Fitting ISIC2020_aug_EfficientNetB5_150h_150w_None model...
model_name: ISIC2020_aug_EfficientNetB5_150h_150w_None
Epoch: 1 loss: 0.5112 accuracy: 0.7921 val_loss: 0.2046 val_accuracy: 0.9843
Epoch: 2 loss: 0.4733 accuracy: 0.8113 val_loss: 0.2073 val_accuracy: 0.9843
Epoch: 3 loss: 0.4714 accuracy: 0.8113 val_loss: 0.2146 val_accuracy: 0.9843
Epoch: 4 loss: 0.4697 accuracy: 0.8120 val_loss: 0.2418 val_accuracy: 0.9843
Epoch: 5 loss: 0.4672 accuracy: 0.8121 val_loss: 0.2151 val_accuracy: 0.9843
Epoch: 6 loss: 0.4646 accuracy: 0.8123 val_loss: 0.1920 val_accuracy: 0.9843
Epoch: 7 loss: 0.4609 accuracy: 0.8121 val_loss: 0.1859 val_accuracy: 0.9843
Epoch: 8 loss: 0.4575 accuracy: 0.8129 val_loss: 0.1744 val_accuracy: 0.9843
Epoch: 9 loss: 0.4562 accuracy: 0.8122 val_loss: 0.1990 val_accuracy: 0.9840
Epoch: 10 loss: 0.4551 accuracy: 0.8125 val_loss: 0.2271 val_accuracy: 0.9816
Epoch: 11 loss: 0.4518 accuracy: 0.8122 val_loss: 0.2390 val_accuracy: 0.9814
Epoch: 12 loss: 0.4486 accuracy: 0.8123 val_loss: 0.1505 val_accuracy: 0.9843
Epoch: 13 loss: 0.4493 accuracy: 0.8129 val_loss: 0.2348 val_accuracy: 0.9820
Epoch: 14 loss: 0.4454 accuracy: 0.8134 val_loss: 0.1915 val_accuracy: 0.9843
Epoch: 15 loss: 0.4435 accuracy: 0.8126 val_loss: 0.2494 val_accuracy: 0.9777
Epoch: 16 loss: 0.4436 accuracy: 0.8138 val_loss: 0.1752 val_accuracy: 0.9832
Epoch: 17 loss: 0.4412 accuracy: 0.8139 val_loss: 0.2317 val_accuracy: 0.9825
Epoch: 18 loss: 0.4412 accuracy: 0.8133 val_loss: 0.1924 val_accuracy: 0.9832
Epoch: 19 loss: 0.4418 accuracy: 0.8145 val_loss: 0.1086 val_accuracy: 0.9843
Epoch: 20 loss: 0.4428 accuracy: 0.8138 val_loss: 0.1905 val_accuracy: 0.9834
Job ended!
