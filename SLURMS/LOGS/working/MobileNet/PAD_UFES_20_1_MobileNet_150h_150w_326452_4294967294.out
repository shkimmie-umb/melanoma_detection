Fri 01 Mar 2024 05:52:03 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['PAD_UFES_20']
IMG_SIZE: [150, 150]
CLASSIFIER: MobileNet
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
mobilenet_1.00_224 (Function (None, 1024)              3228864   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 3,888,578
Trainable params: 658,178
Non-trainable params: 3,230,400
_________________________________________________________________
Fitting PAD_UFES_20_aug_MobileNet_150h_150w_None model...
model_name: PAD_UFES_20_aug_MobileNet_150h_150w_None
Epoch: 1 loss: 0.8252 accuracy: 0.6203 val_loss: 0.3182 val_accuracy: 0.8978
Epoch: 2 loss: 0.6039 accuracy: 0.7279 val_loss: 0.4306 val_accuracy: 0.8261
Epoch: 3 loss: 0.4907 accuracy: 0.7797 val_loss: 0.3993 val_accuracy: 0.8609
Epoch: 4 loss: 0.4218 accuracy: 0.8179 val_loss: 0.3352 val_accuracy: 0.8935
Epoch: 5 loss: 0.3545 accuracy: 0.8585 val_loss: 0.2861 val_accuracy: 0.9217
Epoch: 6 loss: 0.3056 accuracy: 0.8823 val_loss: 0.2296 val_accuracy: 0.9370
Epoch: 7 loss: 0.2648 accuracy: 0.8998 val_loss: 0.2248 val_accuracy: 0.9304
Epoch: 8 loss: 0.2501 accuracy: 0.9096 val_loss: 0.1726 val_accuracy: 0.9522
Epoch: 9 loss: 0.2004 accuracy: 0.9294 val_loss: 0.1674 val_accuracy: 0.9565
Epoch: 10 loss: 0.1886 accuracy: 0.9357 val_loss: 0.1607 val_accuracy: 0.9543
Epoch: 11 loss: 0.1627 accuracy: 0.9485 val_loss: 0.1607 val_accuracy: 0.9543
Epoch: 12 loss: 0.1439 accuracy: 0.9540 val_loss: 0.1243 val_accuracy: 0.9674
Epoch: 13 loss: 0.1449 accuracy: 0.9536 val_loss: 0.1429 val_accuracy: 0.9674
Epoch: 14 loss: 0.1136 accuracy: 0.9665 val_loss: 0.1485 val_accuracy: 0.9609
Epoch: 15 loss: 0.1065 accuracy: 0.9661 val_loss: 0.1485 val_accuracy: 0.9609
Epoch: 16 loss: 0.1017 accuracy: 0.9680 val_loss: 0.1321 val_accuracy: 0.9652
Epoch: 17 loss: 0.0880 accuracy: 0.9727 val_loss: 0.1222 val_accuracy: 0.9674
Epoch: 18 loss: 0.0792 accuracy: 0.9778 val_loss: 0.1229 val_accuracy: 0.9674
Epoch: 19 loss: 0.0721 accuracy: 0.9805 val_loss: 0.1230 val_accuracy: 0.9630
Epoch: 20 loss: 0.0612 accuracy: 0.9875 val_loss: 0.1063 val_accuracy: 0.9696
Job ended!
