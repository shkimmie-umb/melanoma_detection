Fri 01 Mar 2024 02:22:19 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2017']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB0
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb0 (Functional)  (None, 1280)              4049571   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 4,840,357
Trainable params: 789,250
Non-trainable params: 4,051,107
_________________________________________________________________
Fitting ISIC2017_aug_EfficientNetB0_150h_150w_None model...
model_name: ISIC2017_aug_EfficientNetB0_150h_150w_None
Epoch: 1 loss: 0.7656 accuracy: 0.6603 val_loss: 0.4647 val_accuracy: 0.8200
Epoch: 2 loss: 0.6468 accuracy: 0.7074 val_loss: 0.4617 val_accuracy: 0.8067
Epoch: 3 loss: 0.5791 accuracy: 0.7338 val_loss: 0.4545 val_accuracy: 0.8133
Epoch: 4 loss: 0.5259 accuracy: 0.7639 val_loss: 0.4457 val_accuracy: 0.8200
Epoch: 5 loss: 0.4918 accuracy: 0.7762 val_loss: 0.4500 val_accuracy: 0.7733
Epoch: 6 loss: 0.4917 accuracy: 0.7695 val_loss: 0.4264 val_accuracy: 0.8333
Epoch: 7 loss: 0.4535 accuracy: 0.7929 val_loss: 0.4127 val_accuracy: 0.8400
Epoch: 8 loss: 0.4474 accuracy: 0.7953 val_loss: 0.4156 val_accuracy: 0.8533
Epoch: 9 loss: 0.4155 accuracy: 0.8063 val_loss: 0.4628 val_accuracy: 0.8400
Epoch: 10 loss: 0.4231 accuracy: 0.8033 val_loss: 0.4683 val_accuracy: 0.8333
Epoch: 11 loss: 0.4048 accuracy: 0.8150 val_loss: 0.4488 val_accuracy: 0.8200
Epoch: 12 loss: 0.3723 accuracy: 0.8360 val_loss: 0.4658 val_accuracy: 0.8600
Epoch: 13 loss: 0.3647 accuracy: 0.8337 val_loss: 0.4364 val_accuracy: 0.8400
Epoch: 14 loss: 0.3464 accuracy: 0.8417 val_loss: 0.4399 val_accuracy: 0.8267
Epoch: 15 loss: 0.3486 accuracy: 0.8427 val_loss: 0.4584 val_accuracy: 0.8400
Epoch: 16 loss: 0.3449 accuracy: 0.8447 val_loss: 0.4243 val_accuracy: 0.8333
Epoch: 17 loss: 0.3288 accuracy: 0.8484 val_loss: 0.4218 val_accuracy: 0.8400
Epoch: 18 loss: 0.3384 accuracy: 0.8484 val_loss: 0.4694 val_accuracy: 0.8533
Epoch: 19 loss: 0.3221 accuracy: 0.8534 val_loss: 0.4721 val_accuracy: 0.8333
Epoch: 20 loss: 0.3174 accuracy: 0.8567 val_loss: 0.4703 val_accuracy: 0.8133
Job ended!
