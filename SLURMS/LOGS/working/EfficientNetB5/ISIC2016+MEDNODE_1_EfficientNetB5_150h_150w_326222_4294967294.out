Fri 01 Mar 2024 10:28:03 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'MEDNODE']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB5
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb5 (Functional)  (None, 2048)              28513527  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 29,697,529
Trainable params: 1,182,466
Non-trainable params: 28,515,063
_________________________________________________________________
Fitting ISIC2016+MEDNODE_aug_EfficientNetB5_150h_150w_None model...
model_name: ISIC2016+MEDNODE_aug_EfficientNetB5_150h_150w_None
Epoch: 1 loss: 0.8503 accuracy: 0.6391 val_loss: 0.5107 val_accuracy: 0.7757
Epoch: 2 loss: 0.7006 accuracy: 0.6943 val_loss: 0.4924 val_accuracy: 0.7804
Epoch: 3 loss: 0.6435 accuracy: 0.7124 val_loss: 0.4817 val_accuracy: 0.8084
Epoch: 4 loss: 0.5629 accuracy: 0.7502 val_loss: 0.4955 val_accuracy: 0.7804
Epoch: 5 loss: 0.5399 accuracy: 0.7603 val_loss: 0.4577 val_accuracy: 0.8084
Epoch: 6 loss: 0.5180 accuracy: 0.7756 val_loss: 0.4340 val_accuracy: 0.8131
Epoch: 7 loss: 0.5229 accuracy: 0.7712 val_loss: 0.4577 val_accuracy: 0.8084
Epoch: 8 loss: 0.5008 accuracy: 0.7727 val_loss: 0.4466 val_accuracy: 0.7850
Epoch: 9 loss: 0.4387 accuracy: 0.8126 val_loss: 0.4467 val_accuracy: 0.7944
Epoch: 10 loss: 0.4512 accuracy: 0.8025 val_loss: 0.4461 val_accuracy: 0.7757
Epoch: 11 loss: 0.4468 accuracy: 0.8054 val_loss: 0.4658 val_accuracy: 0.7804
Epoch: 12 loss: 0.4450 accuracy: 0.8054 val_loss: 0.4506 val_accuracy: 0.8084
Epoch: 13 loss: 0.4243 accuracy: 0.8061 val_loss: 0.4557 val_accuracy: 0.7991
Epoch: 14 loss: 0.4157 accuracy: 0.8192 val_loss: 0.4519 val_accuracy: 0.8037
Epoch: 15 loss: 0.4107 accuracy: 0.8214 val_loss: 0.4460 val_accuracy: 0.8271
Epoch: 16 loss: 0.4100 accuracy: 0.8163 val_loss: 0.4348 val_accuracy: 0.8178
Epoch: 17 loss: 0.3622 accuracy: 0.8468 val_loss: 0.4678 val_accuracy: 0.7897
Epoch: 18 loss: 0.3610 accuracy: 0.8497 val_loss: 0.4757 val_accuracy: 0.7897
Epoch: 19 loss: 0.3618 accuracy: 0.8388 val_loss: 0.4545 val_accuracy: 0.8131
Epoch: 20 loss: 0.3556 accuracy: 0.8395 val_loss: 0.4888 val_accuracy: 0.7664
Job ended!
