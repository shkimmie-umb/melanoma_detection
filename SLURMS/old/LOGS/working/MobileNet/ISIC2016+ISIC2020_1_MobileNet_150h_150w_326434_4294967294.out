Fri 01 Mar 2024 05:46:08 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'ISIC2020']
IMG_SIZE: [150, 150]
CLASSIFIER: MobileNet
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
mobilenet_1.00_224 (Function (None, 1024)              3228864   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 3,888,578
Trainable params: 658,178
Non-trainable params: 3,230,400
_________________________________________________________________
Fitting ISIC2016+ISIC2020_aug_MobileNet_150h_150w_None model...
model_name: ISIC2016+ISIC2020_aug_MobileNet_150h_150w_None
Epoch: 1 loss: 0.4529 accuracy: 0.8051 val_loss: 0.0997 val_accuracy: 0.9781
Epoch: 2 loss: 0.3000 accuracy: 0.8690 val_loss: 0.0863 val_accuracy: 0.9793
Epoch: 3 loss: 0.2699 accuracy: 0.8799 val_loss: 0.0847 val_accuracy: 0.9784
Epoch: 4 loss: 0.2549 accuracy: 0.8858 val_loss: 0.0831 val_accuracy: 0.9787
Epoch: 5 loss: 0.2441 accuracy: 0.8917 val_loss: 0.0840 val_accuracy: 0.9787
Epoch: 6 loss: 0.2319 accuracy: 0.8986 val_loss: 0.0816 val_accuracy: 0.9788
Epoch: 7 loss: 0.2251 accuracy: 0.9013 val_loss: 0.0847 val_accuracy: 0.9781
Epoch: 8 loss: 0.2135 accuracy: 0.9074 val_loss: 0.0860 val_accuracy: 0.9778
Epoch: 9 loss: 0.2068 accuracy: 0.9110 val_loss: 0.0859 val_accuracy: 0.9769
Epoch: 10 loss: 0.1946 accuracy: 0.9173 val_loss: 0.0937 val_accuracy: 0.9759
Epoch: 11 loss: 0.1881 accuracy: 0.9186 val_loss: 0.0918 val_accuracy: 0.9772
Epoch: 12 loss: 0.1773 accuracy: 0.9252 val_loss: 0.0970 val_accuracy: 0.9769
Epoch: 13 loss: 0.1684 accuracy: 0.9283 val_loss: 0.0982 val_accuracy: 0.9753
Epoch: 14 loss: 0.1582 accuracy: 0.9328 val_loss: 0.1034 val_accuracy: 0.9746
Epoch: 15 loss: 0.1522 accuracy: 0.9347 val_loss: 0.1145 val_accuracy: 0.9768
Epoch: 16 loss: 0.1427 accuracy: 0.9403 val_loss: 0.1123 val_accuracy: 0.9733
Epoch: 17 loss: 0.1392 accuracy: 0.9415 val_loss: 0.1124 val_accuracy: 0.9750
Epoch: 18 loss: 0.1261 accuracy: 0.9474 val_loss: 0.1221 val_accuracy: 0.9778
Epoch: 19 loss: 0.1224 accuracy: 0.9494 val_loss: 0.1304 val_accuracy: 0.9744
Epoch: 20 loss: 0.1173 accuracy: 0.9509 val_loss: 0.1332 val_accuracy: 0.9691
Job ended!
