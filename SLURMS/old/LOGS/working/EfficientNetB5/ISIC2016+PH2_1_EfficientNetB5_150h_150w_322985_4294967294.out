Tue 27 Feb 2024 02:33:10 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'PH2']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB5
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb5 (Functional)  (None, 2048)              28513527  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 29,697,529
Trainable params: 1,182,466
Non-trainable params: 28,515,063
_________________________________________________________________
Fitting ISIC2016+PH2_aug_EfficientNetB5_150h_150w_None model...
model_name: ISIC2016+PH2_aug_EfficientNetB5_150h_150w_None
Epoch: 1 loss: 0.6961 accuracy: 0.5264 val_loss: 0.6633 val_accuracy: 0.8000
Epoch: 2 loss: 0.6716 accuracy: 0.5909 val_loss: 0.6386 val_accuracy: 0.8000
Epoch: 3 loss: 0.6788 accuracy: 0.5727 val_loss: 0.6232 val_accuracy: 0.8000
Epoch: 4 loss: 0.6773 accuracy: 0.5820 val_loss: 0.6094 val_accuracy: 0.8000
Epoch: 5 loss: 0.6671 accuracy: 0.6088 val_loss: 0.5980 val_accuracy: 0.8000
Epoch: 6 loss: 0.6652 accuracy: 0.6054 val_loss: 0.5936 val_accuracy: 0.8000
Epoch: 7 loss: 0.6598 accuracy: 0.6232 val_loss: 0.5852 val_accuracy: 0.8000
Epoch: 8 loss: 0.6614 accuracy: 0.6156 val_loss: 0.5834 val_accuracy: 0.8000
Epoch: 9 loss: 0.6650 accuracy: 0.6150 val_loss: 0.5907 val_accuracy: 0.8000
Epoch: 10 loss: 0.6560 accuracy: 0.6266 val_loss: 0.5836 val_accuracy: 0.8000
Epoch: 11 loss: 0.6543 accuracy: 0.6273 val_loss: 0.5726 val_accuracy: 0.8000
Epoch: 12 loss: 0.6525 accuracy: 0.6205 val_loss: 0.5668 val_accuracy: 0.8000
Epoch: 13 loss: 0.6515 accuracy: 0.6280 val_loss: 0.5694 val_accuracy: 0.8000
Epoch: 14 loss: 0.6588 accuracy: 0.6136 val_loss: 0.5881 val_accuracy: 0.8000
Epoch: 15 loss: 0.6572 accuracy: 0.6218 val_loss: 0.5904 val_accuracy: 0.8000
Epoch: 16 loss: 0.6503 accuracy: 0.6273 val_loss: 0.6132 val_accuracy: 0.8000
Epoch: 17 loss: 0.6545 accuracy: 0.6239 val_loss: 0.5788 val_accuracy: 0.8000
Epoch: 18 loss: 0.6514 accuracy: 0.6280 val_loss: 0.5299 val_accuracy: 0.8000
Epoch: 19 loss: 0.6575 accuracy: 0.6170 val_loss: 0.5796 val_accuracy: 0.8000
Epoch: 20 loss: 0.6553 accuracy: 0.6287 val_loss: 0.6037 val_accuracy: 0.8000
Job ended!
