Tue 27 Feb 2024 06:48:40 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'KaggleMB']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB1
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb1 (Functional)  (None, 1280)              6575239   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,366,025
Trainable params: 789,250
Non-trainable params: 6,576,775
_________________________________________________________________
Fitting ISIC2016+KaggleMB_aug_EfficientNetB1_150h_150w_None model...
model_name: ISIC2016+KaggleMB_aug_EfficientNetB1_150h_150w_None
Epoch: 1 loss: 0.6966 accuracy: 0.5209 val_loss: 0.7167 val_accuracy: 0.3743
Epoch: 2 loss: 0.6899 accuracy: 0.5373 val_loss: 0.7267 val_accuracy: 0.3743
Epoch: 3 loss: 0.6910 accuracy: 0.5410 val_loss: 0.7260 val_accuracy: 0.3743
Epoch: 4 loss: 0.6889 accuracy: 0.5501 val_loss: 0.7367 val_accuracy: 0.3743
Epoch: 5 loss: 0.6880 accuracy: 0.5546 val_loss: 0.7334 val_accuracy: 0.3743
Epoch: 6 loss: 0.6878 accuracy: 0.5544 val_loss: 0.7370 val_accuracy: 0.3743
Epoch: 7 loss: 0.6878 accuracy: 0.5544 val_loss: 0.7287 val_accuracy: 0.3743
Epoch: 8 loss: 0.6879 accuracy: 0.5550 val_loss: 0.7196 val_accuracy: 0.3743
Epoch: 9 loss: 0.6877 accuracy: 0.5552 val_loss: 0.7287 val_accuracy: 0.3743
Epoch: 10 loss: 0.6872 accuracy: 0.5552 val_loss: 0.7204 val_accuracy: 0.3743
Epoch: 11 loss: 0.6874 accuracy: 0.5557 val_loss: 0.7253 val_accuracy: 0.3743
Epoch: 12 loss: 0.6876 accuracy: 0.5555 val_loss: 0.7215 val_accuracy: 0.3743
Epoch: 13 loss: 0.6871 accuracy: 0.5550 val_loss: 0.7242 val_accuracy: 0.3743
Epoch: 14 loss: 0.6874 accuracy: 0.5548 val_loss: 0.7295 val_accuracy: 0.3743
Epoch: 15 loss: 0.6875 accuracy: 0.5546 val_loss: 0.7268 val_accuracy: 0.3743
Epoch: 16 loss: 0.6870 accuracy: 0.5552 val_loss: 0.7288 val_accuracy: 0.3743
Epoch: 17 loss: 0.6875 accuracy: 0.5555 val_loss: 0.7221 val_accuracy: 0.3743
Epoch: 18 loss: 0.6874 accuracy: 0.5559 val_loss: 0.7291 val_accuracy: 0.3743
Epoch: 19 loss: 0.6871 accuracy: 0.5557 val_loss: 0.7286 val_accuracy: 0.3743
Epoch: 20 loss: 0.6871 accuracy: 0.5552 val_loss: 0.7210 val_accuracy: 0.3743
Job ended!
