Fri 01 Mar 2024 05:34:42 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB3
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb3 (Functional)  (None, 1536)              10783535  
_________________________________________________________________
dense (Dense)                (None, 512)               786944    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 11,705,393
Trainable params: 920,322
Non-trainable params: 10,785,071
_________________________________________________________________
Fitting ISIC2016_aug_EfficientNetB3_150h_150w_None model...
model_name: ISIC2016_aug_EfficientNetB3_150h_150w_None
Epoch: 1 loss: 0.8265 accuracy: 0.6349 val_loss: 0.5058 val_accuracy: 0.7833
Epoch: 2 loss: 0.6600 accuracy: 0.7095 val_loss: 0.5175 val_accuracy: 0.7667
Epoch: 3 loss: 0.5989 accuracy: 0.7216 val_loss: 0.5173 val_accuracy: 0.7667
Epoch: 4 loss: 0.5256 accuracy: 0.7459 val_loss: 0.5098 val_accuracy: 0.7611
Epoch: 5 loss: 0.5084 accuracy: 0.7658 val_loss: 0.4871 val_accuracy: 0.7389
Epoch: 6 loss: 0.4672 accuracy: 0.7780 val_loss: 0.4609 val_accuracy: 0.7889
Epoch: 7 loss: 0.4586 accuracy: 0.7849 val_loss: 0.4796 val_accuracy: 0.7389
Epoch: 8 loss: 0.4226 accuracy: 0.8144 val_loss: 0.4564 val_accuracy: 0.7722
Epoch: 9 loss: 0.4052 accuracy: 0.8213 val_loss: 0.4431 val_accuracy: 0.7833
Epoch: 10 loss: 0.3926 accuracy: 0.8179 val_loss: 0.4366 val_accuracy: 0.7722
Epoch: 11 loss: 0.3614 accuracy: 0.8361 val_loss: 0.4340 val_accuracy: 0.7944
Epoch: 12 loss: 0.3615 accuracy: 0.8526 val_loss: 0.4267 val_accuracy: 0.7778
Epoch: 13 loss: 0.3313 accuracy: 0.8526 val_loss: 0.4376 val_accuracy: 0.7944
Epoch: 14 loss: 0.3182 accuracy: 0.8664 val_loss: 0.4491 val_accuracy: 0.7778
Epoch: 15 loss: 0.3048 accuracy: 0.8604 val_loss: 0.4435 val_accuracy: 0.7722
Epoch: 16 loss: 0.3101 accuracy: 0.8621 val_loss: 0.4358 val_accuracy: 0.7889
Epoch: 17 loss: 0.2955 accuracy: 0.8690 val_loss: 0.4390 val_accuracy: 0.7611
Epoch: 18 loss: 0.2925 accuracy: 0.8803 val_loss: 0.4702 val_accuracy: 0.7667
Epoch: 19 loss: 0.2472 accuracy: 0.9037 val_loss: 0.4792 val_accuracy: 0.7444
Epoch: 20 loss: 0.2538 accuracy: 0.8951 val_loss: 0.4657 val_accuracy: 0.7611
Job ended!
