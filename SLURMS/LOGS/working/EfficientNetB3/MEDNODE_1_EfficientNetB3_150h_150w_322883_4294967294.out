Tue 27 Feb 2024 10:20:34 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['MEDNODE']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB3
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb3 (Functional)  (None, 1536)              10783535  
_________________________________________________________________
dense (Dense)                (None, 512)               786944    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 11,705,393
Trainable params: 920,322
Non-trainable params: 10,785,071
_________________________________________________________________
Fitting MEDNODE_aug_EfficientNetB3_150h_150w_None model...
model_name: MEDNODE_aug_EfficientNetB3_150h_150w_None
Epoch: 1 loss: 0.6932 accuracy: 0.4821 val_loss: 0.6943 val_accuracy: 0.4118
Epoch: 2 loss: 0.6928 accuracy: 0.5045 val_loss: 0.6955 val_accuracy: 0.4118
Epoch: 3 loss: 0.6992 accuracy: 0.4464 val_loss: 0.6966 val_accuracy: 0.4118
Epoch: 4 loss: 0.7063 accuracy: 0.5089 val_loss: 0.6974 val_accuracy: 0.4118
Epoch: 5 loss: 0.7026 accuracy: 0.4911 val_loss: 0.6985 val_accuracy: 0.4118
Epoch: 6 loss: 0.6984 accuracy: 0.5089 val_loss: 0.6997 val_accuracy: 0.4118
Epoch: 7 loss: 0.6873 accuracy: 0.5446 val_loss: 0.7008 val_accuracy: 0.4118
Epoch: 8 loss: 0.7097 accuracy: 0.4598 val_loss: 0.7020 val_accuracy: 0.4118
Epoch: 9 loss: 0.6797 accuracy: 0.5893 val_loss: 0.7030 val_accuracy: 0.4118
Epoch: 10 loss: 0.6937 accuracy: 0.5357 val_loss: 0.7041 val_accuracy: 0.4118
Epoch: 11 loss: 0.6980 accuracy: 0.5089 val_loss: 0.7051 val_accuracy: 0.4118
Epoch: 12 loss: 0.6799 accuracy: 0.5848 val_loss: 0.7063 val_accuracy: 0.4118
Epoch: 13 loss: 0.6871 accuracy: 0.5357 val_loss: 0.7076 val_accuracy: 0.4118
Epoch: 14 loss: 0.6956 accuracy: 0.5312 val_loss: 0.7087 val_accuracy: 0.4118
Epoch: 15 loss: 0.6984 accuracy: 0.5223 val_loss: 0.7095 val_accuracy: 0.4118
Epoch: 16 loss: 0.6872 accuracy: 0.5446 val_loss: 0.7102 val_accuracy: 0.4118
Epoch: 17 loss: 0.6874 accuracy: 0.5312 val_loss: 0.7109 val_accuracy: 0.4118
Epoch: 18 loss: 0.6919 accuracy: 0.5089 val_loss: 0.7113 val_accuracy: 0.4118
Epoch: 19 loss: 0.6884 accuracy: 0.5670 val_loss: 0.7125 val_accuracy: 0.4118
Epoch: 20 loss: 0.6977 accuracy: 0.5357 val_loss: 0.7132 val_accuracy: 0.4118
Job ended!
