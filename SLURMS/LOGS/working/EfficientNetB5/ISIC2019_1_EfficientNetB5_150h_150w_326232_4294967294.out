Fri 01 Mar 2024 10:42:30 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2019']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB5
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb5 (Functional)  (None, 2048)              28513527  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 29,697,529
Trainable params: 1,182,466
Non-trainable params: 28,515,063
_________________________________________________________________
Fitting ISIC2019_aug_EfficientNetB5_150h_150w_None model...
model_name: ISIC2019_aug_EfficientNetB5_150h_150w_None
Epoch: 1 loss: 0.6082 accuracy: 0.7208 val_loss: 0.3689 val_accuracy: 0.8540
Epoch: 2 loss: 0.5201 accuracy: 0.7570 val_loss: 0.3466 val_accuracy: 0.8553
Epoch: 3 loss: 0.4938 accuracy: 0.7669 val_loss: 0.3567 val_accuracy: 0.8439
Epoch: 4 loss: 0.4756 accuracy: 0.7771 val_loss: 0.3286 val_accuracy: 0.8636
Epoch: 5 loss: 0.4647 accuracy: 0.7773 val_loss: 0.3359 val_accuracy: 0.8642
Epoch: 6 loss: 0.4531 accuracy: 0.7882 val_loss: 0.3301 val_accuracy: 0.8670
Epoch: 7 loss: 0.4462 accuracy: 0.7902 val_loss: 0.3312 val_accuracy: 0.8644
Epoch: 8 loss: 0.4422 accuracy: 0.7922 val_loss: 0.3239 val_accuracy: 0.8666
Epoch: 9 loss: 0.4366 accuracy: 0.7934 val_loss: 0.3327 val_accuracy: 0.8646
Epoch: 10 loss: 0.4298 accuracy: 0.7972 val_loss: 0.3249 val_accuracy: 0.8670
Epoch: 11 loss: 0.4247 accuracy: 0.8032 val_loss: 0.3189 val_accuracy: 0.8761
Epoch: 12 loss: 0.4214 accuracy: 0.8040 val_loss: 0.3179 val_accuracy: 0.8699
Epoch: 13 loss: 0.4159 accuracy: 0.8091 val_loss: 0.3246 val_accuracy: 0.8701
Epoch: 14 loss: 0.4124 accuracy: 0.8083 val_loss: 0.3156 val_accuracy: 0.8755
Epoch: 15 loss: 0.4110 accuracy: 0.8095 val_loss: 0.3104 val_accuracy: 0.8759
Epoch: 16 loss: 0.4099 accuracy: 0.8109 val_loss: 0.3203 val_accuracy: 0.8682
Epoch: 17 loss: 0.4061 accuracy: 0.8123 val_loss: 0.3157 val_accuracy: 0.8695
Epoch: 18 loss: 0.4011 accuracy: 0.8138 val_loss: 0.3209 val_accuracy: 0.8656
Epoch: 19 loss: 0.3988 accuracy: 0.8201 val_loss: 0.3160 val_accuracy: 0.8741
Epoch: 20 loss: 0.3951 accuracy: 0.8178 val_loss: 0.3124 val_accuracy: 0.8776
Job ended!
