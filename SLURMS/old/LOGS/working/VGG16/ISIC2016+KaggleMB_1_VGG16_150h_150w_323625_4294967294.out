Wed 28 Feb 2024 10:08:13 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'KaggleMB']
IMG_SIZE: [150, 150]
CLASSIFIER: VGG16
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
vgg16 (Functional)           (None, 512)               14714688  
_________________________________________________________________
dense (Dense)                (None, 512)               262656    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 15,112,258
Trainable params: 396,034
Non-trainable params: 14,716,224
_________________________________________________________________
Fitting ISIC2016+KaggleMB_aug_VGG16_150h_150w_None model...
model_name: ISIC2016+KaggleMB_aug_VGG16_150h_150w_None
Epoch: 1 loss: 0.8390 accuracy: 0.5892 val_loss: 0.6377 val_accuracy: 0.6271
Epoch: 2 loss: 0.7400 accuracy: 0.6107 val_loss: 0.6147 val_accuracy: 0.6511
Epoch: 3 loss: 0.7089 accuracy: 0.6387 val_loss: 0.5893 val_accuracy: 0.6695
Epoch: 4 loss: 0.6879 accuracy: 0.6440 val_loss: 0.5436 val_accuracy: 0.7076
Epoch: 5 loss: 0.6774 accuracy: 0.6480 val_loss: 0.6020 val_accuracy: 0.6780
Epoch: 6 loss: 0.6576 accuracy: 0.6732 val_loss: 0.5096 val_accuracy: 0.7387
Epoch: 7 loss: 0.6509 accuracy: 0.6651 val_loss: 0.5094 val_accuracy: 0.7175
Epoch: 8 loss: 0.6287 accuracy: 0.6781 val_loss: 0.6179 val_accuracy: 0.6483
Epoch: 9 loss: 0.6109 accuracy: 0.6913 val_loss: 0.5513 val_accuracy: 0.6949
Epoch: 10 loss: 0.6033 accuracy: 0.6911 val_loss: 0.5213 val_accuracy: 0.7062
Epoch: 11 loss: 0.6158 accuracy: 0.6766 val_loss: 0.6322 val_accuracy: 0.6568
Epoch: 12 loss: 0.5917 accuracy: 0.6881 val_loss: 0.5380 val_accuracy: 0.6723
Epoch: 13 loss: 0.6008 accuracy: 0.6866 val_loss: 0.7166 val_accuracy: 0.6285
Epoch: 14 loss: 0.5933 accuracy: 0.6856 val_loss: 0.9347 val_accuracy: 0.6003
Epoch: 15 loss: 0.5922 accuracy: 0.6886 val_loss: 0.5037 val_accuracy: 0.7260
Epoch: 16 loss: 0.5810 accuracy: 0.6943 val_loss: 0.5922 val_accuracy: 0.6653
Epoch: 17 loss: 0.5748 accuracy: 0.6971 val_loss: 0.5993 val_accuracy: 0.6314
Epoch: 18 loss: 0.5861 accuracy: 0.6939 val_loss: 0.5397 val_accuracy: 0.7105
Epoch: 19 loss: 0.5617 accuracy: 0.7069 val_loss: 0.6473 val_accuracy: 0.6412
Epoch: 20 loss: 0.5794 accuracy: 0.6948 val_loss: 0.5404 val_accuracy: 0.7105
Job ended!
