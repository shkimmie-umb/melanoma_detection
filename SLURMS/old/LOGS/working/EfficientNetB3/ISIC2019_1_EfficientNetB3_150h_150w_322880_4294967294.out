Tue 27 Feb 2024 10:18:37 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2019']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB3
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb3 (Functional)  (None, 1536)              10783535  
_________________________________________________________________
dense (Dense)                (None, 512)               786944    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 11,705,393
Trainable params: 920,322
Non-trainable params: 10,785,071
_________________________________________________________________
Fitting ISIC2019_aug_EfficientNetB3_150h_150w_None model...
model_name: ISIC2019_aug_EfficientNetB3_150h_150w_None
Epoch: 1 loss: 0.6665 accuracy: 0.6148 val_loss: 0.5433 val_accuracy: 0.8295
Epoch: 2 loss: 0.6603 accuracy: 0.6272 val_loss: 0.5721 val_accuracy: 0.8295
Epoch: 3 loss: 0.6596 accuracy: 0.6271 val_loss: 0.5713 val_accuracy: 0.8295
Epoch: 4 loss: 0.6598 accuracy: 0.6272 val_loss: 0.5420 val_accuracy: 0.8295
Epoch: 5 loss: 0.6589 accuracy: 0.6274 val_loss: 0.5725 val_accuracy: 0.8295
Epoch: 6 loss: 0.6589 accuracy: 0.6272 val_loss: 0.5618 val_accuracy: 0.8295
Epoch: 7 loss: 0.6580 accuracy: 0.6273 val_loss: 0.5643 val_accuracy: 0.8295
Epoch: 8 loss: 0.6579 accuracy: 0.6274 val_loss: 0.5454 val_accuracy: 0.8295
Epoch: 9 loss: 0.6582 accuracy: 0.6273 val_loss: 0.5579 val_accuracy: 0.8295
Epoch: 10 loss: 0.6579 accuracy: 0.6273 val_loss: 0.5398 val_accuracy: 0.8295
Epoch: 11 loss: 0.6573 accuracy: 0.6273 val_loss: 0.5563 val_accuracy: 0.8295
Epoch: 12 loss: 0.6571 accuracy: 0.6272 val_loss: 0.5392 val_accuracy: 0.8295
Epoch: 13 loss: 0.6558 accuracy: 0.6273 val_loss: 0.5526 val_accuracy: 0.8295
Epoch: 14 loss: 0.6562 accuracy: 0.6271 val_loss: 0.5250 val_accuracy: 0.8295
Epoch: 15 loss: 0.6565 accuracy: 0.6272 val_loss: 0.5496 val_accuracy: 0.8295
Epoch: 16 loss: 0.6548 accuracy: 0.6273 val_loss: 0.5280 val_accuracy: 0.8295
Epoch: 17 loss: 0.6548 accuracy: 0.6272 val_loss: 0.5612 val_accuracy: 0.8295
Epoch: 18 loss: 0.6535 accuracy: 0.6270 val_loss: 0.5334 val_accuracy: 0.8295
Epoch: 19 loss: 0.6520 accuracy: 0.6273 val_loss: 0.5008 val_accuracy: 0.8295
Epoch: 20 loss: 0.6511 accuracy: 0.6271 val_loss: 0.6175 val_accuracy: 0.8295
Job ended!
