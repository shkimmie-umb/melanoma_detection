Fri 01 Mar 2024 08:25:49 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'KaggleMB']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB4
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb4 (Functional)  (None, 1792)              17673823  
_________________________________________________________________
dense (Dense)                (None, 512)               918016    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 18,726,753
Trainable params: 1,051,394
Non-trainable params: 17,675,359
_________________________________________________________________
Fitting ISIC2016+KaggleMB_aug_EfficientNetB4_150h_150w_None model...
model_name: ISIC2016+KaggleMB_aug_EfficientNetB4_150h_150w_None
Epoch: 1 loss: 0.6947 accuracy: 0.6877 val_loss: 0.4933 val_accuracy: 0.7514
Epoch: 2 loss: 0.5475 accuracy: 0.7545 val_loss: 0.4442 val_accuracy: 0.7910
Epoch: 3 loss: 0.5261 accuracy: 0.7662 val_loss: 0.4332 val_accuracy: 0.7910
Epoch: 4 loss: 0.4630 accuracy: 0.7942 val_loss: 0.4415 val_accuracy: 0.8164
Epoch: 5 loss: 0.4480 accuracy: 0.7980 val_loss: 0.4681 val_accuracy: 0.8037
Epoch: 6 loss: 0.4381 accuracy: 0.8097 val_loss: 0.4652 val_accuracy: 0.8150
Epoch: 7 loss: 0.4215 accuracy: 0.8110 val_loss: 0.4670 val_accuracy: 0.8107
Epoch: 8 loss: 0.3954 accuracy: 0.8191 val_loss: 0.4583 val_accuracy: 0.8121
Epoch: 9 loss: 0.3811 accuracy: 0.8283 val_loss: 0.4673 val_accuracy: 0.8065
Epoch: 10 loss: 0.3440 accuracy: 0.8492 val_loss: 0.4767 val_accuracy: 0.8051
Epoch: 11 loss: 0.3639 accuracy: 0.8381 val_loss: 0.4688 val_accuracy: 0.8192
Epoch: 12 loss: 0.3490 accuracy: 0.8411 val_loss: 0.4959 val_accuracy: 0.8079
Epoch: 13 loss: 0.3374 accuracy: 0.8520 val_loss: 0.4752 val_accuracy: 0.8164
Epoch: 14 loss: 0.3294 accuracy: 0.8549 val_loss: 0.4930 val_accuracy: 0.8065
Epoch: 15 loss: 0.3320 accuracy: 0.8466 val_loss: 0.5063 val_accuracy: 0.8136
Epoch: 16 loss: 0.3055 accuracy: 0.8667 val_loss: 0.4852 val_accuracy: 0.8093
Epoch: 17 loss: 0.2941 accuracy: 0.8761 val_loss: 0.4850 val_accuracy: 0.8150
Epoch: 18 loss: 0.3025 accuracy: 0.8684 val_loss: 0.4952 val_accuracy: 0.8150
Epoch: 19 loss: 0.2876 accuracy: 0.8703 val_loss: 0.5056 val_accuracy: 0.8107
Epoch: 20 loss: 0.2700 accuracy: 0.8890 val_loss: 0.4818 val_accuracy: 0.8319
Job ended!
