Tue 27 Feb 2024 12:17:54 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2020']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB4
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb4 (Functional)  (None, 1792)              17673823  
_________________________________________________________________
dense (Dense)                (None, 512)               918016    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 18,726,753
Trainable params: 1,051,394
Non-trainable params: 17,675,359
_________________________________________________________________
Fitting ISIC2020_aug_EfficientNetB4_150h_150w_None model...
model_name: ISIC2020_aug_EfficientNetB4_150h_150w_None
Epoch: 1 loss: 0.5052 accuracy: 0.7937 val_loss: 0.2099 val_accuracy: 0.9843
Epoch: 2 loss: 0.4693 accuracy: 0.8115 val_loss: 0.2613 val_accuracy: 0.9843
Epoch: 3 loss: 0.4657 accuracy: 0.8118 val_loss: 0.1902 val_accuracy: 0.9843
Epoch: 4 loss: 0.4647 accuracy: 0.8126 val_loss: 0.1711 val_accuracy: 0.9843
Epoch: 5 loss: 0.4632 accuracy: 0.8134 val_loss: 0.2194 val_accuracy: 0.9840
Epoch: 6 loss: 0.4622 accuracy: 0.8130 val_loss: 0.1523 val_accuracy: 0.9843
Epoch: 7 loss: 0.4594 accuracy: 0.8135 val_loss: 0.2150 val_accuracy: 0.9840
Epoch: 8 loss: 0.4590 accuracy: 0.8141 val_loss: 0.2091 val_accuracy: 0.9840
Epoch: 9 loss: 0.4580 accuracy: 0.8143 val_loss: 0.2007 val_accuracy: 0.9843
Epoch: 10 loss: 0.4567 accuracy: 0.8139 val_loss: 0.2032 val_accuracy: 0.9843
Epoch: 11 loss: 0.4570 accuracy: 0.8141 val_loss: 0.2421 val_accuracy: 0.9825
Epoch: 12 loss: 0.4565 accuracy: 0.8144 val_loss: 0.2398 val_accuracy: 0.9825
Epoch: 13 loss: 0.4560 accuracy: 0.8141 val_loss: 0.1462 val_accuracy: 0.9843
Epoch: 14 loss: 0.4565 accuracy: 0.8138 val_loss: 0.2820 val_accuracy: 0.9822
Epoch: 15 loss: 0.4551 accuracy: 0.8146 val_loss: 0.2688 val_accuracy: 0.9793
Epoch: 16 loss: 0.4552 accuracy: 0.8143 val_loss: 0.2908 val_accuracy: 0.9756
Epoch: 17 loss: 0.4554 accuracy: 0.8145 val_loss: 0.2254 val_accuracy: 0.9837
Epoch: 18 loss: 0.4547 accuracy: 0.8145 val_loss: 0.1761 val_accuracy: 0.9842
Epoch: 19 loss: 0.4533 accuracy: 0.8154 val_loss: 0.1988 val_accuracy: 0.9837
Epoch: 20 loss: 0.4543 accuracy: 0.8147 val_loss: 0.1946 val_accuracy: 0.9840
Job ended!
