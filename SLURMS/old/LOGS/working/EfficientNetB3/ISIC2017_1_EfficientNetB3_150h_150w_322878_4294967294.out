Tue 27 Feb 2024 10:17:21 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2017']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB3
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb3 (Functional)  (None, 1536)              10783535  
_________________________________________________________________
dense (Dense)                (None, 512)               786944    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 11,705,393
Trainable params: 920,322
Non-trainable params: 10,785,071
_________________________________________________________________
Fitting ISIC2017_aug_EfficientNetB3_150h_150w_None model...
model_name: ISIC2017_aug_EfficientNetB3_150h_150w_None
Epoch: 1 loss: 0.6842 accuracy: 0.5564 val_loss: 0.6370 val_accuracy: 0.8000
Epoch: 2 loss: 0.6670 accuracy: 0.6096 val_loss: 0.5991 val_accuracy: 0.8000
Epoch: 3 loss: 0.6589 accuracy: 0.6396 val_loss: 0.5832 val_accuracy: 0.8000
Epoch: 4 loss: 0.6535 accuracy: 0.6436 val_loss: 0.5679 val_accuracy: 0.8000
Epoch: 5 loss: 0.6536 accuracy: 0.6446 val_loss: 0.5662 val_accuracy: 0.8000
Epoch: 6 loss: 0.6496 accuracy: 0.6466 val_loss: 0.5531 val_accuracy: 0.8000
Epoch: 7 loss: 0.6521 accuracy: 0.6456 val_loss: 0.5543 val_accuracy: 0.8000
Epoch: 8 loss: 0.6515 accuracy: 0.6450 val_loss: 0.5672 val_accuracy: 0.8000
Epoch: 9 loss: 0.6519 accuracy: 0.6440 val_loss: 0.5440 val_accuracy: 0.8000
Epoch: 10 loss: 0.6532 accuracy: 0.6443 val_loss: 0.5748 val_accuracy: 0.8000
Epoch: 11 loss: 0.6532 accuracy: 0.6436 val_loss: 0.5683 val_accuracy: 0.8000
Epoch: 12 loss: 0.6515 accuracy: 0.6446 val_loss: 0.5552 val_accuracy: 0.8000
Epoch: 13 loss: 0.6528 accuracy: 0.6443 val_loss: 0.5578 val_accuracy: 0.8000
Epoch: 14 loss: 0.6501 accuracy: 0.6446 val_loss: 0.5624 val_accuracy: 0.8000
Epoch: 15 loss: 0.6511 accuracy: 0.6456 val_loss: 0.5628 val_accuracy: 0.8000
Epoch: 16 loss: 0.6518 accuracy: 0.6453 val_loss: 0.5619 val_accuracy: 0.8000
Epoch: 17 loss: 0.6505 accuracy: 0.6450 val_loss: 0.5596 val_accuracy: 0.8000
Epoch: 18 loss: 0.6497 accuracy: 0.6470 val_loss: 0.5568 val_accuracy: 0.8000
Epoch: 19 loss: 0.6510 accuracy: 0.6443 val_loss: 0.5562 val_accuracy: 0.8000
Epoch: 20 loss: 0.6517 accuracy: 0.6443 val_loss: 0.5540 val_accuracy: 0.8000
Job ended!
