Tue 27 Feb 2024 12:07:20 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'MEDNODE']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB4
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb4 (Functional)  (None, 1792)              17673823  
_________________________________________________________________
dense (Dense)                (None, 512)               918016    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 18,726,753
Trainable params: 1,051,394
Non-trainable params: 17,675,359
_________________________________________________________________
Fitting ISIC2016+MEDNODE_aug_EfficientNetB4_150h_150w_None model...
model_name: ISIC2016+MEDNODE_aug_EfficientNetB4_150h_150w_None
Epoch: 1 loss: 0.6965 accuracy: 0.5105 val_loss: 0.6778 val_accuracy: 0.7664
Epoch: 2 loss: 0.6976 accuracy: 0.5134 val_loss: 0.6690 val_accuracy: 0.7664
Epoch: 3 loss: 0.6902 accuracy: 0.5294 val_loss: 0.6587 val_accuracy: 0.7664
Epoch: 4 loss: 0.6876 accuracy: 0.5541 val_loss: 0.6517 val_accuracy: 0.7664
Epoch: 5 loss: 0.6852 accuracy: 0.5650 val_loss: 0.6425 val_accuracy: 0.7664
Epoch: 6 loss: 0.6853 accuracy: 0.5679 val_loss: 0.6364 val_accuracy: 0.7664
Epoch: 7 loss: 0.6833 accuracy: 0.5752 val_loss: 0.6314 val_accuracy: 0.7664
Epoch: 8 loss: 0.6806 accuracy: 0.5846 val_loss: 0.6277 val_accuracy: 0.7664
Epoch: 9 loss: 0.6790 accuracy: 0.5853 val_loss: 0.6243 val_accuracy: 0.7664
Epoch: 10 loss: 0.6786 accuracy: 0.5868 val_loss: 0.6225 val_accuracy: 0.7664
Epoch: 11 loss: 0.6784 accuracy: 0.5904 val_loss: 0.6226 val_accuracy: 0.7664
Epoch: 12 loss: 0.6785 accuracy: 0.5875 val_loss: 0.6256 val_accuracy: 0.7664
Epoch: 13 loss: 0.6780 accuracy: 0.5824 val_loss: 0.6305 val_accuracy: 0.7664
Epoch: 14 loss: 0.6757 accuracy: 0.5890 val_loss: 0.6177 val_accuracy: 0.7664
Epoch: 15 loss: 0.6773 accuracy: 0.5832 val_loss: 0.6218 val_accuracy: 0.7664
Epoch: 16 loss: 0.6797 accuracy: 0.5839 val_loss: 0.6319 val_accuracy: 0.7664
Epoch: 17 loss: 0.6758 accuracy: 0.5839 val_loss: 0.6326 val_accuracy: 0.7664
Epoch: 18 loss: 0.6767 accuracy: 0.5875 val_loss: 0.6105 val_accuracy: 0.7664
Epoch: 19 loss: 0.6784 accuracy: 0.5853 val_loss: 0.6195 val_accuracy: 0.7664
Epoch: 20 loss: 0.6756 accuracy: 0.5839 val_loss: 0.6063 val_accuracy: 0.7664
Job ended!
