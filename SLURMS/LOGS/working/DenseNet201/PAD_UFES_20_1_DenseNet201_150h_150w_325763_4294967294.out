Thu 29 Feb 2024 05:35:40 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['PAD_UFES_20']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet201
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet201 (Functional)     (None, 1920)              18321984  
_________________________________________________________________
dense (Dense)                (None, 512)               983552    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 19,440,450
Trainable params: 1,116,930
Non-trainable params: 18,323,520
_________________________________________________________________
Fitting PAD_UFES_20_aug_DenseNet201_150h_150w_None model...
model_name: PAD_UFES_20_aug_DenseNet201_150h_150w_None
Epoch: 1 loss: 0.7637 accuracy: 0.6285 val_loss: 0.2767 val_accuracy: 0.9370
Epoch: 2 loss: 0.5503 accuracy: 0.7497 val_loss: 0.2584 val_accuracy: 0.9348
Epoch: 3 loss: 0.4475 accuracy: 0.8113 val_loss: 0.2308 val_accuracy: 0.9478
Epoch: 4 loss: 0.3638 accuracy: 0.8495 val_loss: 0.1747 val_accuracy: 0.9739
Epoch: 5 loss: 0.3166 accuracy: 0.8752 val_loss: 0.1620 val_accuracy: 0.9609
Epoch: 6 loss: 0.2507 accuracy: 0.9096 val_loss: 0.1648 val_accuracy: 0.9587
Epoch: 7 loss: 0.2395 accuracy: 0.9166 val_loss: 0.1859 val_accuracy: 0.9500
Epoch: 8 loss: 0.2100 accuracy: 0.9322 val_loss: 0.1190 val_accuracy: 0.9717
Epoch: 9 loss: 0.1655 accuracy: 0.9478 val_loss: 0.0870 val_accuracy: 0.9739
Epoch: 10 loss: 0.1552 accuracy: 0.9513 val_loss: 0.1033 val_accuracy: 0.9739
Epoch: 11 loss: 0.1352 accuracy: 0.9575 val_loss: 0.0900 val_accuracy: 0.9783
Epoch: 12 loss: 0.1190 accuracy: 0.9657 val_loss: 0.0902 val_accuracy: 0.9804
Epoch: 13 loss: 0.0993 accuracy: 0.9712 val_loss: 0.0865 val_accuracy: 0.9826
Epoch: 14 loss: 0.0938 accuracy: 0.9750 val_loss: 0.0859 val_accuracy: 0.9717
Epoch: 15 loss: 0.0838 accuracy: 0.9739 val_loss: 0.0870 val_accuracy: 0.9739
Epoch: 16 loss: 0.0791 accuracy: 0.9813 val_loss: 0.0798 val_accuracy: 0.9783
Epoch: 17 loss: 0.0695 accuracy: 0.9828 val_loss: 0.0871 val_accuracy: 0.9804
Epoch: 18 loss: 0.0651 accuracy: 0.9844 val_loss: 0.0745 val_accuracy: 0.9826
Epoch: 19 loss: 0.0578 accuracy: 0.9875 val_loss: 0.0785 val_accuracy: 0.9826
Epoch: 20 loss: 0.0492 accuracy: 0.9860 val_loss: 0.0764 val_accuracy: 0.9870
Job ended!
