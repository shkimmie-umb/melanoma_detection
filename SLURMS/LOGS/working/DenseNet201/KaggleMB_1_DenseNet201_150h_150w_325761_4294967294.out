Thu 29 Feb 2024 05:32:05 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['KaggleMB']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet201
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet201 (Functional)     (None, 1920)              18321984  
_________________________________________________________________
dense (Dense)                (None, 512)               983552    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 19,440,450
Trainable params: 1,116,930
Non-trainable params: 18,323,520
_________________________________________________________________
Fitting KaggleMB_aug_DenseNet201_150h_150w_None model...
model_name: KaggleMB_aug_DenseNet201_150h_150w_None
Epoch: 1 loss: 0.6111 accuracy: 0.7254 val_loss: 0.3657 val_accuracy: 0.8428
Epoch: 2 loss: 0.4002 accuracy: 0.8324 val_loss: 0.3500 val_accuracy: 0.8333
Epoch: 3 loss: 0.3506 accuracy: 0.8598 val_loss: 0.3214 val_accuracy: 0.8523
Epoch: 4 loss: 0.3090 accuracy: 0.8719 val_loss: 0.3132 val_accuracy: 0.8504
Epoch: 5 loss: 0.2629 accuracy: 0.8958 val_loss: 0.2988 val_accuracy: 0.8712
Epoch: 6 loss: 0.2271 accuracy: 0.9067 val_loss: 0.3231 val_accuracy: 0.8617
Epoch: 7 loss: 0.2077 accuracy: 0.9146 val_loss: 0.3002 val_accuracy: 0.8693
Epoch: 8 loss: 0.1796 accuracy: 0.9241 val_loss: 0.2926 val_accuracy: 0.8674
Epoch: 9 loss: 0.1802 accuracy: 0.9272 val_loss: 0.3081 val_accuracy: 0.8731
Epoch: 10 loss: 0.1590 accuracy: 0.9335 val_loss: 0.2925 val_accuracy: 0.8807
Epoch: 11 loss: 0.1517 accuracy: 0.9392 val_loss: 0.2960 val_accuracy: 0.8712
Epoch: 12 loss: 0.1326 accuracy: 0.9486 val_loss: 0.3100 val_accuracy: 0.8655
Epoch: 13 loss: 0.1222 accuracy: 0.9532 val_loss: 0.3282 val_accuracy: 0.8712
Epoch: 14 loss: 0.1090 accuracy: 0.9566 val_loss: 0.3133 val_accuracy: 0.8693
Epoch: 15 loss: 0.1089 accuracy: 0.9600 val_loss: 0.3107 val_accuracy: 0.8750
Epoch: 16 loss: 0.0970 accuracy: 0.9617 val_loss: 0.2906 val_accuracy: 0.8769
Epoch: 17 loss: 0.0904 accuracy: 0.9655 val_loss: 0.3216 val_accuracy: 0.8731
Epoch: 18 loss: 0.0673 accuracy: 0.9760 val_loss: 0.3008 val_accuracy: 0.8807
Epoch: 19 loss: 0.0849 accuracy: 0.9680 val_loss: 0.3229 val_accuracy: 0.8750
Epoch: 20 loss: 0.0665 accuracy: 0.9783 val_loss: 0.3544 val_accuracy: 0.8731
Job ended!
