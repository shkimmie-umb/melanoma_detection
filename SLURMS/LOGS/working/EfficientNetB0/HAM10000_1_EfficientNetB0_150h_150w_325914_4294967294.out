Fri 01 Mar 2024 01:23:24 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['HAM10000']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB0
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb0 (Functional)  (None, 1280)              4049571   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 4,840,357
Trainable params: 789,250
Non-trainable params: 4,051,107
_________________________________________________________________
Fitting HAM10000_aug_EfficientNetB0_150h_150w_None model...
model_name: HAM10000_aug_EfficientNetB0_150h_150w_None
Epoch: 1 loss: 0.6328 accuracy: 0.7139 val_loss: 0.2149 val_accuracy: 0.9513
Epoch: 2 loss: 0.4846 accuracy: 0.7827 val_loss: 0.1819 val_accuracy: 0.9411
Epoch: 3 loss: 0.4427 accuracy: 0.8040 val_loss: 0.1458 val_accuracy: 0.9558
Epoch: 4 loss: 0.4117 accuracy: 0.8210 val_loss: 0.1386 val_accuracy: 0.9570
Epoch: 5 loss: 0.4071 accuracy: 0.8216 val_loss: 0.1222 val_accuracy: 0.9570
Epoch: 6 loss: 0.3909 accuracy: 0.8289 val_loss: 0.1550 val_accuracy: 0.9490
Epoch: 7 loss: 0.3699 accuracy: 0.8374 val_loss: 0.1268 val_accuracy: 0.9581
Epoch: 8 loss: 0.3536 accuracy: 0.8444 val_loss: 0.1352 val_accuracy: 0.9524
Epoch: 9 loss: 0.3539 accuracy: 0.8418 val_loss: 0.1630 val_accuracy: 0.9400
Epoch: 10 loss: 0.3409 accuracy: 0.8489 val_loss: 0.1254 val_accuracy: 0.9558
Epoch: 11 loss: 0.3304 accuracy: 0.8577 val_loss: 0.1170 val_accuracy: 0.9604
Epoch: 12 loss: 0.3241 accuracy: 0.8612 val_loss: 0.1157 val_accuracy: 0.9638
Epoch: 13 loss: 0.3115 accuracy: 0.8658 val_loss: 0.1222 val_accuracy: 0.9581
Epoch: 14 loss: 0.3084 accuracy: 0.8682 val_loss: 0.1209 val_accuracy: 0.9615
Epoch: 15 loss: 0.3070 accuracy: 0.8637 val_loss: 0.1353 val_accuracy: 0.9468
Epoch: 16 loss: 0.2923 accuracy: 0.8754 val_loss: 0.1289 val_accuracy: 0.9558
Epoch: 17 loss: 0.2898 accuracy: 0.8728 val_loss: 0.1249 val_accuracy: 0.9570
Epoch: 18 loss: 0.2859 accuracy: 0.8790 val_loss: 0.1281 val_accuracy: 0.9513
Epoch: 19 loss: 0.2761 accuracy: 0.8822 val_loss: 0.1284 val_accuracy: 0.9547
Epoch: 20 loss: 0.2703 accuracy: 0.8849 val_loss: 0.1217 val_accuracy: 0.9581
Job ended!
