Fri 01 Mar 2024 12:36:54 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2019']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet169
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet169 (Functional)     (None, 1664)              12642880  
_________________________________________________________________
dense (Dense)                (None, 512)               852480    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 13,630,274
Trainable params: 985,858
Non-trainable params: 12,644,416
_________________________________________________________________
Fitting ISIC2019_aug_DenseNet169_150h_150w_None model...
model_name: ISIC2019_aug_DenseNet169_150h_150w_None
Epoch: 1 loss: 0.6084 accuracy: 0.7266 val_loss: 0.3629 val_accuracy: 0.8514
Epoch: 2 loss: 0.5002 accuracy: 0.7708 val_loss: 0.3522 val_accuracy: 0.8583
Epoch: 3 loss: 0.4665 accuracy: 0.7855 val_loss: 0.3365 val_accuracy: 0.8668
Epoch: 4 loss: 0.4450 accuracy: 0.7951 val_loss: 0.3256 val_accuracy: 0.8658
Epoch: 5 loss: 0.4265 accuracy: 0.8045 val_loss: 0.3183 val_accuracy: 0.8692
Epoch: 6 loss: 0.4082 accuracy: 0.8139 val_loss: 0.3286 val_accuracy: 0.8628
Epoch: 7 loss: 0.3965 accuracy: 0.8180 val_loss: 0.3276 val_accuracy: 0.8656
Epoch: 8 loss: 0.3846 accuracy: 0.8259 val_loss: 0.3147 val_accuracy: 0.8741
Epoch: 9 loss: 0.3740 accuracy: 0.8327 val_loss: 0.3140 val_accuracy: 0.8723
Epoch: 10 loss: 0.3618 accuracy: 0.8370 val_loss: 0.3159 val_accuracy: 0.8774
Epoch: 11 loss: 0.3501 accuracy: 0.8432 val_loss: 0.3141 val_accuracy: 0.8757
Epoch: 12 loss: 0.3397 accuracy: 0.8490 val_loss: 0.3111 val_accuracy: 0.8747
Epoch: 13 loss: 0.3331 accuracy: 0.8505 val_loss: 0.3147 val_accuracy: 0.8737
Epoch: 14 loss: 0.3188 accuracy: 0.8609 val_loss: 0.3194 val_accuracy: 0.8723
Epoch: 15 loss: 0.3105 accuracy: 0.8626 val_loss: 0.3205 val_accuracy: 0.8707
Epoch: 16 loss: 0.3020 accuracy: 0.8685 val_loss: 0.3168 val_accuracy: 0.8745
Epoch: 17 loss: 0.2873 accuracy: 0.8738 val_loss: 0.3465 val_accuracy: 0.8555
Epoch: 18 loss: 0.2777 accuracy: 0.8793 val_loss: 0.3289 val_accuracy: 0.8654
Epoch: 19 loss: 0.2755 accuracy: 0.8793 val_loss: 0.3321 val_accuracy: 0.8640
Epoch: 20 loss: 0.2667 accuracy: 0.8855 val_loss: 0.3301 val_accuracy: 0.8668
Job ended!
