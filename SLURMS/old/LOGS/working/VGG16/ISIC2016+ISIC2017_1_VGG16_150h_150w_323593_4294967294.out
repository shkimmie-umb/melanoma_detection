Wed 28 Feb 2024 09:31:07 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'ISIC2017']
IMG_SIZE: [150, 150]
CLASSIFIER: VGG16
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
vgg16 (Functional)           (None, 512)               14714688  
_________________________________________________________________
dense (Dense)                (None, 512)               262656    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 15,112,258
Trainable params: 396,034
Non-trainable params: 14,716,224
_________________________________________________________________
Fitting ISIC2016+ISIC2017_aug_VGG16_150h_150w_None model...
model_name: ISIC2016+ISIC2017_aug_VGG16_150h_150w_None
Epoch: 1 loss: 0.9128 accuracy: 0.5640 val_loss: 0.6317 val_accuracy: 0.8000
Epoch: 2 loss: 0.8082 accuracy: 0.5946 val_loss: 0.5935 val_accuracy: 0.8030
Epoch: 3 loss: 0.7412 accuracy: 0.6253 val_loss: 0.5589 val_accuracy: 0.7970
Epoch: 4 loss: 0.7306 accuracy: 0.6336 val_loss: 0.5816 val_accuracy: 0.7303
Epoch: 5 loss: 0.7075 accuracy: 0.6487 val_loss: 0.5141 val_accuracy: 0.7848
Epoch: 6 loss: 0.7069 accuracy: 0.6492 val_loss: 0.5306 val_accuracy: 0.7848
Epoch: 7 loss: 0.6897 accuracy: 0.6616 val_loss: 0.4874 val_accuracy: 0.7909
Epoch: 8 loss: 0.6884 accuracy: 0.6602 val_loss: 0.5631 val_accuracy: 0.6939
Epoch: 9 loss: 0.6681 accuracy: 0.6729 val_loss: 0.4981 val_accuracy: 0.7939
Epoch: 10 loss: 0.6651 accuracy: 0.6671 val_loss: 0.6696 val_accuracy: 0.6030
Epoch: 11 loss: 0.6719 accuracy: 0.6655 val_loss: 0.4762 val_accuracy: 0.7848
Epoch: 12 loss: 0.6668 accuracy: 0.6676 val_loss: 0.4586 val_accuracy: 0.8091
Epoch: 13 loss: 0.6490 accuracy: 0.6681 val_loss: 0.5317 val_accuracy: 0.7545
Epoch: 14 loss: 0.6444 accuracy: 0.6755 val_loss: 0.6983 val_accuracy: 0.5758
Epoch: 15 loss: 0.6412 accuracy: 0.6896 val_loss: 0.5735 val_accuracy: 0.7212
Epoch: 16 loss: 0.6430 accuracy: 0.6832 val_loss: 0.4687 val_accuracy: 0.8030
Epoch: 17 loss: 0.6339 accuracy: 0.6927 val_loss: 0.5056 val_accuracy: 0.7818
Epoch: 18 loss: 0.6283 accuracy: 0.6817 val_loss: 0.4699 val_accuracy: 0.8000
Epoch: 19 loss: 0.6217 accuracy: 0.6892 val_loss: 0.4788 val_accuracy: 0.7970
Epoch: 20 loss: 0.6126 accuracy: 0.6956 val_loss: 0.5266 val_accuracy: 0.7606
Job ended!
