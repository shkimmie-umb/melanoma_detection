Fri 01 Mar 2024 08:00:03 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'ISIC2020', 'PH2']
IMG_SIZE: [150, 150]
CLASSIFIER: ResNet152
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
resnet152 (Functional)       (None, 2048)              58370944  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 59,554,946
Trainable params: 1,182,466
Non-trainable params: 58,372,480
_________________________________________________________________
Fitting ISIC2016+ISIC2020+PH2_aug_ResNet152_150h_150w_None model...
model_name: ISIC2016+ISIC2020+PH2_aug_ResNet152_150h_150w_None
Epoch: 1 loss: 0.8184 accuracy: 0.6548 val_loss: 0.5983 val_accuracy: 0.8000
Epoch: 2 loss: 0.6221 accuracy: 0.7311 val_loss: 0.4979 val_accuracy: 0.8000
Epoch: 3 loss: 0.5172 accuracy: 0.7858 val_loss: 0.4679 val_accuracy: 0.7778
Epoch: 4 loss: 0.4617 accuracy: 0.8023 val_loss: 0.4780 val_accuracy: 0.7833
Epoch: 5 loss: 0.4283 accuracy: 0.8083 val_loss: 0.4616 val_accuracy: 0.7944
Epoch: 6 loss: 0.3463 accuracy: 0.8569 val_loss: 0.4871 val_accuracy: 0.7833
Epoch: 7 loss: 0.3429 accuracy: 0.8526 val_loss: 0.4565 val_accuracy: 0.8222
Epoch: 8 loss: 0.3069 accuracy: 0.8664 val_loss: 0.4833 val_accuracy: 0.8222
Epoch: 9 loss: 0.2910 accuracy: 0.8716 val_loss: 0.4852 val_accuracy: 0.8167
Epoch: 10 loss: 0.2590 accuracy: 0.8864 val_loss: 0.5438 val_accuracy: 0.7889
Epoch: 11 loss: 0.2394 accuracy: 0.9133 val_loss: 0.5146 val_accuracy: 0.8000
Epoch: 12 loss: 0.2035 accuracy: 0.9202 val_loss: 0.5300 val_accuracy: 0.8111
Epoch: 13 loss: 0.1988 accuracy: 0.9185 val_loss: 0.5103 val_accuracy: 0.8278
Epoch: 14 loss: 0.1907 accuracy: 0.9237 val_loss: 0.5148 val_accuracy: 0.8278
Epoch: 15 loss: 0.1976 accuracy: 0.9228 val_loss: 0.5049 val_accuracy: 0.8167
Epoch: 16 loss: 0.1754 accuracy: 0.9254 val_loss: 0.5587 val_accuracy: 0.7722
Epoch: 17 loss: 0.1556 accuracy: 0.9410 val_loss: 0.5460 val_accuracy: 0.8333
Epoch: 18 loss: 0.1519 accuracy: 0.9358 val_loss: 0.5357 val_accuracy: 0.8056
Epoch: 19 loss: 0.1247 accuracy: 0.9566 val_loss: 0.5691 val_accuracy: 0.8000
Epoch: 20 loss: 0.1111 accuracy: 0.9644 val_loss: 0.5561 val_accuracy: 0.8167
Job ended!
