Fri 01 Mar 2024 03:44:09 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2019']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB7
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb7 (Functional)  (None, 2560)              64097687  
_________________________________________________________________
dense (Dense)                (None, 512)               1311232   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 65,543,833
Trainable params: 1,444,610
Non-trainable params: 64,099,223
_________________________________________________________________
Fitting ISIC2019_aug_EfficientNetB7_150h_150w_None model...
model_name: ISIC2019_aug_EfficientNetB7_150h_150w_None
Epoch: 1 loss: 0.6121 accuracy: 0.7191 val_loss: 0.3624 val_accuracy: 0.8593
Epoch: 2 loss: 0.5258 accuracy: 0.7558 val_loss: 0.3452 val_accuracy: 0.8617
Epoch: 3 loss: 0.5036 accuracy: 0.7640 val_loss: 0.3382 val_accuracy: 0.8646
Epoch: 4 loss: 0.4874 accuracy: 0.7710 val_loss: 0.3448 val_accuracy: 0.8611
Epoch: 5 loss: 0.4727 accuracy: 0.7740 val_loss: 0.3292 val_accuracy: 0.8676
Epoch: 6 loss: 0.4643 accuracy: 0.7814 val_loss: 0.3240 val_accuracy: 0.8686
Epoch: 7 loss: 0.4540 accuracy: 0.7881 val_loss: 0.3592 val_accuracy: 0.8516
Epoch: 8 loss: 0.4481 accuracy: 0.7884 val_loss: 0.3261 val_accuracy: 0.8670
Epoch: 9 loss: 0.4404 accuracy: 0.7958 val_loss: 0.3223 val_accuracy: 0.8701
Epoch: 10 loss: 0.4342 accuracy: 0.8000 val_loss: 0.3181 val_accuracy: 0.8713
Epoch: 11 loss: 0.4280 accuracy: 0.8014 val_loss: 0.3240 val_accuracy: 0.8694
Epoch: 12 loss: 0.4270 accuracy: 0.8020 val_loss: 0.3156 val_accuracy: 0.8733
Epoch: 13 loss: 0.4209 accuracy: 0.8047 val_loss: 0.3142 val_accuracy: 0.8747
Epoch: 14 loss: 0.4200 accuracy: 0.8065 val_loss: 0.3252 val_accuracy: 0.8694
Epoch: 15 loss: 0.4177 accuracy: 0.8045 val_loss: 0.3129 val_accuracy: 0.8733
Epoch: 16 loss: 0.4141 accuracy: 0.8089 val_loss: 0.3123 val_accuracy: 0.8731
Epoch: 17 loss: 0.4115 accuracy: 0.8097 val_loss: 0.3160 val_accuracy: 0.8721
Epoch: 18 loss: 0.4090 accuracy: 0.8085 val_loss: 0.3149 val_accuracy: 0.8727
Epoch: 19 loss: 0.4055 accuracy: 0.8134 val_loss: 0.3092 val_accuracy: 0.8757
Epoch: 20 loss: 0.3976 accuracy: 0.8141 val_loss: 0.3080 val_accuracy: 0.8761
Job ended!
