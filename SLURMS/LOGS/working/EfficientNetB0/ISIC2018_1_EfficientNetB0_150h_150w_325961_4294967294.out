Fri 01 Mar 2024 02:22:32 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2018']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB0
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb0 (Functional)  (None, 1280)              4049571   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 4,840,357
Trainable params: 789,250
Non-trainable params: 4,051,107
_________________________________________________________________
Fitting ISIC2018_aug_EfficientNetB0_150h_150w_None model...
model_name: ISIC2018_aug_EfficientNetB0_150h_150w_None
Epoch: 1 loss: 0.6144 accuracy: 0.7327 val_loss: 0.2682 val_accuracy: 0.9067
Epoch: 2 loss: 0.4643 accuracy: 0.8021 val_loss: 0.2352 val_accuracy: 0.9119
Epoch: 3 loss: 0.4182 accuracy: 0.8213 val_loss: 0.2311 val_accuracy: 0.8808
Epoch: 4 loss: 0.3880 accuracy: 0.8327 val_loss: 0.2264 val_accuracy: 0.9016
Epoch: 5 loss: 0.3761 accuracy: 0.8360 val_loss: 0.2188 val_accuracy: 0.9067
Epoch: 6 loss: 0.3678 accuracy: 0.8389 val_loss: 0.2078 val_accuracy: 0.8860
Epoch: 7 loss: 0.3443 accuracy: 0.8506 val_loss: 0.2475 val_accuracy: 0.8860
Epoch: 8 loss: 0.3355 accuracy: 0.8578 val_loss: 0.2110 val_accuracy: 0.8912
Epoch: 9 loss: 0.3293 accuracy: 0.8573 val_loss: 0.2066 val_accuracy: 0.9119
Epoch: 10 loss: 0.3249 accuracy: 0.8586 val_loss: 0.2007 val_accuracy: 0.9119
Epoch: 11 loss: 0.3161 accuracy: 0.8651 val_loss: 0.1995 val_accuracy: 0.9016
Epoch: 12 loss: 0.3064 accuracy: 0.8676 val_loss: 0.2143 val_accuracy: 0.9223
Epoch: 13 loss: 0.3029 accuracy: 0.8662 val_loss: 0.2100 val_accuracy: 0.9067
Epoch: 14 loss: 0.2926 accuracy: 0.8738 val_loss: 0.1908 val_accuracy: 0.9275
Epoch: 15 loss: 0.2894 accuracy: 0.8787 val_loss: 0.1895 val_accuracy: 0.9119
Epoch: 16 loss: 0.2783 accuracy: 0.8812 val_loss: 0.2124 val_accuracy: 0.9171
Epoch: 17 loss: 0.2804 accuracy: 0.8790 val_loss: 0.2005 val_accuracy: 0.9275
Epoch: 18 loss: 0.2720 accuracy: 0.8848 val_loss: 0.2010 val_accuracy: 0.9067
Epoch: 19 loss: 0.2608 accuracy: 0.8891 val_loss: 0.2005 val_accuracy: 0.9171
Epoch: 20 loss: 0.2622 accuracy: 0.8883 val_loss: 0.2033 val_accuracy: 0.9223
Job ended!
