Fri 03 May 2024 10:20:53 PM EDT
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', '_7_point_criteria', 'PAD_UFES_20', 'MEDNODE']
IMG_SIZE: [384, 384]
CLASSIFIER: DenseNet201
JOB_INDEX: None
Start training augmented images
Combining...
Combining 1th db out of 4 dbs
Combining 2th db out of 4 dbs
Combining 3th db out of 4 dbs
Combining 4th db out of 4 dbs
Stacking data
Combining complete
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet201 (Functional)     (None, 1920)              18321984  
_________________________________________________________________
dense (Dense)                (None, 512)               983552    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 19,440,450
Trainable params: 1,116,930
Non-trainable params: 18,323,520
_________________________________________________________________
Fitting ISIC2016+_7_point_criteria+PAD_UFES_20+MEDNODE_aug_DenseNet201_384h_384w_None model...
model_name: ISIC2016+_7_point_criteria+PAD_UFES_20+MEDNODE_aug_DenseNet201_384h_384w_None
Epoch: 1 loss: 1.1970 accuracy: 0.6879 val_loss: 1.1160 val_accuracy: 0.6534
Epoch: 2 loss: 0.9171 accuracy: 0.8027 val_loss: 1.1410 val_accuracy: 0.5895
Epoch: 3 loss: 0.7932 accuracy: 0.8496 val_loss: 0.9743 val_accuracy: 0.7161
Epoch: 4 loss: 0.7049 accuracy: 0.8809 val_loss: 0.8793 val_accuracy: 0.7822
Epoch: 5 loss: 0.6413 accuracy: 0.9078 val_loss: 0.7995 val_accuracy: 0.8119
Epoch: 6 loss: 0.5938 accuracy: 0.9171 val_loss: 0.7607 val_accuracy: 0.8198
Epoch: 7 loss: 0.5439 accuracy: 0.9351 val_loss: 0.7606 val_accuracy: 0.8278
Epoch: 8 loss: 0.5207 accuracy: 0.9418 val_loss: 0.7180 val_accuracy: 0.8461
Epoch: 9 loss: 0.5031 accuracy: 0.9453 val_loss: 0.6946 val_accuracy: 0.8597
Epoch: 10 loss: 0.4734 accuracy: 0.9557 val_loss: 0.6971 val_accuracy: 0.8540
Epoch: 11 loss: 0.4613 accuracy: 0.9568 val_loss: 0.6979 val_accuracy: 0.8483
Epoch: 12 loss: 0.4330 accuracy: 0.9694 val_loss: 0.6951 val_accuracy: 0.8700
Epoch: 13 loss: 0.4296 accuracy: 0.9683 val_loss: 0.6865 val_accuracy: 0.8666
Epoch: 14 loss: 0.4138 accuracy: 0.9729 val_loss: 0.7012 val_accuracy: 0.8677
Epoch: 15 loss: 0.4014 accuracy: 0.9731 val_loss: 0.6912 val_accuracy: 0.8540
Epoch: 16 loss: 0.3909 accuracy: 0.9774 val_loss: 0.7255 val_accuracy: 0.8495
Epoch: 17 loss: 0.3826 accuracy: 0.9787 val_loss: 0.6887 val_accuracy: 0.8666
Epoch: 18 loss: 0.3696 accuracy: 0.9835 val_loss: 0.7000 val_accuracy: 0.8655

Epoch 00018: ReduceLROnPlateau reducing learning rate to 7.999999797903001e-05.
Epoch: 19 loss: 0.3635 accuracy: 0.9826 val_loss: 0.6912 val_accuracy: 0.8746
Epoch: 20 loss: 0.3545 accuracy: 0.9855 val_loss: 0.7110 val_accuracy: 0.8666
Epoch: 21 loss: 0.3489 accuracy: 0.9878 val_loss: 0.7010 val_accuracy: 0.8666
Epoch: 22 loss: 0.3411 accuracy: 0.9887 val_loss: 0.7097 val_accuracy: 0.8620
Epoch: 23 loss: 0.3366 accuracy: 0.9898 val_loss: 0.6993 val_accuracy: 0.8689

Epoch 00023: ReduceLROnPlateau reducing learning rate to 6.399999838322402e-05.
End of augmented training
Finish
Job ended!
