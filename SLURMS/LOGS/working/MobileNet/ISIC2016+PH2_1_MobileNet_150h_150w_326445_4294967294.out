Fri 01 Mar 2024 05:50:59 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'PH2']
IMG_SIZE: [150, 150]
CLASSIFIER: MobileNet
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
mobilenet_1.00_224 (Function (None, 1024)              3228864   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 3,888,578
Trainable params: 658,178
Non-trainable params: 3,230,400
_________________________________________________________________
Fitting ISIC2016+PH2_aug_MobileNet_150h_150w_None model...
model_name: ISIC2016+PH2_aug_MobileNet_150h_150w_None
Epoch: 1 loss: 0.8226 accuracy: 0.6465 val_loss: 0.4803 val_accuracy: 0.8000
Epoch: 2 loss: 0.5668 accuracy: 0.7412 val_loss: 0.4964 val_accuracy: 0.7667
Epoch: 3 loss: 0.5286 accuracy: 0.7673 val_loss: 0.5338 val_accuracy: 0.7667
Epoch: 4 loss: 0.4570 accuracy: 0.7982 val_loss: 0.5430 val_accuracy: 0.7444
Epoch: 5 loss: 0.4186 accuracy: 0.8119 val_loss: 0.5451 val_accuracy: 0.7500
Epoch: 6 loss: 0.3782 accuracy: 0.8250 val_loss: 0.5254 val_accuracy: 0.7944
Epoch: 7 loss: 0.3255 accuracy: 0.8600 val_loss: 0.5510 val_accuracy: 0.7722
Epoch: 8 loss: 0.2982 accuracy: 0.8723 val_loss: 0.5504 val_accuracy: 0.7722
Epoch: 9 loss: 0.2687 accuracy: 0.8819 val_loss: 0.5531 val_accuracy: 0.7833
Epoch: 10 loss: 0.2595 accuracy: 0.8888 val_loss: 0.5647 val_accuracy: 0.7889
Epoch: 11 loss: 0.2620 accuracy: 0.8868 val_loss: 0.5803 val_accuracy: 0.7778
Epoch: 12 loss: 0.2293 accuracy: 0.9080 val_loss: 0.5616 val_accuracy: 0.8111
Epoch: 13 loss: 0.2190 accuracy: 0.9176 val_loss: 0.5890 val_accuracy: 0.7667
Epoch: 14 loss: 0.1791 accuracy: 0.9389 val_loss: 0.5703 val_accuracy: 0.8056
Epoch: 15 loss: 0.1846 accuracy: 0.9300 val_loss: 0.5744 val_accuracy: 0.8111
Epoch: 16 loss: 0.1560 accuracy: 0.9423 val_loss: 0.5916 val_accuracy: 0.8056
Epoch: 17 loss: 0.1553 accuracy: 0.9423 val_loss: 0.6275 val_accuracy: 0.7833
Epoch: 18 loss: 0.1461 accuracy: 0.9410 val_loss: 0.6488 val_accuracy: 0.8167
Epoch: 19 loss: 0.1278 accuracy: 0.9533 val_loss: 0.6432 val_accuracy: 0.8167
Epoch: 20 loss: 0.1093 accuracy: 0.9671 val_loss: 0.6854 val_accuracy: 0.8000
Job ended!
