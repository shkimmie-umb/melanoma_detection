Fri 01 Mar 2024 12:59:01 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['MEDNODE']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB6
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb6 (Functional)  (None, 2304)              40960143  
_________________________________________________________________
dense (Dense)                (None, 512)               1180160   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 42,275,217
Trainable params: 1,313,538
Non-trainable params: 40,961,679
_________________________________________________________________
Fitting MEDNODE_aug_EfficientNetB6_150h_150w_None model...
model_name: MEDNODE_aug_EfficientNetB6_150h_150w_None
Epoch: 1 loss: 0.8760 accuracy: 0.5714 val_loss: 0.6544 val_accuracy: 0.6765
Epoch: 2 loss: 0.5327 accuracy: 0.7366 val_loss: 0.6080 val_accuracy: 0.7353
Epoch: 3 loss: 0.4575 accuracy: 0.7991 val_loss: 0.5816 val_accuracy: 0.7941
Epoch: 4 loss: 0.5196 accuracy: 0.7723 val_loss: 0.5674 val_accuracy: 0.8235
Epoch: 5 loss: 0.3213 accuracy: 0.8571 val_loss: 0.5536 val_accuracy: 0.8235
Epoch: 6 loss: 0.4087 accuracy: 0.8170 val_loss: 0.5426 val_accuracy: 0.8235
Epoch: 7 loss: 0.3501 accuracy: 0.8304 val_loss: 0.5299 val_accuracy: 0.7941
Epoch: 8 loss: 0.3116 accuracy: 0.8795 val_loss: 0.5177 val_accuracy: 0.7941
Epoch: 9 loss: 0.2364 accuracy: 0.9018 val_loss: 0.5031 val_accuracy: 0.7941
Epoch: 10 loss: 0.2036 accuracy: 0.9375 val_loss: 0.4923 val_accuracy: 0.7353
Epoch: 11 loss: 0.2241 accuracy: 0.8929 val_loss: 0.4846 val_accuracy: 0.7353
Epoch: 12 loss: 0.2741 accuracy: 0.8616 val_loss: 0.4801 val_accuracy: 0.7353
Epoch: 13 loss: 0.2208 accuracy: 0.8839 val_loss: 0.4760 val_accuracy: 0.7647
Epoch: 14 loss: 0.2155 accuracy: 0.8973 val_loss: 0.4653 val_accuracy: 0.7647
Epoch: 15 loss: 0.2450 accuracy: 0.8884 val_loss: 0.4565 val_accuracy: 0.7941
Epoch: 16 loss: 0.2168 accuracy: 0.9062 val_loss: 0.4522 val_accuracy: 0.7941
Epoch: 17 loss: 0.1493 accuracy: 0.9554 val_loss: 0.4480 val_accuracy: 0.7941
Epoch: 18 loss: 0.1595 accuracy: 0.9375 val_loss: 0.4408 val_accuracy: 0.7941
Epoch: 19 loss: 0.2273 accuracy: 0.9152 val_loss: 0.4314 val_accuracy: 0.7941
Epoch: 20 loss: 0.1467 accuracy: 0.9509 val_loss: 0.4348 val_accuracy: 0.7941
Job ended!
