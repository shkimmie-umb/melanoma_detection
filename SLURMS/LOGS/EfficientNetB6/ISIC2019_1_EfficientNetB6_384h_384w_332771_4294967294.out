Wed 08 May 2024 02:58:34 AM EDT
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2019']
IMG_SIZE: [384, 384]
CLASSIFIER: EfficientNetB6
JOB_INDEX: None
Start training augmented images
Combining...
Combining 1th db out of 1 dbs
Stacking data
Combining complete
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb6 (Functional)  (None, 2304)              40960143  
_________________________________________________________________
dense (Dense)                (None, 512)               1180160   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 42,275,217
Trainable params: 1,313,538
Non-trainable params: 40,961,679
_________________________________________________________________
Fitting ISIC2019_aug_EfficientNetB6_384h_384w_None model...
model_name: ISIC2019_aug_EfficientNetB6_384h_384w_None
Epoch: 1 loss: 1.2467 accuracy: 0.5507 val_loss: 1.0208 val_accuracy: 0.8212
Epoch: 2 loss: 1.1037 accuracy: 0.5912 val_loss: 0.9455 val_accuracy: 0.8212
Epoch: 3 loss: 1.0496 accuracy: 0.6044 val_loss: 0.9867 val_accuracy: 0.8176
Epoch: 4 loss: 1.0083 accuracy: 0.6100 val_loss: 0.8527 val_accuracy: 0.8212
Epoch: 5 loss: 0.9666 accuracy: 0.6194 val_loss: 0.8292 val_accuracy: 0.8212
Epoch: 6 loss: 0.9310 accuracy: 0.6192 val_loss: 0.8275 val_accuracy: 0.8212
Epoch: 7 loss: 0.8981 accuracy: 0.6170 val_loss: 0.8137 val_accuracy: 0.8212
Epoch: 8 loss: 0.8668 accuracy: 0.6189 val_loss: 0.7089 val_accuracy: 0.8212
Epoch: 9 loss: 0.8325 accuracy: 0.6246 val_loss: 0.7074 val_accuracy: 0.8212
Epoch: 10 loss: 0.8079 accuracy: 0.6207 val_loss: 0.8746 val_accuracy: 0.1808
Epoch: 11 loss: 0.7875 accuracy: 0.6216 val_loss: 0.7071 val_accuracy: 0.8212
Epoch: 12 loss: 0.7671 accuracy: 0.6217 val_loss: 0.6853 val_accuracy: 0.8212
Epoch: 13 loss: 0.7521 accuracy: 0.6195 val_loss: 0.6031 val_accuracy: 0.8212
Epoch: 14 loss: 0.7373 accuracy: 0.6256 val_loss: 0.6141 val_accuracy: 0.8212
Epoch: 15 loss: 0.7295 accuracy: 0.6212 val_loss: 0.6519 val_accuracy: 0.8212
Epoch: 16 loss: 0.7196 accuracy: 0.6231 val_loss: 0.6705 val_accuracy: 0.8212
Epoch: 17 loss: 0.7094 accuracy: 0.6288 val_loss: 0.6060 val_accuracy: 0.8212
Epoch: 18 loss: 0.7073 accuracy: 0.6195 val_loss: 0.5896 val_accuracy: 0.8212
Epoch: 19 loss: 0.7018 accuracy: 0.6243 val_loss: 0.6573 val_accuracy: 0.8212
Epoch: 20 loss: 0.6995 accuracy: 0.6192 val_loss: 0.6108 val_accuracy: 0.8212
Epoch: 21 loss: 0.6932 accuracy: 0.6250 val_loss: 0.5875 val_accuracy: 0.8212
Epoch: 22 loss: 0.6871 accuracy: 0.6306 val_loss: 0.6433 val_accuracy: 0.8212
Epoch: 23 loss: 0.6880 accuracy: 0.6246 val_loss: 0.6197 val_accuracy: 0.8212
Epoch: 24 loss: 0.6852 accuracy: 0.6247 val_loss: 0.6701 val_accuracy: 0.8212
Epoch: 25 loss: 0.6828 accuracy: 0.6270 val_loss: 0.5770 val_accuracy: 0.8212
Epoch: 26 loss: 0.6780 accuracy: 0.6320 val_loss: 0.5796 val_accuracy: 0.8212
Epoch: 27 loss: 0.6785 accuracy: 0.6292 val_loss: 0.5522 val_accuracy: 0.8212
Epoch: 28 loss: 0.6786 accuracy: 0.6255 val_loss: 0.5805 val_accuracy: 0.8212
Epoch: 29 loss: 0.6748 accuracy: 0.6326 val_loss: 0.5765 val_accuracy: 0.8212
Epoch: 30 loss: 0.6739 accuracy: 0.6299 val_loss: 0.5494 val_accuracy: 0.8212
Epoch: 31 loss: 0.6749 accuracy: 0.6271 val_loss: 0.5614 val_accuracy: 0.8212
Epoch: 32 loss: 0.6750 accuracy: 0.6246 val_loss: 0.5849 val_accuracy: 0.8212
Epoch: 33 loss: 0.6743 accuracy: 0.6262 val_loss: 0.5760 val_accuracy: 0.8212
Epoch: 34 loss: 0.6742 accuracy: 0.6252 val_loss: 0.5772 val_accuracy: 0.8212
Epoch: 35 loss: 0.6750 accuracy: 0.6235 val_loss: 0.5934 val_accuracy: 0.8212

Epoch 00035: ReduceLROnPlateau reducing learning rate to 7.999999797903001e-05.
Epoch: 36 loss: 0.6684 accuracy: 0.6333 val_loss: 0.5874 val_accuracy: 0.8212
Epoch: 37 loss: 0.6714 accuracy: 0.6260 val_loss: 0.5937 val_accuracy: 0.8212
Epoch: 38 loss: 0.6689 accuracy: 0.6288 val_loss: 0.5698 val_accuracy: 0.8212
Epoch: 39 loss: 0.6690 accuracy: 0.6286 val_loss: 0.5568 val_accuracy: 0.8212
Epoch: 40 loss: 0.6652 accuracy: 0.6340 val_loss: 0.5420 val_accuracy: 0.8212
Epoch: 41 loss: 0.6705 accuracy: 0.6237 val_loss: 0.5775 val_accuracy: 0.8212
Epoch: 42 loss: 0.6704 accuracy: 0.6234 val_loss: 0.5698 val_accuracy: 0.8212
Epoch: 43 loss: 0.6681 accuracy: 0.6267 val_loss: 0.5716 val_accuracy: 0.8212
Epoch: 44 loss: 0.6673 accuracy: 0.6281 val_loss: 0.5754 val_accuracy: 0.8212
Epoch: 45 loss: 0.6668 accuracy: 0.6277 val_loss: 0.5754 val_accuracy: 0.8212

Epoch 00045: ReduceLROnPlateau reducing learning rate to 6.399999838322402e-05.
Epoch: 46 loss: 0.6672 accuracy: 0.6258 val_loss: 0.5696 val_accuracy: 0.8212
Epoch: 47 loss: 0.6645 accuracy: 0.6315 val_loss: 0.5751 val_accuracy: 0.8212
Epoch: 48 loss: 0.6653 accuracy: 0.6295 val_loss: 0.5752 val_accuracy: 0.8212
Epoch: 49 loss: 0.6655 accuracy: 0.6286 val_loss: 0.5846 val_accuracy: 0.8212
Epoch: 50 loss: 0.6633 accuracy: 0.6323 val_loss: 0.5776 val_accuracy: 0.8212

Epoch 00050: ReduceLROnPlateau reducing learning rate to 5.119999987073243e-05.
End of augmented training
Finish
Job ended!
