Tue 07 May 2024 02:53:38 AM EDT
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'ISIC2018', 'ISIC2019', 'ISIC2020']
IMG_SIZE: [384, 384]
CLASSIFIER: EfficientNetB4
JOB_INDEX: None
Start training augmented images
Combining...
Combining 1th db out of 4 dbs
Combining 2th db out of 4 dbs
Combining 3th db out of 4 dbs
Combining 4th db out of 4 dbs
Stacking data
Combining complete
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb4 (Functional)  (None, 1792)              17673823  
_________________________________________________________________
dense (Dense)                (None, 512)               918016    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 18,726,753
Trainable params: 1,051,394
Non-trainable params: 17,675,359
_________________________________________________________________
Fitting ISIC2016+ISIC2018+ISIC2019+ISIC2020_aug_EfficientNetB4_384h_384w_None model...
model_name: ISIC2016+ISIC2018+ISIC2019+ISIC2020_aug_EfficientNetB4_384h_384w_None
Epoch: 1 loss: 1.0750 accuracy: 0.6504 val_loss: 0.6738 val_accuracy: 0.9105
Epoch: 2 loss: 0.9102 accuracy: 0.7072 val_loss: 0.5996 val_accuracy: 0.9105
Epoch: 3 loss: 0.8154 accuracy: 0.7227 val_loss: 0.7129 val_accuracy: 0.9105
Epoch: 4 loss: 0.7400 accuracy: 0.7250 val_loss: 0.4978 val_accuracy: 0.9105
Epoch: 5 loss: 0.6803 accuracy: 0.7284 val_loss: 0.4746 val_accuracy: 0.9105
Epoch: 6 loss: 0.6459 accuracy: 0.7274 val_loss: 0.4396 val_accuracy: 0.9105
Epoch: 7 loss: 0.6302 accuracy: 0.7248 val_loss: 0.4293 val_accuracy: 0.9105
Epoch: 8 loss: 0.6205 accuracy: 0.7245 val_loss: 0.8375 val_accuracy: 0.0895
Epoch: 9 loss: 0.6122 accuracy: 0.7262 val_loss: 0.3996 val_accuracy: 0.9105
Epoch: 10 loss: 0.6077 accuracy: 0.7262 val_loss: 0.4052 val_accuracy: 0.9105
Epoch: 11 loss: 0.6036 accuracy: 0.7269 val_loss: 0.4232 val_accuracy: 0.9105
Epoch: 12 loss: 0.6029 accuracy: 0.7259 val_loss: 0.3867 val_accuracy: 0.9105
Epoch: 13 loss: 0.5988 accuracy: 0.7284 val_loss: 0.3670 val_accuracy: 0.9105
Epoch: 14 loss: 0.5985 accuracy: 0.7271 val_loss: 0.4014 val_accuracy: 0.9105
Epoch: 15 loss: 0.5980 accuracy: 0.7257 val_loss: 0.4562 val_accuracy: 0.9105
Epoch: 16 loss: 0.5959 accuracy: 0.7273 val_loss: 0.3711 val_accuracy: 0.9105
Epoch: 17 loss: 0.5969 accuracy: 0.7251 val_loss: 0.4600 val_accuracy: 0.9105
Epoch: 18 loss: 0.5933 accuracy: 0.7282 val_loss: 0.4668 val_accuracy: 0.9105

Epoch 00018: ReduceLROnPlateau reducing learning rate to 7.999999797903001e-05.
Epoch: 19 loss: 0.5930 accuracy: 0.7273 val_loss: 0.4823 val_accuracy: 0.9105
Epoch: 20 loss: 0.5926 accuracy: 0.7268 val_loss: 0.4318 val_accuracy: 0.9105
Epoch: 21 loss: 0.5905 accuracy: 0.7285 val_loss: 0.4932 val_accuracy: 0.9105
Epoch: 22 loss: 0.5902 accuracy: 0.7282 val_loss: 0.4043 val_accuracy: 0.9105
Epoch: 23 loss: 0.5901 accuracy: 0.7278 val_loss: 0.3887 val_accuracy: 0.9105

Epoch 00023: ReduceLROnPlateau reducing learning rate to 6.399999838322402e-05.
End of augmented training
Finish
Job ended!
