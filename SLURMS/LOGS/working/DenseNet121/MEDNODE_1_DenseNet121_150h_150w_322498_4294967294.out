Tue 27 Feb 2024 01:23:46 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['MEDNODE']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet121
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet121 (Functional)     (None, 1024)              7037504   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,697,218
Trainable params: 658,178
Non-trainable params: 7,039,040
_________________________________________________________________
Fitting MEDNODE_aug_DenseNet121_150h_150w_None model...
model_name: MEDNODE_aug_DenseNet121_150h_150w_None
Epoch: 1 loss: 0.9400 accuracy: 0.5536 val_loss: 0.6871 val_accuracy: 0.5882
Epoch: 2 loss: 0.8152 accuracy: 0.6071 val_loss: 0.6861 val_accuracy: 0.6176
Epoch: 3 loss: 0.8972 accuracy: 0.6071 val_loss: 0.6854 val_accuracy: 0.6765
Epoch: 4 loss: 0.7235 accuracy: 0.6696 val_loss: 0.6856 val_accuracy: 0.7647
Epoch: 5 loss: 0.7281 accuracy: 0.6964 val_loss: 0.6862 val_accuracy: 0.6765
Epoch: 6 loss: 0.7520 accuracy: 0.6696 val_loss: 0.6868 val_accuracy: 0.5000
Epoch: 7 loss: 0.6329 accuracy: 0.7009 val_loss: 0.6873 val_accuracy: 0.4412
Epoch: 8 loss: 0.6448 accuracy: 0.7321 val_loss: 0.6877 val_accuracy: 0.4118
Epoch: 9 loss: 0.6504 accuracy: 0.6875 val_loss: 0.6876 val_accuracy: 0.4118
Epoch: 10 loss: 0.6984 accuracy: 0.6696 val_loss: 0.6877 val_accuracy: 0.4118
Epoch: 11 loss: 0.6882 accuracy: 0.6920 val_loss: 0.6889 val_accuracy: 0.4118
Epoch: 12 loss: 0.6572 accuracy: 0.6964 val_loss: 0.6890 val_accuracy: 0.4118
Epoch: 13 loss: 0.7363 accuracy: 0.6696 val_loss: 0.6881 val_accuracy: 0.4118
Epoch: 14 loss: 0.6281 accuracy: 0.7321 val_loss: 0.6887 val_accuracy: 0.4118
Epoch: 15 loss: 0.6460 accuracy: 0.7009 val_loss: 0.6910 val_accuracy: 0.4118
Epoch: 16 loss: 0.5848 accuracy: 0.7188 val_loss: 0.6908 val_accuracy: 0.4118
Epoch: 17 loss: 0.6096 accuracy: 0.7143 val_loss: 0.6944 val_accuracy: 0.4118
Epoch: 18 loss: 0.6342 accuracy: 0.6964 val_loss: 0.6981 val_accuracy: 0.4118
Epoch: 19 loss: 0.5553 accuracy: 0.7411 val_loss: 0.7003 val_accuracy: 0.4118
Epoch: 20 loss: 0.6265 accuracy: 0.6741 val_loss: 0.7043 val_accuracy: 0.4118
Job ended!
