Fri 01 Mar 2024 12:40:18 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['MEDNODE']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet169
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet169 (Functional)     (None, 1664)              12642880  
_________________________________________________________________
dense (Dense)                (None, 512)               852480    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 13,630,274
Trainable params: 985,858
Non-trainable params: 12,644,416
_________________________________________________________________
Fitting MEDNODE_aug_DenseNet169_150h_150w_None model...
model_name: MEDNODE_aug_DenseNet169_150h_150w_None
Epoch: 1 loss: 0.8625 accuracy: 0.6027 val_loss: 0.5656 val_accuracy: 0.7059
Epoch: 2 loss: 0.6904 accuracy: 0.6920 val_loss: 0.5575 val_accuracy: 0.7059
Epoch: 3 loss: 0.5171 accuracy: 0.7902 val_loss: 0.5325 val_accuracy: 0.7353
Epoch: 4 loss: 0.4705 accuracy: 0.8036 val_loss: 0.5204 val_accuracy: 0.7353
Epoch: 5 loss: 0.3403 accuracy: 0.8482 val_loss: 0.4820 val_accuracy: 0.8235
Epoch: 6 loss: 0.3502 accuracy: 0.8393 val_loss: 0.4576 val_accuracy: 0.7941
Epoch: 7 loss: 0.3627 accuracy: 0.8750 val_loss: 0.4395 val_accuracy: 0.7647
Epoch: 8 loss: 0.2753 accuracy: 0.8750 val_loss: 0.4384 val_accuracy: 0.7647
Epoch: 9 loss: 0.2320 accuracy: 0.9107 val_loss: 0.4310 val_accuracy: 0.7647
Epoch: 10 loss: 0.2166 accuracy: 0.9241 val_loss: 0.4285 val_accuracy: 0.7647
Epoch: 11 loss: 0.2021 accuracy: 0.9286 val_loss: 0.4329 val_accuracy: 0.7647
Epoch: 12 loss: 0.1905 accuracy: 0.9375 val_loss: 0.4326 val_accuracy: 0.7647
Epoch: 13 loss: 0.1399 accuracy: 0.9464 val_loss: 0.4343 val_accuracy: 0.7941
Epoch: 14 loss: 0.1968 accuracy: 0.9196 val_loss: 0.4373 val_accuracy: 0.7941
Epoch: 15 loss: 0.1234 accuracy: 0.9643 val_loss: 0.4404 val_accuracy: 0.7941
Epoch: 16 loss: 0.1547 accuracy: 0.9598 val_loss: 0.4419 val_accuracy: 0.7941
Epoch: 17 loss: 0.1120 accuracy: 0.9643 val_loss: 0.4451 val_accuracy: 0.7941
Epoch: 18 loss: 0.1012 accuracy: 0.9777 val_loss: 0.4490 val_accuracy: 0.8235
Epoch: 19 loss: 0.0993 accuracy: 0.9777 val_loss: 0.4578 val_accuracy: 0.8235
Epoch: 20 loss: 0.0893 accuracy: 0.9821 val_loss: 0.4689 val_accuracy: 0.8235
Job ended!
