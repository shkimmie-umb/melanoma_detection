Tue 27 Feb 2024 04:20:41 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2017']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet201
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet201 (Functional)     (None, 1920)              18321984  
_________________________________________________________________
dense (Dense)                (None, 512)               983552    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 19,440,450
Trainable params: 1,116,930
Non-trainable params: 18,323,520
_________________________________________________________________
Fitting ISIC2017_aug_DenseNet201_150h_150w_None model...
model_name: ISIC2017_aug_DenseNet201_150h_150w_None
Epoch: 1 loss: 0.8652 accuracy: 0.5521 val_loss: 0.7179 val_accuracy: 0.2000
Epoch: 2 loss: 0.7878 accuracy: 0.5708 val_loss: 0.7085 val_accuracy: 0.3467
Epoch: 3 loss: 0.7549 accuracy: 0.5969 val_loss: 0.7171 val_accuracy: 0.3933
Epoch: 4 loss: 0.7324 accuracy: 0.6239 val_loss: 0.7416 val_accuracy: 0.4067
Epoch: 5 loss: 0.7088 accuracy: 0.6323 val_loss: 0.6987 val_accuracy: 0.5467
Epoch: 6 loss: 0.6927 accuracy: 0.6396 val_loss: 0.6737 val_accuracy: 0.5667
Epoch: 7 loss: 0.6881 accuracy: 0.6453 val_loss: 0.9099 val_accuracy: 0.2600
Epoch: 8 loss: 0.6830 accuracy: 0.6450 val_loss: 0.5548 val_accuracy: 0.7733
Epoch: 9 loss: 0.6879 accuracy: 0.6450 val_loss: 0.5444 val_accuracy: 0.7600
Epoch: 10 loss: 0.6625 accuracy: 0.6520 val_loss: 0.6225 val_accuracy: 0.5933
Epoch: 11 loss: 0.6708 accuracy: 0.6556 val_loss: 0.5562 val_accuracy: 0.7867
Epoch: 12 loss: 0.6553 accuracy: 0.6610 val_loss: 0.5356 val_accuracy: 0.8000
Epoch: 13 loss: 0.6502 accuracy: 0.6563 val_loss: 0.5670 val_accuracy: 0.7600
Epoch: 14 loss: 0.6795 accuracy: 0.6513 val_loss: 0.5347 val_accuracy: 0.8067
Epoch: 15 loss: 0.6466 accuracy: 0.6727 val_loss: 0.5544 val_accuracy: 0.7400
Epoch: 16 loss: 0.6647 accuracy: 0.6550 val_loss: 0.5312 val_accuracy: 0.7800
Epoch: 17 loss: 0.6495 accuracy: 0.6660 val_loss: 0.5987 val_accuracy: 0.6200
Epoch: 18 loss: 0.6388 accuracy: 0.6660 val_loss: 0.5384 val_accuracy: 0.7800
Epoch: 19 loss: 0.6332 accuracy: 0.6750 val_loss: 0.5836 val_accuracy: 0.6933
Epoch: 20 loss: 0.6475 accuracy: 0.6733 val_loss: 0.5087 val_accuracy: 0.8000
Job ended!
