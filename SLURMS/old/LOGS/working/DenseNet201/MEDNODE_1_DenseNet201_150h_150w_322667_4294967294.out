Tue 27 Feb 2024 04:28:01 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['MEDNODE']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet201
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet201 (Functional)     (None, 1920)              18321984  
_________________________________________________________________
dense (Dense)                (None, 512)               983552    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 19,440,450
Trainable params: 1,116,930
Non-trainable params: 18,323,520
_________________________________________________________________
Fitting MEDNODE_aug_DenseNet201_150h_150w_None model...
model_name: MEDNODE_aug_DenseNet201_150h_150w_None
Epoch: 1 loss: 0.8316 accuracy: 0.5804 val_loss: 0.6909 val_accuracy: 0.5882
Epoch: 2 loss: 0.7221 accuracy: 0.6786 val_loss: 0.6884 val_accuracy: 0.6765
Epoch: 3 loss: 0.7047 accuracy: 0.6741 val_loss: 0.6858 val_accuracy: 0.7059
Epoch: 4 loss: 0.7377 accuracy: 0.6830 val_loss: 0.6857 val_accuracy: 0.7059
Epoch: 5 loss: 0.5909 accuracy: 0.7188 val_loss: 0.6853 val_accuracy: 0.7647
Epoch: 6 loss: 0.6632 accuracy: 0.7232 val_loss: 0.6844 val_accuracy: 0.7059
Epoch: 7 loss: 0.6390 accuracy: 0.6741 val_loss: 0.6843 val_accuracy: 0.6176
Epoch: 8 loss: 0.6585 accuracy: 0.7277 val_loss: 0.6843 val_accuracy: 0.5882
Epoch: 9 loss: 0.5842 accuracy: 0.7054 val_loss: 0.6826 val_accuracy: 0.6765
Epoch: 10 loss: 0.6326 accuracy: 0.7232 val_loss: 0.6801 val_accuracy: 0.7353
Epoch: 11 loss: 0.5686 accuracy: 0.7411 val_loss: 0.6784 val_accuracy: 0.7059
Epoch: 12 loss: 0.6563 accuracy: 0.7098 val_loss: 0.6774 val_accuracy: 0.7353
Epoch: 13 loss: 0.6392 accuracy: 0.6964 val_loss: 0.6783 val_accuracy: 0.5588
Epoch: 14 loss: 0.5598 accuracy: 0.7500 val_loss: 0.6791 val_accuracy: 0.5588
Epoch: 15 loss: 0.5860 accuracy: 0.7277 val_loss: 0.6789 val_accuracy: 0.5882
Epoch: 16 loss: 0.5278 accuracy: 0.7634 val_loss: 0.6790 val_accuracy: 0.5882
Epoch: 17 loss: 0.5659 accuracy: 0.7411 val_loss: 0.6796 val_accuracy: 0.5000
Epoch: 18 loss: 0.6083 accuracy: 0.7366 val_loss: 0.6797 val_accuracy: 0.5000
Epoch: 19 loss: 0.5635 accuracy: 0.7277 val_loss: 0.6790 val_accuracy: 0.5000
Epoch: 20 loss: 0.5839 accuracy: 0.7411 val_loss: 0.6787 val_accuracy: 0.4706
Job ended!
