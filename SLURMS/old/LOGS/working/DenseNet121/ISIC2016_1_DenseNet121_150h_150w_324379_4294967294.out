Thu 29 Feb 2024 10:04:47 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet121
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet121 (Functional)     (None, 1024)              7037504   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,697,218
Trainable params: 658,178
Non-trainable params: 7,039,040
_________________________________________________________________
Fitting ISIC2016_aug_DenseNet121_150h_150w_None model...
model_name: ISIC2016_aug_DenseNet121_150h_150w_None
Epoch: 1 loss: 0.7572 accuracy: 0.6539 val_loss: 0.4786 val_accuracy: 0.7944
Epoch: 2 loss: 0.6348 accuracy: 0.6990 val_loss: 0.4428 val_accuracy: 0.7889
Epoch: 3 loss: 0.5412 accuracy: 0.7632 val_loss: 0.4596 val_accuracy: 0.7722
Epoch: 4 loss: 0.5096 accuracy: 0.7762 val_loss: 0.4546 val_accuracy: 0.7722
Epoch: 5 loss: 0.4698 accuracy: 0.7901 val_loss: 0.4680 val_accuracy: 0.7778
Epoch: 6 loss: 0.4483 accuracy: 0.7910 val_loss: 0.4690 val_accuracy: 0.7944
Epoch: 7 loss: 0.4329 accuracy: 0.8005 val_loss: 0.4674 val_accuracy: 0.8000
Epoch: 8 loss: 0.3825 accuracy: 0.8285 val_loss: 0.4818 val_accuracy: 0.7833
Epoch: 9 loss: 0.3654 accuracy: 0.8326 val_loss: 0.5074 val_accuracy: 0.8056
Epoch: 10 loss: 0.3495 accuracy: 0.8456 val_loss: 0.4942 val_accuracy: 0.7833
Epoch: 11 loss: 0.3246 accuracy: 0.8491 val_loss: 0.5012 val_accuracy: 0.7833
Epoch: 12 loss: 0.3150 accuracy: 0.8586 val_loss: 0.5209 val_accuracy: 0.7833
Epoch: 13 loss: 0.2959 accuracy: 0.8716 val_loss: 0.5128 val_accuracy: 0.7889
Epoch: 14 loss: 0.2604 accuracy: 0.8994 val_loss: 0.5204 val_accuracy: 0.7722
Epoch: 15 loss: 0.2491 accuracy: 0.8951 val_loss: 0.5537 val_accuracy: 0.7833
Epoch: 16 loss: 0.2572 accuracy: 0.8933 val_loss: 0.5559 val_accuracy: 0.7611
Epoch: 17 loss: 0.2362 accuracy: 0.9081 val_loss: 0.5672 val_accuracy: 0.7556
Epoch: 18 loss: 0.2233 accuracy: 0.9089 val_loss: 0.6033 val_accuracy: 0.7444
Epoch: 19 loss: 0.2050 accuracy: 0.9228 val_loss: 0.5715 val_accuracy: 0.7722
Epoch: 20 loss: 0.1866 accuracy: 0.9280 val_loss: 0.5763 val_accuracy: 0.7778
Job ended!
