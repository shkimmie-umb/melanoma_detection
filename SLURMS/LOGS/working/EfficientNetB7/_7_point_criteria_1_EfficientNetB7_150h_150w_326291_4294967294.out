Fri 01 Mar 2024 01:01:14 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['_7_point_criteria']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB7
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb7 (Functional)  (None, 2560)              64097687  
_________________________________________________________________
dense (Dense)                (None, 512)               1311232   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 65,543,833
Trainable params: 1,444,610
Non-trainable params: 64,099,223
_________________________________________________________________
Fitting _7_point_criteria_aug_EfficientNetB7_150h_150w_None model...
model_name: _7_point_criteria_aug_EfficientNetB7_150h_150w_None
Epoch: 1 loss: 0.9253 accuracy: 0.6106 val_loss: 0.6270 val_accuracy: 0.7241
Epoch: 2 loss: 0.6907 accuracy: 0.7072 val_loss: 0.6196 val_accuracy: 0.6995
Epoch: 3 loss: 0.5536 accuracy: 0.7537 val_loss: 0.5985 val_accuracy: 0.7488
Epoch: 4 loss: 0.5410 accuracy: 0.7537 val_loss: 0.5706 val_accuracy: 0.7586
Epoch: 5 loss: 0.4283 accuracy: 0.8003 val_loss: 0.5536 val_accuracy: 0.7537
Epoch: 6 loss: 0.4289 accuracy: 0.8037 val_loss: 0.5487 val_accuracy: 0.7389
Epoch: 7 loss: 0.3993 accuracy: 0.8403 val_loss: 0.5493 val_accuracy: 0.7389
Epoch: 8 loss: 0.3821 accuracy: 0.8153 val_loss: 0.5567 val_accuracy: 0.7389
Epoch: 9 loss: 0.3533 accuracy: 0.8403 val_loss: 0.5557 val_accuracy: 0.7389
Epoch: 10 loss: 0.3602 accuracy: 0.8453 val_loss: 0.5511 val_accuracy: 0.7438
Epoch: 11 loss: 0.3263 accuracy: 0.8652 val_loss: 0.5379 val_accuracy: 0.7635
Epoch: 12 loss: 0.3259 accuracy: 0.8769 val_loss: 0.5651 val_accuracy: 0.7488
Epoch: 13 loss: 0.3118 accuracy: 0.8569 val_loss: 0.5365 val_accuracy: 0.7685
Epoch: 14 loss: 0.3034 accuracy: 0.8785 val_loss: 0.5592 val_accuracy: 0.7537
Epoch: 15 loss: 0.2962 accuracy: 0.8769 val_loss: 0.5539 val_accuracy: 0.7685
Epoch: 16 loss: 0.2624 accuracy: 0.9052 val_loss: 0.5661 val_accuracy: 0.7537
Epoch: 17 loss: 0.2610 accuracy: 0.8952 val_loss: 0.5395 val_accuracy: 0.7685
Epoch: 18 loss: 0.2289 accuracy: 0.9052 val_loss: 0.5696 val_accuracy: 0.7833
Epoch: 19 loss: 0.2244 accuracy: 0.9185 val_loss: 0.5919 val_accuracy: 0.7931
Epoch: 20 loss: 0.2406 accuracy: 0.9201 val_loss: 0.6102 val_accuracy: 0.7783
Job ended!
