Fri 01 Mar 2024 07:49:47 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['KaggleMB']
IMG_SIZE: [150, 150]
CLASSIFIER: ResNet101V2
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
resnet101v2 (Functional)     (None, 2048)              42626560  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 43,810,562
Trainable params: 1,182,466
Non-trainable params: 42,628,096
_________________________________________________________________
Fitting KaggleMB_aug_ResNet101V2_150h_150w_None model...
model_name: KaggleMB_aug_ResNet101V2_150h_150w_None
Epoch: 1 loss: 0.6744 accuracy: 0.7023 val_loss: 0.4520 val_accuracy: 0.8049
Epoch: 2 loss: 0.4436 accuracy: 0.8065 val_loss: 0.4295 val_accuracy: 0.8220
Epoch: 3 loss: 0.3794 accuracy: 0.8424 val_loss: 0.4025 val_accuracy: 0.8390
Epoch: 4 loss: 0.3253 accuracy: 0.8641 val_loss: 0.4219 val_accuracy: 0.8239
Epoch: 5 loss: 0.3049 accuracy: 0.8693 val_loss: 0.4093 val_accuracy: 0.8314
Epoch: 6 loss: 0.2806 accuracy: 0.8855 val_loss: 0.4305 val_accuracy: 0.8239
Epoch: 7 loss: 0.2427 accuracy: 0.8964 val_loss: 0.3934 val_accuracy: 0.8428
Epoch: 8 loss: 0.2203 accuracy: 0.9104 val_loss: 0.4179 val_accuracy: 0.8333
Epoch: 9 loss: 0.2027 accuracy: 0.9164 val_loss: 0.4102 val_accuracy: 0.8258
Epoch: 10 loss: 0.1884 accuracy: 0.9198 val_loss: 0.4126 val_accuracy: 0.8371
Epoch: 11 loss: 0.1787 accuracy: 0.9289 val_loss: 0.4159 val_accuracy: 0.8428
Epoch: 12 loss: 0.1436 accuracy: 0.9423 val_loss: 0.4192 val_accuracy: 0.8333
Epoch: 13 loss: 0.1385 accuracy: 0.9458 val_loss: 0.4288 val_accuracy: 0.8371
Epoch: 14 loss: 0.1269 accuracy: 0.9560 val_loss: 0.4672 val_accuracy: 0.8314
Epoch: 15 loss: 0.1057 accuracy: 0.9612 val_loss: 0.4582 val_accuracy: 0.8390
Epoch: 16 loss: 0.0972 accuracy: 0.9655 val_loss: 0.4857 val_accuracy: 0.8390
Epoch: 17 loss: 0.0910 accuracy: 0.9683 val_loss: 0.4743 val_accuracy: 0.8428
Epoch: 18 loss: 0.0911 accuracy: 0.9669 val_loss: 0.4991 val_accuracy: 0.8220
Epoch: 19 loss: 0.0702 accuracy: 0.9769 val_loss: 0.4797 val_accuracy: 0.8409
Epoch: 20 loss: 0.0684 accuracy: 0.9769 val_loss: 0.5057 val_accuracy: 0.8447
Job ended!
