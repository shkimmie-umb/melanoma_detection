Thu 29 Feb 2024 01:31:19 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['MEDNODE']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet121
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet121 (Functional)     (None, 1024)              7037504   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,697,218
Trainable params: 658,178
Non-trainable params: 7,039,040
_________________________________________________________________
Fitting MEDNODE_aug_DenseNet121_150h_150w_None model...
model_name: MEDNODE_aug_DenseNet121_150h_150w_None
Epoch: 1 loss: 1.0140 accuracy: 0.5357 val_loss: 0.8430 val_accuracy: 0.5882
Epoch: 2 loss: 0.8664 accuracy: 0.5938 val_loss: 0.8640 val_accuracy: 0.5882
Epoch: 3 loss: 0.7109 accuracy: 0.6652 val_loss: 0.8008 val_accuracy: 0.5882
Epoch: 4 loss: 0.6269 accuracy: 0.7321 val_loss: 0.7798 val_accuracy: 0.6176
Epoch: 5 loss: 0.4608 accuracy: 0.7812 val_loss: 0.7474 val_accuracy: 0.6176
Epoch: 6 loss: 0.4295 accuracy: 0.7946 val_loss: 0.6905 val_accuracy: 0.6765
Epoch: 7 loss: 0.3839 accuracy: 0.8348 val_loss: 0.6471 val_accuracy: 0.6471
Epoch: 8 loss: 0.4431 accuracy: 0.7991 val_loss: 0.6198 val_accuracy: 0.7059
Epoch: 9 loss: 0.2853 accuracy: 0.8884 val_loss: 0.6077 val_accuracy: 0.7059
Epoch: 10 loss: 0.3028 accuracy: 0.8795 val_loss: 0.6111 val_accuracy: 0.7059
Epoch: 11 loss: 0.3176 accuracy: 0.8571 val_loss: 0.6132 val_accuracy: 0.6765
Epoch: 12 loss: 0.2710 accuracy: 0.8527 val_loss: 0.6154 val_accuracy: 0.7059
Epoch: 13 loss: 0.2227 accuracy: 0.9062 val_loss: 0.5886 val_accuracy: 0.7353
Epoch: 14 loss: 0.2165 accuracy: 0.9152 val_loss: 0.5837 val_accuracy: 0.7353
Epoch: 15 loss: 0.2051 accuracy: 0.9241 val_loss: 0.5875 val_accuracy: 0.7647
Epoch: 16 loss: 0.2381 accuracy: 0.9018 val_loss: 0.5675 val_accuracy: 0.7059
Epoch: 17 loss: 0.2297 accuracy: 0.9107 val_loss: 0.5498 val_accuracy: 0.7059
Epoch: 18 loss: 0.1545 accuracy: 0.9598 val_loss: 0.5491 val_accuracy: 0.7353
Epoch: 19 loss: 0.1433 accuracy: 0.9420 val_loss: 0.5716 val_accuracy: 0.7353
Epoch: 20 loss: 0.1471 accuracy: 0.9330 val_loss: 0.5792 val_accuracy: 0.7059
Job ended!
