Fri 01 Mar 2024 06:59:11 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2019']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB3
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb3 (Functional)  (None, 1536)              10783535  
_________________________________________________________________
dense (Dense)                (None, 512)               786944    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 11,705,393
Trainable params: 920,322
Non-trainable params: 10,785,071
_________________________________________________________________
Fitting ISIC2019_aug_EfficientNetB3_150h_150w_None model...
model_name: ISIC2019_aug_EfficientNetB3_150h_150w_None
Epoch: 1 loss: 0.6157 accuracy: 0.7223 val_loss: 0.3697 val_accuracy: 0.8551
Epoch: 2 loss: 0.5186 accuracy: 0.7598 val_loss: 0.3493 val_accuracy: 0.8622
Epoch: 3 loss: 0.4846 accuracy: 0.7743 val_loss: 0.3439 val_accuracy: 0.8613
Epoch: 4 loss: 0.4677 accuracy: 0.7819 val_loss: 0.3435 val_accuracy: 0.8622
Epoch: 5 loss: 0.4485 accuracy: 0.7923 val_loss: 0.3337 val_accuracy: 0.8668
Epoch: 6 loss: 0.4369 accuracy: 0.7978 val_loss: 0.3328 val_accuracy: 0.8630
Epoch: 7 loss: 0.4281 accuracy: 0.8002 val_loss: 0.3259 val_accuracy: 0.8668
Epoch: 8 loss: 0.4207 accuracy: 0.8049 val_loss: 0.3257 val_accuracy: 0.8676
Epoch: 9 loss: 0.4109 accuracy: 0.8110 val_loss: 0.3191 val_accuracy: 0.8694
Epoch: 10 loss: 0.4037 accuracy: 0.8149 val_loss: 0.3176 val_accuracy: 0.8719
Epoch: 11 loss: 0.3989 accuracy: 0.8162 val_loss: 0.3236 val_accuracy: 0.8695
Epoch: 12 loss: 0.3907 accuracy: 0.8218 val_loss: 0.3143 val_accuracy: 0.8699
Epoch: 13 loss: 0.3842 accuracy: 0.8245 val_loss: 0.3287 val_accuracy: 0.8654
Epoch: 14 loss: 0.3768 accuracy: 0.8287 val_loss: 0.3095 val_accuracy: 0.8755
Epoch: 15 loss: 0.3717 accuracy: 0.8302 val_loss: 0.3184 val_accuracy: 0.8713
Epoch: 16 loss: 0.3660 accuracy: 0.8362 val_loss: 0.3138 val_accuracy: 0.8743
Epoch: 17 loss: 0.3627 accuracy: 0.8348 val_loss: 0.3136 val_accuracy: 0.8755
Epoch: 18 loss: 0.3574 accuracy: 0.8387 val_loss: 0.3184 val_accuracy: 0.8690
Epoch: 19 loss: 0.3512 accuracy: 0.8420 val_loss: 0.3116 val_accuracy: 0.8741
Epoch: 20 loss: 0.3405 accuracy: 0.8442 val_loss: 0.3230 val_accuracy: 0.8648
Job ended!
