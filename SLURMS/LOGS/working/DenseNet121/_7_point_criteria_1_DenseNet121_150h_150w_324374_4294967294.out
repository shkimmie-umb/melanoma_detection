Thu 29 Feb 2024 10:03:32 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['_7_point_criteria']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet121
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet121 (Functional)     (None, 1024)              7037504   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,697,218
Trainable params: 658,178
Non-trainable params: 7,039,040
_________________________________________________________________
Fitting _7_point_criteria_aug_DenseNet121_150h_150w_None model...
model_name: _7_point_criteria_aug_DenseNet121_150h_150w_None
Epoch: 1 loss: 0.9764 accuracy: 0.5524 val_loss: 0.6725 val_accuracy: 0.7044
Epoch: 2 loss: 0.6587 accuracy: 0.6988 val_loss: 0.6905 val_accuracy: 0.6995
Epoch: 3 loss: 0.6061 accuracy: 0.7371 val_loss: 0.6085 val_accuracy: 0.7241
Epoch: 4 loss: 0.5618 accuracy: 0.7467 val_loss: 0.6024 val_accuracy: 0.7291
Epoch: 5 loss: 0.4814 accuracy: 0.7704 val_loss: 0.6235 val_accuracy: 0.7340
Epoch: 6 loss: 0.4407 accuracy: 0.7953 val_loss: 0.6017 val_accuracy: 0.7291
Epoch: 7 loss: 0.4004 accuracy: 0.8220 val_loss: 0.5692 val_accuracy: 0.7635
Epoch: 8 loss: 0.3916 accuracy: 0.8253 val_loss: 0.5813 val_accuracy: 0.7537
Epoch: 9 loss: 0.3174 accuracy: 0.8686 val_loss: 0.5760 val_accuracy: 0.7488
Epoch: 10 loss: 0.3450 accuracy: 0.8519 val_loss: 0.5758 val_accuracy: 0.7389
Epoch: 11 loss: 0.3254 accuracy: 0.8652 val_loss: 0.5716 val_accuracy: 0.7537
Epoch: 12 loss: 0.3020 accuracy: 0.8835 val_loss: 0.5659 val_accuracy: 0.7389
Epoch: 13 loss: 0.2901 accuracy: 0.8819 val_loss: 0.5792 val_accuracy: 0.7241
Epoch: 14 loss: 0.2679 accuracy: 0.8885 val_loss: 0.5962 val_accuracy: 0.7488
Epoch: 15 loss: 0.2088 accuracy: 0.9168 val_loss: 0.5793 val_accuracy: 0.7291
Epoch: 16 loss: 0.1941 accuracy: 0.9185 val_loss: 0.5851 val_accuracy: 0.7389
Epoch: 17 loss: 0.2159 accuracy: 0.9318 val_loss: 0.5961 val_accuracy: 0.7340
Epoch: 18 loss: 0.1874 accuracy: 0.9318 val_loss: 0.6096 val_accuracy: 0.7488
Epoch: 19 loss: 0.1897 accuracy: 0.9285 val_loss: 0.6291 val_accuracy: 0.7488
Epoch: 20 loss: 0.1832 accuracy: 0.9301 val_loss: 0.6276 val_accuracy: 0.7635
Job ended!
