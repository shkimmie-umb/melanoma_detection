Fri 01 Mar 2024 10:23:38 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'KaggleMB']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB5
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb5 (Functional)  (None, 2048)              28513527  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 29,697,529
Trainable params: 1,182,466
Non-trainable params: 28,515,063
_________________________________________________________________
Fitting ISIC2016+KaggleMB_aug_EfficientNetB5_150h_150w_None model...
model_name: ISIC2016+KaggleMB_aug_EfficientNetB5_150h_150w_None
Epoch: 1 loss: 0.6712 accuracy: 0.6960 val_loss: 0.5075 val_accuracy: 0.7797
Epoch: 2 loss: 0.5613 accuracy: 0.7447 val_loss: 0.4586 val_accuracy: 0.7726
Epoch: 3 loss: 0.5220 accuracy: 0.7720 val_loss: 0.4298 val_accuracy: 0.8037
Epoch: 4 loss: 0.4870 accuracy: 0.7801 val_loss: 0.4243 val_accuracy: 0.8291
Epoch: 5 loss: 0.4712 accuracy: 0.7942 val_loss: 0.4435 val_accuracy: 0.8008
Epoch: 6 loss: 0.4464 accuracy: 0.7969 val_loss: 0.4420 val_accuracy: 0.8107
Epoch: 7 loss: 0.4467 accuracy: 0.8061 val_loss: 0.4470 val_accuracy: 0.8136
Epoch: 8 loss: 0.4295 accuracy: 0.8087 val_loss: 0.4436 val_accuracy: 0.8079
Epoch: 9 loss: 0.4200 accuracy: 0.8112 val_loss: 0.4531 val_accuracy: 0.8037
Epoch: 10 loss: 0.4049 accuracy: 0.8153 val_loss: 0.4140 val_accuracy: 0.8291
Epoch: 11 loss: 0.3990 accuracy: 0.8236 val_loss: 0.4351 val_accuracy: 0.8065
Epoch: 12 loss: 0.3978 accuracy: 0.8215 val_loss: 0.4323 val_accuracy: 0.8234
Epoch: 13 loss: 0.3718 accuracy: 0.8392 val_loss: 0.4304 val_accuracy: 0.8093
Epoch: 14 loss: 0.3715 accuracy: 0.8326 val_loss: 0.4071 val_accuracy: 0.8291
Epoch: 15 loss: 0.3410 accuracy: 0.8439 val_loss: 0.4555 val_accuracy: 0.8107
Epoch: 16 loss: 0.3611 accuracy: 0.8398 val_loss: 0.4404 val_accuracy: 0.8263
Epoch: 17 loss: 0.3421 accuracy: 0.8541 val_loss: 0.4368 val_accuracy: 0.8164
Epoch: 18 loss: 0.3441 accuracy: 0.8515 val_loss: 0.4165 val_accuracy: 0.8220
Epoch: 19 loss: 0.3363 accuracy: 0.8549 val_loss: 0.4405 val_accuracy: 0.8008
Epoch: 20 loss: 0.3239 accuracy: 0.8575 val_loss: 0.4422 val_accuracy: 0.8008
Job ended!
