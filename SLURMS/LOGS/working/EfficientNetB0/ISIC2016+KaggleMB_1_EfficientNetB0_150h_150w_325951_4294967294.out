Fri 01 Mar 2024 02:12:38 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'KaggleMB']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB0
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb0 (Functional)  (None, 1280)              4049571   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 4,840,357
Trainable params: 789,250
Non-trainable params: 4,051,107
_________________________________________________________________
Fitting ISIC2016+KaggleMB_aug_EfficientNetB0_150h_150w_None model...
model_name: ISIC2016+KaggleMB_aug_EfficientNetB0_150h_150w_None
Epoch: 1 loss: 0.6691 accuracy: 0.6879 val_loss: 0.4749 val_accuracy: 0.8008
Epoch: 2 loss: 0.4960 accuracy: 0.7769 val_loss: 0.4415 val_accuracy: 0.8037
Epoch: 3 loss: 0.4351 accuracy: 0.8110 val_loss: 0.4131 val_accuracy: 0.8333
Epoch: 4 loss: 0.4236 accuracy: 0.8151 val_loss: 0.4073 val_accuracy: 0.8376
Epoch: 5 loss: 0.3799 accuracy: 0.8294 val_loss: 0.4045 val_accuracy: 0.8319
Epoch: 6 loss: 0.3749 accuracy: 0.8355 val_loss: 0.3922 val_accuracy: 0.8305
Epoch: 7 loss: 0.3499 accuracy: 0.8468 val_loss: 0.4125 val_accuracy: 0.8333
Epoch: 8 loss: 0.3167 accuracy: 0.8599 val_loss: 0.4035 val_accuracy: 0.8263
Epoch: 9 loss: 0.3235 accuracy: 0.8596 val_loss: 0.3973 val_accuracy: 0.8333
Epoch: 10 loss: 0.3033 accuracy: 0.8697 val_loss: 0.3998 val_accuracy: 0.8347
Epoch: 11 loss: 0.3041 accuracy: 0.8718 val_loss: 0.4204 val_accuracy: 0.8305
Epoch: 12 loss: 0.2939 accuracy: 0.8724 val_loss: 0.3906 val_accuracy: 0.8432
Epoch: 13 loss: 0.2779 accuracy: 0.8744 val_loss: 0.4052 val_accuracy: 0.8319
Epoch: 14 loss: 0.2562 accuracy: 0.8901 val_loss: 0.4059 val_accuracy: 0.8460
Epoch: 15 loss: 0.2570 accuracy: 0.8925 val_loss: 0.4227 val_accuracy: 0.8432
Epoch: 16 loss: 0.2579 accuracy: 0.8927 val_loss: 0.3938 val_accuracy: 0.8446
Epoch: 17 loss: 0.2503 accuracy: 0.8951 val_loss: 0.4306 val_accuracy: 0.8390
Epoch: 18 loss: 0.2484 accuracy: 0.8923 val_loss: 0.4190 val_accuracy: 0.8446
Epoch: 19 loss: 0.2334 accuracy: 0.9059 val_loss: 0.4475 val_accuracy: 0.8305
Epoch: 20 loss: 0.2258 accuracy: 0.9034 val_loss: 0.4163 val_accuracy: 0.8390
Job ended!
