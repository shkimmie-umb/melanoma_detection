Fri 01 Mar 2024 02:34:14 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB1
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb1 (Functional)  (None, 1280)              6575239   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,366,025
Trainable params: 789,250
Non-trainable params: 6,576,775
_________________________________________________________________
Fitting ISIC2016_aug_EfficientNetB1_150h_150w_None model...
model_name: ISIC2016_aug_EfficientNetB1_150h_150w_None
Epoch: 1 loss: 0.8094 accuracy: 0.6357 val_loss: 0.5966 val_accuracy: 0.7167
Epoch: 2 loss: 0.6999 accuracy: 0.6886 val_loss: 0.5287 val_accuracy: 0.7722
Epoch: 3 loss: 0.6517 accuracy: 0.7095 val_loss: 0.5249 val_accuracy: 0.7333
Epoch: 4 loss: 0.5808 accuracy: 0.7233 val_loss: 0.4689 val_accuracy: 0.8111
Epoch: 5 loss: 0.5286 accuracy: 0.7424 val_loss: 0.4407 val_accuracy: 0.8278
Epoch: 6 loss: 0.5380 accuracy: 0.7492 val_loss: 0.4314 val_accuracy: 0.8056
Epoch: 7 loss: 0.4923 accuracy: 0.7901 val_loss: 0.4333 val_accuracy: 0.7833
Epoch: 8 loss: 0.5115 accuracy: 0.7702 val_loss: 0.4196 val_accuracy: 0.8056
Epoch: 9 loss: 0.4773 accuracy: 0.7901 val_loss: 0.4201 val_accuracy: 0.7944
Epoch: 10 loss: 0.4589 accuracy: 0.7936 val_loss: 0.4137 val_accuracy: 0.8111
Epoch: 11 loss: 0.4352 accuracy: 0.8127 val_loss: 0.4271 val_accuracy: 0.7778
Epoch: 12 loss: 0.4158 accuracy: 0.8092 val_loss: 0.4214 val_accuracy: 0.8111
Epoch: 13 loss: 0.4537 accuracy: 0.7971 val_loss: 0.4280 val_accuracy: 0.8222
Epoch: 14 loss: 0.4173 accuracy: 0.8205 val_loss: 0.4415 val_accuracy: 0.8000
Epoch: 15 loss: 0.4165 accuracy: 0.8066 val_loss: 0.4375 val_accuracy: 0.8167
Epoch: 16 loss: 0.3784 accuracy: 0.8239 val_loss: 0.4485 val_accuracy: 0.8000
Epoch: 17 loss: 0.3710 accuracy: 0.8352 val_loss: 0.4623 val_accuracy: 0.7944
Epoch: 18 loss: 0.3497 accuracy: 0.8491 val_loss: 0.4379 val_accuracy: 0.8167
Epoch: 19 loss: 0.3953 accuracy: 0.8291 val_loss: 0.4334 val_accuracy: 0.8056
Epoch: 20 loss: 0.3616 accuracy: 0.8352 val_loss: 0.4247 val_accuracy: 0.8056
Job ended!
