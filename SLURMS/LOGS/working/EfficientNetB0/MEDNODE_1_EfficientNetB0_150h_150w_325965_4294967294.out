Fri 01 Mar 2024 02:24:28 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['MEDNODE']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB0
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb0 (Functional)  (None, 1280)              4049571   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 4,840,357
Trainable params: 789,250
Non-trainable params: 4,051,107
_________________________________________________________________
Fitting MEDNODE_aug_EfficientNetB0_150h_150w_None model...
model_name: MEDNODE_aug_EfficientNetB0_150h_150w_None
Epoch: 1 loss: 0.8774 accuracy: 0.6161 val_loss: 0.6451 val_accuracy: 0.6765
Epoch: 2 loss: 0.6668 accuracy: 0.6875 val_loss: 0.6017 val_accuracy: 0.7647
Epoch: 3 loss: 0.5695 accuracy: 0.7455 val_loss: 0.5726 val_accuracy: 0.7941
Epoch: 4 loss: 0.4829 accuracy: 0.7634 val_loss: 0.5499 val_accuracy: 0.7941
Epoch: 5 loss: 0.4933 accuracy: 0.7812 val_loss: 0.5369 val_accuracy: 0.7941
Epoch: 6 loss: 0.3795 accuracy: 0.8214 val_loss: 0.5197 val_accuracy: 0.7941
Epoch: 7 loss: 0.3936 accuracy: 0.7991 val_loss: 0.5092 val_accuracy: 0.7941
Epoch: 8 loss: 0.3380 accuracy: 0.8705 val_loss: 0.4967 val_accuracy: 0.7941
Epoch: 9 loss: 0.2639 accuracy: 0.9018 val_loss: 0.4865 val_accuracy: 0.7647
Epoch: 10 loss: 0.2784 accuracy: 0.8616 val_loss: 0.4760 val_accuracy: 0.7941
Epoch: 11 loss: 0.3369 accuracy: 0.8482 val_loss: 0.4606 val_accuracy: 0.7941
Epoch: 12 loss: 0.2591 accuracy: 0.8973 val_loss: 0.4515 val_accuracy: 0.7941
Epoch: 13 loss: 0.2642 accuracy: 0.8839 val_loss: 0.4468 val_accuracy: 0.7941
Epoch: 14 loss: 0.1930 accuracy: 0.9420 val_loss: 0.4388 val_accuracy: 0.8235
Epoch: 15 loss: 0.2094 accuracy: 0.9152 val_loss: 0.4359 val_accuracy: 0.8235
Epoch: 16 loss: 0.2136 accuracy: 0.9241 val_loss: 0.4306 val_accuracy: 0.8235
Epoch: 17 loss: 0.2275 accuracy: 0.9152 val_loss: 0.4204 val_accuracy: 0.8235
Epoch: 18 loss: 0.1639 accuracy: 0.9375 val_loss: 0.4168 val_accuracy: 0.8235
Epoch: 19 loss: 0.2032 accuracy: 0.9152 val_loss: 0.4199 val_accuracy: 0.8235
Epoch: 20 loss: 0.1714 accuracy: 0.9330 val_loss: 0.4107 val_accuracy: 0.8235
Job ended!
