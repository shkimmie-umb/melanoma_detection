Fri 01 Mar 2024 04:09:25 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['_7_point_criteria']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB2
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb2 (Functional)  (None, 1408)              7768569   
_________________________________________________________________
dense (Dense)                (None, 512)               721408    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 8,624,891
Trainable params: 854,786
Non-trainable params: 7,770,105
_________________________________________________________________
Fitting _7_point_criteria_aug_EfficientNetB2_150h_150w_None model...
model_name: _7_point_criteria_aug_EfficientNetB2_150h_150w_None
Epoch: 1 loss: 0.8408 accuracy: 0.6140 val_loss: 0.6354 val_accuracy: 0.6158
Epoch: 2 loss: 0.6167 accuracy: 0.7221 val_loss: 0.6140 val_accuracy: 0.6453
Epoch: 3 loss: 0.6139 accuracy: 0.7072 val_loss: 0.5991 val_accuracy: 0.6847
Epoch: 4 loss: 0.5382 accuracy: 0.7471 val_loss: 0.5983 val_accuracy: 0.7094
Epoch: 5 loss: 0.5118 accuracy: 0.7754 val_loss: 0.5969 val_accuracy: 0.6798
Epoch: 6 loss: 0.4120 accuracy: 0.8286 val_loss: 0.5937 val_accuracy: 0.6946
Epoch: 7 loss: 0.4293 accuracy: 0.8303 val_loss: 0.5959 val_accuracy: 0.6946
Epoch: 8 loss: 0.3757 accuracy: 0.8403 val_loss: 0.5966 val_accuracy: 0.6897
Epoch: 9 loss: 0.3432 accuracy: 0.8552 val_loss: 0.5947 val_accuracy: 0.7192
Epoch: 10 loss: 0.3299 accuracy: 0.8386 val_loss: 0.5870 val_accuracy: 0.6946
Epoch: 11 loss: 0.3324 accuracy: 0.8619 val_loss: 0.5886 val_accuracy: 0.7044
Epoch: 12 loss: 0.3193 accuracy: 0.8686 val_loss: 0.5965 val_accuracy: 0.7143
Epoch: 13 loss: 0.2877 accuracy: 0.8869 val_loss: 0.6137 val_accuracy: 0.7143
Epoch: 14 loss: 0.2794 accuracy: 0.8832 val_loss: 0.6143 val_accuracy: 0.7192
Epoch: 15 loss: 0.2438 accuracy: 0.8964 val_loss: 0.6240 val_accuracy: 0.7192
Epoch: 16 loss: 0.2385 accuracy: 0.8935 val_loss: 0.6466 val_accuracy: 0.7340
Epoch: 17 loss: 0.2509 accuracy: 0.8935 val_loss: 0.6315 val_accuracy: 0.6995
Epoch: 18 loss: 0.2342 accuracy: 0.8935 val_loss: 0.6471 val_accuracy: 0.6749
Epoch: 19 loss: 0.1897 accuracy: 0.9318 val_loss: 0.6838 val_accuracy: 0.6946
Epoch: 20 loss: 0.1855 accuracy: 0.9318 val_loss: 0.7204 val_accuracy: 0.7094
Job ended!
