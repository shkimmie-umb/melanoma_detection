Fri 01 Mar 2024 06:58:27 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2017']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB3
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb3 (Functional)  (None, 1536)              10783535  
_________________________________________________________________
dense (Dense)                (None, 512)               786944    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 11,705,393
Trainable params: 920,322
Non-trainable params: 10,785,071
_________________________________________________________________
Fitting ISIC2017_aug_EfficientNetB3_150h_150w_None model...
model_name: ISIC2017_aug_EfficientNetB3_150h_150w_None
Epoch: 1 loss: 0.7642 accuracy: 0.6593 val_loss: 0.4832 val_accuracy: 0.8067
Epoch: 2 loss: 0.6301 accuracy: 0.7124 val_loss: 0.4672 val_accuracy: 0.7867
Epoch: 3 loss: 0.5838 accuracy: 0.7374 val_loss: 0.4526 val_accuracy: 0.7667
Epoch: 4 loss: 0.5151 accuracy: 0.7599 val_loss: 0.4636 val_accuracy: 0.8000
Epoch: 5 loss: 0.5044 accuracy: 0.7762 val_loss: 0.4451 val_accuracy: 0.7933
Epoch: 6 loss: 0.4970 accuracy: 0.7709 val_loss: 0.4242 val_accuracy: 0.8267
Epoch: 7 loss: 0.4624 accuracy: 0.7846 val_loss: 0.4167 val_accuracy: 0.8267
Epoch: 8 loss: 0.4445 accuracy: 0.7976 val_loss: 0.4203 val_accuracy: 0.8400
Epoch: 9 loss: 0.4176 accuracy: 0.8220 val_loss: 0.4187 val_accuracy: 0.8067
Epoch: 10 loss: 0.4099 accuracy: 0.8170 val_loss: 0.4258 val_accuracy: 0.7867
Epoch: 11 loss: 0.4098 accuracy: 0.8150 val_loss: 0.4470 val_accuracy: 0.8267
Epoch: 12 loss: 0.3894 accuracy: 0.8280 val_loss: 0.4516 val_accuracy: 0.8000
Epoch: 13 loss: 0.3661 accuracy: 0.8347 val_loss: 0.4309 val_accuracy: 0.8267
Epoch: 14 loss: 0.3651 accuracy: 0.8360 val_loss: 0.4573 val_accuracy: 0.8733
Epoch: 15 loss: 0.3480 accuracy: 0.8460 val_loss: 0.4570 val_accuracy: 0.8200
Epoch: 16 loss: 0.3321 accuracy: 0.8494 val_loss: 0.4630 val_accuracy: 0.8200
Epoch: 17 loss: 0.3413 accuracy: 0.8480 val_loss: 0.4732 val_accuracy: 0.8133
Epoch: 18 loss: 0.3226 accuracy: 0.8584 val_loss: 0.4473 val_accuracy: 0.8333
Epoch: 19 loss: 0.3229 accuracy: 0.8557 val_loss: 0.4321 val_accuracy: 0.8067
Epoch: 20 loss: 0.3050 accuracy: 0.8644 val_loss: 0.4400 val_accuracy: 0.8067
Job ended!
