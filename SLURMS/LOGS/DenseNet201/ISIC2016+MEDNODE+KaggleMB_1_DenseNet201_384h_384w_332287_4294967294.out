Sat 04 May 2024 08:25:04 AM EDT
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'MEDNODE', 'KaggleMB']
IMG_SIZE: [384, 384]
CLASSIFIER: DenseNet201
JOB_INDEX: None
Start training augmented images
Combining...
Combining 1th db out of 3 dbs
Combining 2th db out of 3 dbs
Combining 3th db out of 3 dbs
Stacking data
Combining complete
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet201 (Functional)     (None, 1920)              18321984  
_________________________________________________________________
dense (Dense)                (None, 512)               983552    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 19,440,450
Trainable params: 1,116,930
Non-trainable params: 18,323,520
_________________________________________________________________
Fitting ISIC2016+MEDNODE+KaggleMB_aug_DenseNet201_384h_384w_None model...
model_name: ISIC2016+MEDNODE+KaggleMB_aug_DenseNet201_384h_384w_None
Epoch: 1 loss: 1.0625 accuracy: 0.7687 val_loss: 1.0384 val_accuracy: 0.7466
Epoch: 2 loss: 0.8209 accuracy: 0.8482 val_loss: 0.9202 val_accuracy: 0.7722
Epoch: 3 loss: 0.7136 accuracy: 0.8742 val_loss: 0.8015 val_accuracy: 0.8073
Epoch: 4 loss: 0.6386 accuracy: 0.8969 val_loss: 0.8243 val_accuracy: 0.7898
Epoch: 5 loss: 0.5904 accuracy: 0.9103 val_loss: 0.7721 val_accuracy: 0.8019
Epoch: 6 loss: 0.5716 accuracy: 0.9140 val_loss: 0.7193 val_accuracy: 0.8423
Epoch: 7 loss: 0.5336 accuracy: 0.9286 val_loss: 0.7220 val_accuracy: 0.8288
Epoch: 8 loss: 0.5041 accuracy: 0.9407 val_loss: 0.7752 val_accuracy: 0.8059
Epoch: 9 loss: 0.4967 accuracy: 0.9357 val_loss: 0.7533 val_accuracy: 0.8208
Epoch: 10 loss: 0.4676 accuracy: 0.9503 val_loss: 0.7519 val_accuracy: 0.8127
Epoch: 11 loss: 0.4539 accuracy: 0.9511 val_loss: 0.7435 val_accuracy: 0.8342

Epoch 00011: ReduceLROnPlateau reducing learning rate to 7.999999797903001e-05.
Epoch: 12 loss: 0.4362 accuracy: 0.9576 val_loss: 0.7311 val_accuracy: 0.8275
Epoch: 13 loss: 0.4317 accuracy: 0.9602 val_loss: 0.7446 val_accuracy: 0.8315
Epoch: 14 loss: 0.4221 accuracy: 0.9619 val_loss: 0.6986 val_accuracy: 0.8464
Epoch: 15 loss: 0.4121 accuracy: 0.9663 val_loss: 0.7534 val_accuracy: 0.8302
Epoch: 16 loss: 0.4059 accuracy: 0.9675 val_loss: 0.7734 val_accuracy: 0.8275
Epoch: 17 loss: 0.3930 accuracy: 0.9696 val_loss: 0.7282 val_accuracy: 0.8464
Epoch: 18 loss: 0.3798 accuracy: 0.9777 val_loss: 0.7347 val_accuracy: 0.8477
Epoch: 19 loss: 0.3702 accuracy: 0.9791 val_loss: 0.7599 val_accuracy: 0.8356

Epoch 00019: ReduceLROnPlateau reducing learning rate to 6.399999838322402e-05.
Epoch: 20 loss: 0.3701 accuracy: 0.9785 val_loss: 0.7693 val_accuracy: 0.8396
Epoch: 21 loss: 0.3647 accuracy: 0.9801 val_loss: 0.7695 val_accuracy: 0.8464
Epoch: 22 loss: 0.3571 accuracy: 0.9815 val_loss: 0.7383 val_accuracy: 0.8518
Epoch: 23 loss: 0.3482 accuracy: 0.9854 val_loss: 0.7826 val_accuracy: 0.8437
Epoch: 24 loss: 0.3473 accuracy: 0.9825 val_loss: 0.7705 val_accuracy: 0.8396

Epoch 00024: ReduceLROnPlateau reducing learning rate to 5.119999987073243e-05.
End of augmented training
Finish
Job ended!
