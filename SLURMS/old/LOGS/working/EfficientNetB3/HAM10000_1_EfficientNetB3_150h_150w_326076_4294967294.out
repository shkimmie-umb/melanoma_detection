Fri 01 Mar 2024 05:33:20 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['HAM10000']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB3
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb3 (Functional)  (None, 1536)              10783535  
_________________________________________________________________
dense (Dense)                (None, 512)               786944    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 11,705,393
Trainable params: 920,322
Non-trainable params: 10,785,071
_________________________________________________________________
Fitting HAM10000_aug_EfficientNetB3_150h_150w_None model...
model_name: HAM10000_aug_EfficientNetB3_150h_150w_None
Epoch: 1 loss: 0.6712 accuracy: 0.7018 val_loss: 0.2455 val_accuracy: 0.9207
Epoch: 2 loss: 0.5220 accuracy: 0.7653 val_loss: 0.1739 val_accuracy: 0.9479
Epoch: 3 loss: 0.4567 accuracy: 0.8023 val_loss: 0.1436 val_accuracy: 0.9547
Epoch: 4 loss: 0.4389 accuracy: 0.8078 val_loss: 0.1635 val_accuracy: 0.9479
Epoch: 5 loss: 0.4100 accuracy: 0.8226 val_loss: 0.1426 val_accuracy: 0.9513
Epoch: 6 loss: 0.3859 accuracy: 0.8303 val_loss: 0.1327 val_accuracy: 0.9558
Epoch: 7 loss: 0.3799 accuracy: 0.8322 val_loss: 0.1242 val_accuracy: 0.9615
Epoch: 8 loss: 0.3781 accuracy: 0.8297 val_loss: 0.1409 val_accuracy: 0.9558
Epoch: 9 loss: 0.3560 accuracy: 0.8461 val_loss: 0.1268 val_accuracy: 0.9626
Epoch: 10 loss: 0.3555 accuracy: 0.8439 val_loss: 0.1331 val_accuracy: 0.9513
Epoch: 11 loss: 0.3371 accuracy: 0.8511 val_loss: 0.1402 val_accuracy: 0.9558
Epoch: 12 loss: 0.3301 accuracy: 0.8606 val_loss: 0.1375 val_accuracy: 0.9558
Epoch: 13 loss: 0.3223 accuracy: 0.8579 val_loss: 0.1266 val_accuracy: 0.9547
Epoch: 14 loss: 0.3254 accuracy: 0.8570 val_loss: 0.1371 val_accuracy: 0.9513
Epoch: 15 loss: 0.3102 accuracy: 0.8664 val_loss: 0.1326 val_accuracy: 0.9581
Epoch: 16 loss: 0.3056 accuracy: 0.8701 val_loss: 0.1279 val_accuracy: 0.9638
Epoch: 17 loss: 0.2917 accuracy: 0.8746 val_loss: 0.1473 val_accuracy: 0.9604
Epoch: 18 loss: 0.2853 accuracy: 0.8799 val_loss: 0.1370 val_accuracy: 0.9547
Epoch: 19 loss: 0.2866 accuracy: 0.8754 val_loss: 0.1207 val_accuracy: 0.9615
Epoch: 20 loss: 0.2819 accuracy: 0.8803 val_loss: 0.1351 val_accuracy: 0.9581
Job ended!
