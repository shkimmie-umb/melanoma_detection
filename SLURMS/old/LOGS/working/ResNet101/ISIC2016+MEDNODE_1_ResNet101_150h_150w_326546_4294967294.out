Fri 01 Mar 2024 06:34:29 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'MEDNODE']
IMG_SIZE: [150, 150]
CLASSIFIER: ResNet101
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
resnet101 (Functional)       (None, 2048)              42658176  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 43,842,178
Trainable params: 1,182,466
Non-trainable params: 42,659,712
_________________________________________________________________
Fitting ISIC2016+MEDNODE_aug_ResNet101_150h_150w_None model...
model_name: ISIC2016+MEDNODE_aug_ResNet101_150h_150w_None
Epoch: 1 loss: 0.7994 accuracy: 0.6383 val_loss: 0.5348 val_accuracy: 0.8111
Epoch: 2 loss: 0.6282 accuracy: 0.7251 val_loss: 0.4568 val_accuracy: 0.8333
Epoch: 3 loss: 0.5282 accuracy: 0.7650 val_loss: 0.4768 val_accuracy: 0.8222
Epoch: 4 loss: 0.4506 accuracy: 0.8074 val_loss: 0.4347 val_accuracy: 0.8278
Epoch: 5 loss: 0.4478 accuracy: 0.8075 val_loss: 0.4343 val_accuracy: 0.8444
Epoch: 6 loss: 0.3627 accuracy: 0.8430 val_loss: 0.4972 val_accuracy: 0.7889
Epoch: 7 loss: 0.3045 accuracy: 0.8751 val_loss: 0.4630 val_accuracy: 0.8389
Epoch: 8 loss: 0.3294 accuracy: 0.8482 val_loss: 0.4857 val_accuracy: 0.8222
Epoch: 9 loss: 0.2749 accuracy: 0.8846 val_loss: 0.5109 val_accuracy: 0.8167
Epoch: 10 loss: 0.2481 accuracy: 0.9011 val_loss: 0.5351 val_accuracy: 0.7778
Epoch: 11 loss: 0.2466 accuracy: 0.9011 val_loss: 0.5055 val_accuracy: 0.8278
Epoch: 12 loss: 0.2140 accuracy: 0.9254 val_loss: 0.5570 val_accuracy: 0.8000
Epoch: 13 loss: 0.1987 accuracy: 0.9237 val_loss: 0.5474 val_accuracy: 0.8222
Epoch: 14 loss: 0.1906 accuracy: 0.9306 val_loss: 0.5462 val_accuracy: 0.8111
Epoch: 15 loss: 0.1700 accuracy: 0.9350 val_loss: 0.5893 val_accuracy: 0.7889
Epoch: 16 loss: 0.1542 accuracy: 0.9419 val_loss: 0.6067 val_accuracy: 0.8167
Epoch: 17 loss: 0.1623 accuracy: 0.9358 val_loss: 0.5911 val_accuracy: 0.8056
Epoch: 18 loss: 0.1198 accuracy: 0.9627 val_loss: 0.6218 val_accuracy: 0.8111
Epoch: 19 loss: 0.1200 accuracy: 0.9584 val_loss: 0.5824 val_accuracy: 0.8111
Epoch: 20 loss: 0.1054 accuracy: 0.9662 val_loss: 0.6081 val_accuracy: 0.8056
Job ended!
