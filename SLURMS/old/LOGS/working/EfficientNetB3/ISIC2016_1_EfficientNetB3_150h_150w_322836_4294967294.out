Tue 27 Feb 2024 08:40:19 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB3
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb3 (Functional)  (None, 1536)              10783535  
_________________________________________________________________
dense (Dense)                (None, 512)               786944    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 11,705,393
Trainable params: 920,322
Non-trainable params: 10,785,071
_________________________________________________________________
Fitting ISIC2016_aug_EfficientNetB3_150h_150w_None model...
model_name: ISIC2016_aug_EfficientNetB3_150h_150w_None
Epoch: 1 loss: 0.7000 accuracy: 0.5039 val_loss: 0.6779 val_accuracy: 0.8000
Epoch: 2 loss: 0.6947 accuracy: 0.5239 val_loss: 0.6606 val_accuracy: 0.8000
Epoch: 3 loss: 0.6890 accuracy: 0.5585 val_loss: 0.6475 val_accuracy: 0.8000
Epoch: 4 loss: 0.6815 accuracy: 0.5863 val_loss: 0.6314 val_accuracy: 0.8000
Epoch: 5 loss: 0.6822 accuracy: 0.5828 val_loss: 0.6232 val_accuracy: 0.8000
Epoch: 6 loss: 0.6737 accuracy: 0.5932 val_loss: 0.6131 val_accuracy: 0.8000
Epoch: 7 loss: 0.6680 accuracy: 0.6149 val_loss: 0.6071 val_accuracy: 0.8000
Epoch: 8 loss: 0.6752 accuracy: 0.6010 val_loss: 0.6014 val_accuracy: 0.8000
Epoch: 9 loss: 0.6675 accuracy: 0.6132 val_loss: 0.5958 val_accuracy: 0.8000
Epoch: 10 loss: 0.6664 accuracy: 0.6167 val_loss: 0.5980 val_accuracy: 0.8000
Epoch: 11 loss: 0.6700 accuracy: 0.6097 val_loss: 0.5938 val_accuracy: 0.8000
Epoch: 12 loss: 0.6684 accuracy: 0.6123 val_loss: 0.5860 val_accuracy: 0.8000
Epoch: 13 loss: 0.6692 accuracy: 0.6141 val_loss: 0.5972 val_accuracy: 0.8000
Epoch: 14 loss: 0.6709 accuracy: 0.6175 val_loss: 0.5854 val_accuracy: 0.8000
Epoch: 15 loss: 0.6678 accuracy: 0.6210 val_loss: 0.5785 val_accuracy: 0.8000
Epoch: 16 loss: 0.6675 accuracy: 0.6123 val_loss: 0.5926 val_accuracy: 0.8000
Epoch: 17 loss: 0.6681 accuracy: 0.6167 val_loss: 0.5819 val_accuracy: 0.8000
Epoch: 18 loss: 0.6684 accuracy: 0.6123 val_loss: 0.5747 val_accuracy: 0.8000
Epoch: 19 loss: 0.6684 accuracy: 0.6141 val_loss: 0.5834 val_accuracy: 0.8000
Epoch: 20 loss: 0.6679 accuracy: 0.6141 val_loss: 0.5717 val_accuracy: 0.8000
Job ended!
