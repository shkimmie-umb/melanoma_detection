Thu 29 Feb 2024 05:23:48 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'PH2']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet201
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet201 (Functional)     (None, 1920)              18321984  
_________________________________________________________________
dense (Dense)                (None, 512)               983552    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 19,440,450
Trainable params: 1,116,930
Non-trainable params: 18,323,520
_________________________________________________________________
Fitting ISIC2016+PH2_aug_DenseNet201_150h_150w_None model...
model_name: ISIC2016+PH2_aug_DenseNet201_150h_150w_None
Epoch: 1 loss: 0.8155 accuracy: 0.6369 val_loss: 0.4722 val_accuracy: 0.8056
Epoch: 2 loss: 0.6163 accuracy: 0.7364 val_loss: 0.4336 val_accuracy: 0.8222
Epoch: 3 loss: 0.5133 accuracy: 0.7570 val_loss: 0.4574 val_accuracy: 0.8056
Epoch: 4 loss: 0.4445 accuracy: 0.7982 val_loss: 0.4671 val_accuracy: 0.8000
Epoch: 5 loss: 0.4107 accuracy: 0.8174 val_loss: 0.4877 val_accuracy: 0.7722
Epoch: 6 loss: 0.3892 accuracy: 0.8264 val_loss: 0.4480 val_accuracy: 0.8056
Epoch: 7 loss: 0.3495 accuracy: 0.8476 val_loss: 0.4406 val_accuracy: 0.8278
Epoch: 8 loss: 0.3261 accuracy: 0.8607 val_loss: 0.4486 val_accuracy: 0.8167
Epoch: 9 loss: 0.2954 accuracy: 0.8784 val_loss: 0.4799 val_accuracy: 0.8111
Epoch: 10 loss: 0.2932 accuracy: 0.8806 val_loss: 0.4981 val_accuracy: 0.7833
Epoch: 11 loss: 0.2364 accuracy: 0.9128 val_loss: 0.4758 val_accuracy: 0.8278
Epoch: 12 loss: 0.2234 accuracy: 0.9108 val_loss: 0.4855 val_accuracy: 0.8111
Epoch: 13 loss: 0.2247 accuracy: 0.9101 val_loss: 0.4805 val_accuracy: 0.8278
Epoch: 14 loss: 0.2038 accuracy: 0.9238 val_loss: 0.4696 val_accuracy: 0.8111
Epoch: 15 loss: 0.1730 accuracy: 0.9362 val_loss: 0.4577 val_accuracy: 0.8222
Epoch: 16 loss: 0.1765 accuracy: 0.9369 val_loss: 0.4843 val_accuracy: 0.8222
Epoch: 17 loss: 0.1903 accuracy: 0.9252 val_loss: 0.4750 val_accuracy: 0.8278
Epoch: 18 loss: 0.1439 accuracy: 0.9451 val_loss: 0.4796 val_accuracy: 0.8222
Epoch: 19 loss: 0.1433 accuracy: 0.9465 val_loss: 0.4853 val_accuracy: 0.8278
Epoch: 20 loss: 0.1189 accuracy: 0.9588 val_loss: 0.5051 val_accuracy: 0.8222
Job ended!
