Fri 01 Mar 2024 03:45:45 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['MEDNODE']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB7
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb7 (Functional)  (None, 2560)              64097687  
_________________________________________________________________
dense (Dense)                (None, 512)               1311232   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 65,543,833
Trainable params: 1,444,610
Non-trainable params: 64,099,223
_________________________________________________________________
Fitting MEDNODE_aug_EfficientNetB7_150h_150w_None model...
model_name: MEDNODE_aug_EfficientNetB7_150h_150w_None
Epoch: 1 loss: 0.8468 accuracy: 0.5804 val_loss: 0.6157 val_accuracy: 0.7059
Epoch: 2 loss: 0.6071 accuracy: 0.7500 val_loss: 0.5650 val_accuracy: 0.7353
Epoch: 3 loss: 0.4472 accuracy: 0.7902 val_loss: 0.5351 val_accuracy: 0.7353
Epoch: 4 loss: 0.4328 accuracy: 0.8170 val_loss: 0.5225 val_accuracy: 0.7059
Epoch: 5 loss: 0.3764 accuracy: 0.8259 val_loss: 0.5161 val_accuracy: 0.7059
Epoch: 6 loss: 0.3844 accuracy: 0.8393 val_loss: 0.5129 val_accuracy: 0.6765
Epoch: 7 loss: 0.2744 accuracy: 0.9018 val_loss: 0.4979 val_accuracy: 0.7059
Epoch: 8 loss: 0.3076 accuracy: 0.8839 val_loss: 0.4956 val_accuracy: 0.6765
Epoch: 9 loss: 0.2422 accuracy: 0.9062 val_loss: 0.5002 val_accuracy: 0.6765
Epoch: 10 loss: 0.2271 accuracy: 0.9107 val_loss: 0.5008 val_accuracy: 0.6765
Epoch: 11 loss: 0.2551 accuracy: 0.9018 val_loss: 0.4910 val_accuracy: 0.6765
Epoch: 12 loss: 0.2353 accuracy: 0.8750 val_loss: 0.4883 val_accuracy: 0.6765
Epoch: 13 loss: 0.1868 accuracy: 0.9196 val_loss: 0.5028 val_accuracy: 0.6765
Epoch: 14 loss: 0.2198 accuracy: 0.9196 val_loss: 0.5086 val_accuracy: 0.6765
Epoch: 15 loss: 0.1537 accuracy: 0.9420 val_loss: 0.5187 val_accuracy: 0.6765
Epoch: 16 loss: 0.1815 accuracy: 0.9241 val_loss: 0.5210 val_accuracy: 0.6471
Epoch: 17 loss: 0.1529 accuracy: 0.9420 val_loss: 0.5131 val_accuracy: 0.6765
Epoch: 18 loss: 0.1707 accuracy: 0.9286 val_loss: 0.4972 val_accuracy: 0.6765
Epoch: 19 loss: 0.1670 accuracy: 0.9509 val_loss: 0.5153 val_accuracy: 0.6765
Epoch: 20 loss: 0.1613 accuracy: 0.9286 val_loss: 0.5404 val_accuracy: 0.6471
Job ended!
