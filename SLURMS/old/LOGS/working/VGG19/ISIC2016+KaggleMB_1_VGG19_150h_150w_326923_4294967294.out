Sat 02 Mar 2024 12:15:24 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'KaggleMB']
IMG_SIZE: [150, 150]
CLASSIFIER: VGG19
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
vgg19 (Functional)           (None, 512)               20024384  
_________________________________________________________________
dense (Dense)                (None, 512)               262656    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 20,421,954
Trainable params: 396,034
Non-trainable params: 20,025,920
_________________________________________________________________
Fitting ISIC2016+KaggleMB_aug_VGG19_150h_150w_None model...
model_name: ISIC2016+KaggleMB_aug_VGG19_150h_150w_None
Epoch: 1 loss: 0.6935 accuracy: 0.6809 val_loss: 0.5302 val_accuracy: 0.7514
Epoch: 2 loss: 0.5342 accuracy: 0.7564 val_loss: 0.4912 val_accuracy: 0.7698
Epoch: 3 loss: 0.4912 accuracy: 0.7886 val_loss: 0.4620 val_accuracy: 0.7910
Epoch: 4 loss: 0.4288 accuracy: 0.8044 val_loss: 0.4457 val_accuracy: 0.7966
Epoch: 5 loss: 0.4182 accuracy: 0.8219 val_loss: 0.4374 val_accuracy: 0.7952
Epoch: 6 loss: 0.3931 accuracy: 0.8240 val_loss: 0.4367 val_accuracy: 0.7980
Epoch: 7 loss: 0.3670 accuracy: 0.8394 val_loss: 0.4264 val_accuracy: 0.8051
Epoch: 8 loss: 0.3589 accuracy: 0.8379 val_loss: 0.4448 val_accuracy: 0.7980
Epoch: 9 loss: 0.3347 accuracy: 0.8537 val_loss: 0.4322 val_accuracy: 0.8121
Epoch: 10 loss: 0.3240 accuracy: 0.8586 val_loss: 0.4618 val_accuracy: 0.8023
Epoch: 11 loss: 0.3033 accuracy: 0.8692 val_loss: 0.4520 val_accuracy: 0.8008
Epoch: 12 loss: 0.3012 accuracy: 0.8669 val_loss: 0.4372 val_accuracy: 0.8206
Epoch: 13 loss: 0.2954 accuracy: 0.8716 val_loss: 0.4527 val_accuracy: 0.8107
Epoch: 14 loss: 0.2685 accuracy: 0.8848 val_loss: 0.4542 val_accuracy: 0.8008
Epoch: 15 loss: 0.2649 accuracy: 0.8869 val_loss: 0.4518 val_accuracy: 0.8136
Epoch: 16 loss: 0.2420 accuracy: 0.8970 val_loss: 0.4831 val_accuracy: 0.8023
Epoch: 17 loss: 0.2471 accuracy: 0.8931 val_loss: 0.4548 val_accuracy: 0.8107
Epoch: 18 loss: 0.2209 accuracy: 0.9074 val_loss: 0.4680 val_accuracy: 0.8037
Epoch: 19 loss: 0.2152 accuracy: 0.9091 val_loss: 0.4802 val_accuracy: 0.8037
Epoch: 20 loss: 0.2045 accuracy: 0.9136 val_loss: 0.4941 val_accuracy: 0.7994
Job ended!
