Fri 01 Mar 2024 05:27:27 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2017']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB2
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb2 (Functional)  (None, 1408)              7768569   
_________________________________________________________________
dense (Dense)                (None, 512)               721408    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 8,624,891
Trainable params: 854,786
Non-trainable params: 7,770,105
_________________________________________________________________
Fitting ISIC2017_aug_EfficientNetB2_150h_150w_None model...
model_name: ISIC2017_aug_EfficientNetB2_150h_150w_None
Epoch: 1 loss: 0.7857 accuracy: 0.6496 val_loss: 0.4517 val_accuracy: 0.8200
Epoch: 2 loss: 0.6625 accuracy: 0.6951 val_loss: 0.4433 val_accuracy: 0.7933
Epoch: 3 loss: 0.5951 accuracy: 0.7371 val_loss: 0.4160 val_accuracy: 0.8267
Epoch: 4 loss: 0.5317 accuracy: 0.7625 val_loss: 0.4213 val_accuracy: 0.8000
Epoch: 5 loss: 0.5091 accuracy: 0.7629 val_loss: 0.4275 val_accuracy: 0.8267
Epoch: 6 loss: 0.4763 accuracy: 0.7776 val_loss: 0.4189 val_accuracy: 0.8067
Epoch: 7 loss: 0.4602 accuracy: 0.7912 val_loss: 0.4231 val_accuracy: 0.8133
Epoch: 8 loss: 0.4408 accuracy: 0.8013 val_loss: 0.4285 val_accuracy: 0.7933
Epoch: 9 loss: 0.4306 accuracy: 0.8033 val_loss: 0.4172 val_accuracy: 0.8467
Epoch: 10 loss: 0.4144 accuracy: 0.8123 val_loss: 0.4647 val_accuracy: 0.7867
Epoch: 11 loss: 0.4007 accuracy: 0.8170 val_loss: 0.4413 val_accuracy: 0.8067
Epoch: 12 loss: 0.3794 accuracy: 0.8267 val_loss: 0.4232 val_accuracy: 0.8133
Epoch: 13 loss: 0.3874 accuracy: 0.8263 val_loss: 0.4272 val_accuracy: 0.8400
Epoch: 14 loss: 0.3730 accuracy: 0.8370 val_loss: 0.4543 val_accuracy: 0.8200
Epoch: 15 loss: 0.3402 accuracy: 0.8494 val_loss: 0.4602 val_accuracy: 0.8200
Epoch: 16 loss: 0.3450 accuracy: 0.8440 val_loss: 0.4378 val_accuracy: 0.8133
Epoch: 17 loss: 0.3347 accuracy: 0.8450 val_loss: 0.4495 val_accuracy: 0.8067
Epoch: 18 loss: 0.3113 accuracy: 0.8664 val_loss: 0.4280 val_accuracy: 0.8133
Epoch: 19 loss: 0.3072 accuracy: 0.8604 val_loss: 0.4379 val_accuracy: 0.8067
Epoch: 20 loss: 0.3013 accuracy: 0.8744 val_loss: 0.4193 val_accuracy: 0.8267
Job ended!
