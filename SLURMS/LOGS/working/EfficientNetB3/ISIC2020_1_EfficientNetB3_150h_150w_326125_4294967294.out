Fri 01 Mar 2024 06:59:42 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2020']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB3
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb3 (Functional)  (None, 1536)              10783535  
_________________________________________________________________
dense (Dense)                (None, 512)               786944    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 11,705,393
Trainable params: 920,322
Non-trainable params: 10,785,071
_________________________________________________________________
Fitting ISIC2020_aug_EfficientNetB3_150h_150w_None model...
model_name: ISIC2020_aug_EfficientNetB3_150h_150w_None
Epoch: 1 loss: 0.4680 accuracy: 0.8063 val_loss: 0.0906 val_accuracy: 0.9831
Epoch: 2 loss: 0.3058 accuracy: 0.8657 val_loss: 0.0729 val_accuracy: 0.9837
Epoch: 3 loss: 0.2846 accuracy: 0.8704 val_loss: 0.0690 val_accuracy: 0.9843
Epoch: 4 loss: 0.2643 accuracy: 0.8787 val_loss: 0.0691 val_accuracy: 0.9842
Epoch: 5 loss: 0.2568 accuracy: 0.8840 val_loss: 0.0693 val_accuracy: 0.9839
Epoch: 6 loss: 0.2487 accuracy: 0.8867 val_loss: 0.0711 val_accuracy: 0.9839
Epoch: 7 loss: 0.2431 accuracy: 0.8890 val_loss: 0.0695 val_accuracy: 0.9828
Epoch: 8 loss: 0.2365 accuracy: 0.8931 val_loss: 0.0707 val_accuracy: 0.9840
Epoch: 9 loss: 0.2341 accuracy: 0.8940 val_loss: 0.0696 val_accuracy: 0.9835
Epoch: 10 loss: 0.2292 accuracy: 0.8964 val_loss: 0.0680 val_accuracy: 0.9837
Epoch: 11 loss: 0.2250 accuracy: 0.9000 val_loss: 0.0700 val_accuracy: 0.9842
Epoch: 12 loss: 0.2214 accuracy: 0.8996 val_loss: 0.0701 val_accuracy: 0.9842
Epoch: 13 loss: 0.2175 accuracy: 0.9032 val_loss: 0.0700 val_accuracy: 0.9835
Epoch: 14 loss: 0.2168 accuracy: 0.9028 val_loss: 0.0700 val_accuracy: 0.9845
Epoch: 15 loss: 0.2145 accuracy: 0.9044 val_loss: 0.0691 val_accuracy: 0.9835
Epoch: 16 loss: 0.2098 accuracy: 0.9060 val_loss: 0.0729 val_accuracy: 0.9835
Epoch: 17 loss: 0.2082 accuracy: 0.9055 val_loss: 0.0709 val_accuracy: 0.9823
Epoch: 18 loss: 0.2065 accuracy: 0.9076 val_loss: 0.0727 val_accuracy: 0.9826
Epoch: 19 loss: 0.2045 accuracy: 0.9083 val_loss: 0.0701 val_accuracy: 0.9839
Epoch: 20 loss: 0.2021 accuracy: 0.9089 val_loss: 0.0739 val_accuracy: 0.9839
Job ended!
