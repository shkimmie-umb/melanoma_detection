Tue 27 Feb 2024 02:35:30 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2019']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB5
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb5 (Functional)  (None, 2048)              28513527  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 29,697,529
Trainable params: 1,182,466
Non-trainable params: 28,515,063
_________________________________________________________________
Fitting ISIC2019_aug_EfficientNetB5_150h_150w_None model...
model_name: ISIC2019_aug_EfficientNetB5_150h_150w_None
Epoch: 1 loss: 0.6654 accuracy: 0.6168 val_loss: 0.5661 val_accuracy: 0.8295
Epoch: 2 loss: 0.6604 accuracy: 0.6272 val_loss: 0.5698 val_accuracy: 0.8295
Epoch: 3 loss: 0.6595 accuracy: 0.6273 val_loss: 0.6036 val_accuracy: 0.8295
Epoch: 4 loss: 0.6551 accuracy: 0.6317 val_loss: 0.5415 val_accuracy: 0.8295
Epoch: 5 loss: 0.6525 accuracy: 0.6398 val_loss: 0.5308 val_accuracy: 0.8295
Epoch: 6 loss: 0.6503 accuracy: 0.6428 val_loss: 0.5217 val_accuracy: 0.8297
Epoch: 7 loss: 0.6497 accuracy: 0.6427 val_loss: 0.5507 val_accuracy: 0.8289
Epoch: 8 loss: 0.6502 accuracy: 0.6429 val_loss: 0.5630 val_accuracy: 0.8287
Epoch: 9 loss: 0.6500 accuracy: 0.6429 val_loss: 0.5318 val_accuracy: 0.8293
Epoch: 10 loss: 0.6469 accuracy: 0.6472 val_loss: 0.5628 val_accuracy: 0.8052
Epoch: 11 loss: 0.6481 accuracy: 0.6461 val_loss: 0.5072 val_accuracy: 0.8295
Epoch: 12 loss: 0.6479 accuracy: 0.6452 val_loss: 0.5219 val_accuracy: 0.8295
Epoch: 13 loss: 0.6479 accuracy: 0.6450 val_loss: 0.5388 val_accuracy: 0.8226
Epoch: 14 loss: 0.6481 accuracy: 0.6462 val_loss: 0.5256 val_accuracy: 0.8257
Epoch: 15 loss: 0.6479 accuracy: 0.6455 val_loss: 0.5421 val_accuracy: 0.8295
Epoch: 16 loss: 0.6465 accuracy: 0.6472 val_loss: 0.5352 val_accuracy: 0.8299
Epoch: 17 loss: 0.6468 accuracy: 0.6479 val_loss: 0.5268 val_accuracy: 0.8301
Epoch: 18 loss: 0.6461 accuracy: 0.6473 val_loss: 0.5258 val_accuracy: 0.8301
Epoch: 19 loss: 0.6440 accuracy: 0.6493 val_loss: 0.5247 val_accuracy: 0.8277
Epoch: 20 loss: 0.6458 accuracy: 0.6480 val_loss: 0.5283 val_accuracy: 0.8295
Job ended!
