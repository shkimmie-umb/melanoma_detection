Fri 01 Mar 2024 12:58:20 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2019']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB6
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb6 (Functional)  (None, 2304)              40960143  
_________________________________________________________________
dense (Dense)                (None, 512)               1180160   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 42,275,217
Trainable params: 1,313,538
Non-trainable params: 40,961,679
_________________________________________________________________
Fitting ISIC2019_aug_EfficientNetB6_150h_150w_None model...
model_name: ISIC2019_aug_EfficientNetB6_150h_150w_None
Epoch: 1 loss: 0.6072 accuracy: 0.7244 val_loss: 0.3644 val_accuracy: 0.8622
Epoch: 2 loss: 0.5267 accuracy: 0.7542 val_loss: 0.3514 val_accuracy: 0.8561
Epoch: 3 loss: 0.5054 accuracy: 0.7626 val_loss: 0.3501 val_accuracy: 0.8632
Epoch: 4 loss: 0.4833 accuracy: 0.7746 val_loss: 0.3371 val_accuracy: 0.8664
Epoch: 5 loss: 0.4690 accuracy: 0.7796 val_loss: 0.3422 val_accuracy: 0.8613
Epoch: 6 loss: 0.4620 accuracy: 0.7844 val_loss: 0.3323 val_accuracy: 0.8705
Epoch: 7 loss: 0.4548 accuracy: 0.7857 val_loss: 0.3359 val_accuracy: 0.8638
Epoch: 8 loss: 0.4474 accuracy: 0.7907 val_loss: 0.3271 val_accuracy: 0.8695
Epoch: 9 loss: 0.4362 accuracy: 0.7968 val_loss: 0.3312 val_accuracy: 0.8711
Epoch: 10 loss: 0.4352 accuracy: 0.7982 val_loss: 0.3242 val_accuracy: 0.8707
Epoch: 11 loss: 0.4281 accuracy: 0.8036 val_loss: 0.3273 val_accuracy: 0.8717
Epoch: 12 loss: 0.4265 accuracy: 0.8027 val_loss: 0.3254 val_accuracy: 0.8697
Epoch: 13 loss: 0.4224 accuracy: 0.8042 val_loss: 0.3245 val_accuracy: 0.8711
Epoch: 14 loss: 0.4196 accuracy: 0.8074 val_loss: 0.3189 val_accuracy: 0.8709
Epoch: 15 loss: 0.4159 accuracy: 0.8067 val_loss: 0.3218 val_accuracy: 0.8727
Epoch: 16 loss: 0.4110 accuracy: 0.8138 val_loss: 0.3210 val_accuracy: 0.8713
Epoch: 17 loss: 0.4106 accuracy: 0.8084 val_loss: 0.3173 val_accuracy: 0.8741
Epoch: 18 loss: 0.4077 accuracy: 0.8105 val_loss: 0.3229 val_accuracy: 0.8705
Epoch: 19 loss: 0.4019 accuracy: 0.8142 val_loss: 0.3214 val_accuracy: 0.8739
Epoch: 20 loss: 0.4006 accuracy: 0.8138 val_loss: 0.3231 val_accuracy: 0.8731
Job ended!
