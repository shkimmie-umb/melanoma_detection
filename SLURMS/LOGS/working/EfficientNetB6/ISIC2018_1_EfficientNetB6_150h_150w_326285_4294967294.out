Fri 01 Mar 2024 12:58:15 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2018']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB6
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb6 (Functional)  (None, 2304)              40960143  
_________________________________________________________________
dense (Dense)                (None, 512)               1180160   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 42,275,217
Trainable params: 1,313,538
Non-trainable params: 40,961,679
_________________________________________________________________
Fitting ISIC2018_aug_EfficientNetB6_150h_150w_None model...
model_name: ISIC2018_aug_EfficientNetB6_150h_150w_None
Epoch: 1 loss: 0.6119 accuracy: 0.7306 val_loss: 0.3452 val_accuracy: 0.8705
Epoch: 2 loss: 0.4751 accuracy: 0.7934 val_loss: 0.2658 val_accuracy: 0.8860
Epoch: 3 loss: 0.4303 accuracy: 0.8127 val_loss: 0.2779 val_accuracy: 0.8912
Epoch: 4 loss: 0.4161 accuracy: 0.8181 val_loss: 0.2602 val_accuracy: 0.9171
Epoch: 5 loss: 0.3976 accuracy: 0.8264 val_loss: 0.2474 val_accuracy: 0.9067
Epoch: 6 loss: 0.3844 accuracy: 0.8304 val_loss: 0.2802 val_accuracy: 0.8756
Epoch: 7 loss: 0.3766 accuracy: 0.8369 val_loss: 0.2749 val_accuracy: 0.8912
Epoch: 8 loss: 0.3684 accuracy: 0.8380 val_loss: 0.2606 val_accuracy: 0.8912
Epoch: 9 loss: 0.3603 accuracy: 0.8442 val_loss: 0.2542 val_accuracy: 0.9016
Epoch: 10 loss: 0.3566 accuracy: 0.8421 val_loss: 0.2522 val_accuracy: 0.8964
Epoch: 11 loss: 0.3388 accuracy: 0.8535 val_loss: 0.2684 val_accuracy: 0.8808
Epoch: 12 loss: 0.3387 accuracy: 0.8524 val_loss: 0.2558 val_accuracy: 0.8964
Epoch: 13 loss: 0.3334 accuracy: 0.8537 val_loss: 0.2520 val_accuracy: 0.8912
Epoch: 14 loss: 0.3298 accuracy: 0.8584 val_loss: 0.2521 val_accuracy: 0.8912
Epoch: 15 loss: 0.3247 accuracy: 0.8558 val_loss: 0.2476 val_accuracy: 0.9016
Epoch: 16 loss: 0.3196 accuracy: 0.8628 val_loss: 0.2482 val_accuracy: 0.8756
Epoch: 17 loss: 0.3215 accuracy: 0.8602 val_loss: 0.2427 val_accuracy: 0.9016
Epoch: 18 loss: 0.3113 accuracy: 0.8661 val_loss: 0.2318 val_accuracy: 0.9119
Epoch: 19 loss: 0.3135 accuracy: 0.8661 val_loss: 0.2592 val_accuracy: 0.8601
Epoch: 20 loss: 0.3072 accuracy: 0.8677 val_loss: 0.2253 val_accuracy: 0.8964
Job ended!
