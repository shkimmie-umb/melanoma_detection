Tue 27 Feb 2024 11:35:43 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['PAD_UFES_20']
IMG_SIZE: [150, 150]
CLASSIFIER: MobileNetV2
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
mobilenetv2_1.00_150 (Functi (None, 1280)              2257984   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 3,048,770
Trainable params: 789,250
Non-trainable params: 2,259,520
_________________________________________________________________
Fitting PAD_UFES_20_aug_MobileNetV2_150h_150w_None model...
model_name: PAD_UFES_20_aug_MobileNetV2_150h_150w_None
Epoch: 1 loss: 0.6624 accuracy: 0.6308 val_loss: 0.5899 val_accuracy: 0.9804
Epoch: 2 loss: 0.5991 accuracy: 0.8008 val_loss: 0.4972 val_accuracy: 0.9804
Epoch: 3 loss: 0.5461 accuracy: 0.8292 val_loss: 0.4108 val_accuracy: 0.9804
Epoch: 4 loss: 0.5072 accuracy: 0.8288 val_loss: 0.3448 val_accuracy: 0.9804
Epoch: 5 loss: 0.4824 accuracy: 0.8285 val_loss: 0.2963 val_accuracy: 0.9804
Epoch: 6 loss: 0.4675 accuracy: 0.8292 val_loss: 0.2601 val_accuracy: 0.9804
Epoch: 7 loss: 0.4623 accuracy: 0.8285 val_loss: 0.2454 val_accuracy: 0.9804
Epoch: 8 loss: 0.4590 accuracy: 0.8292 val_loss: 0.2690 val_accuracy: 0.9804
Epoch: 9 loss: 0.4608 accuracy: 0.8281 val_loss: 0.2154 val_accuracy: 0.9804
Epoch: 10 loss: 0.4597 accuracy: 0.8292 val_loss: 0.2089 val_accuracy: 0.9804
Epoch: 11 loss: 0.4565 accuracy: 0.8300 val_loss: 0.2174 val_accuracy: 0.9804
Epoch: 12 loss: 0.4572 accuracy: 0.8292 val_loss: 0.2269 val_accuracy: 0.9804
Epoch: 13 loss: 0.4587 accuracy: 0.8288 val_loss: 0.2219 val_accuracy: 0.9804
Epoch: 14 loss: 0.4603 accuracy: 0.8277 val_loss: 0.2109 val_accuracy: 0.9804
Epoch: 15 loss: 0.4590 accuracy: 0.8285 val_loss: 0.2151 val_accuracy: 0.9804
Epoch: 16 loss: 0.4568 accuracy: 0.8296 val_loss: 0.2188 val_accuracy: 0.9804
Epoch: 17 loss: 0.4573 accuracy: 0.8296 val_loss: 0.2134 val_accuracy: 0.9804
Epoch: 18 loss: 0.4578 accuracy: 0.8292 val_loss: 0.2053 val_accuracy: 0.9804
Epoch: 19 loss: 0.4574 accuracy: 0.8296 val_loss: 0.2088 val_accuracy: 0.9804
Epoch: 20 loss: 0.4580 accuracy: 0.8285 val_loss: 0.2105 val_accuracy: 0.9804
Job ended!
