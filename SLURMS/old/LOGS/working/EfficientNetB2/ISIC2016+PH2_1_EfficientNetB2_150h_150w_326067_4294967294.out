Fri 01 Mar 2024 05:27:20 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'PH2']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB2
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb2 (Functional)  (None, 1408)              7768569   
_________________________________________________________________
dense (Dense)                (None, 512)               721408    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 8,624,891
Trainable params: 854,786
Non-trainable params: 7,770,105
_________________________________________________________________
Fitting ISIC2016+PH2_aug_EfficientNetB2_150h_150w_None model...
model_name: ISIC2016+PH2_aug_EfficientNetB2_150h_150w_None
Epoch: 1 loss: 0.7810 accuracy: 0.6678 val_loss: 0.4997 val_accuracy: 0.8000
Epoch: 2 loss: 0.6437 accuracy: 0.7268 val_loss: 0.4603 val_accuracy: 0.7944
Epoch: 3 loss: 0.5726 accuracy: 0.7412 val_loss: 0.4507 val_accuracy: 0.8167
Epoch: 4 loss: 0.5382 accuracy: 0.7591 val_loss: 0.4453 val_accuracy: 0.7944
Epoch: 5 loss: 0.4678 accuracy: 0.7914 val_loss: 0.4332 val_accuracy: 0.8056
Epoch: 6 loss: 0.4613 accuracy: 0.7920 val_loss: 0.4232 val_accuracy: 0.8333
Epoch: 7 loss: 0.4059 accuracy: 0.8222 val_loss: 0.4123 val_accuracy: 0.8111
Epoch: 8 loss: 0.3989 accuracy: 0.8243 val_loss: 0.4278 val_accuracy: 0.8222
Epoch: 9 loss: 0.3834 accuracy: 0.8133 val_loss: 0.4276 val_accuracy: 0.8333
Epoch: 10 loss: 0.3607 accuracy: 0.8325 val_loss: 0.4272 val_accuracy: 0.8056
Epoch: 11 loss: 0.3434 accuracy: 0.8373 val_loss: 0.4429 val_accuracy: 0.8056
Epoch: 12 loss: 0.3370 accuracy: 0.8689 val_loss: 0.4426 val_accuracy: 0.7889
Epoch: 13 loss: 0.2767 accuracy: 0.8888 val_loss: 0.4374 val_accuracy: 0.8278
Epoch: 14 loss: 0.3020 accuracy: 0.8771 val_loss: 0.4394 val_accuracy: 0.8333
Epoch: 15 loss: 0.2719 accuracy: 0.8840 val_loss: 0.4346 val_accuracy: 0.8222
Epoch: 16 loss: 0.2819 accuracy: 0.8785 val_loss: 0.4325 val_accuracy: 0.8444
Epoch: 17 loss: 0.2690 accuracy: 0.8847 val_loss: 0.4318 val_accuracy: 0.8222
Epoch: 18 loss: 0.2878 accuracy: 0.8792 val_loss: 0.4389 val_accuracy: 0.8333
Epoch: 19 loss: 0.2396 accuracy: 0.8950 val_loss: 0.4459 val_accuracy: 0.8333
Epoch: 20 loss: 0.2376 accuracy: 0.9005 val_loss: 0.4403 val_accuracy: 0.8222
Job ended!
