Fri 03 May 2024 05:51:35 PM EDT
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'ISIC2019']
IMG_SIZE: [384, 384]
CLASSIFIER: EfficientNetB3
JOB_INDEX: None
Start training augmented images
Combining...
Combining 1th db out of 2 dbs
Combining 2th db out of 2 dbs
Stacking data
Combining complete
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb3 (Functional)  (None, 1536)              10783535  
_________________________________________________________________
dense (Dense)                (None, 512)               786944    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 11,705,393
Trainable params: 920,322
Non-trainable params: 10,785,071
_________________________________________________________________
Fitting ISIC2016+ISIC2019_aug_EfficientNetB3_384h_384w_None model...
model_name: ISIC2016+ISIC2019_aug_EfficientNetB3_384h_384w_None
Epoch: 1 loss: 1.2591 accuracy: 0.5426 val_loss: 0.9889 val_accuracy: 0.8212
Epoch: 2 loss: 1.1098 accuracy: 0.5731 val_loss: 0.8611 val_accuracy: 0.8212
Epoch: 3 loss: 1.0668 accuracy: 0.5751 val_loss: 0.9035 val_accuracy: 0.8212
Epoch: 4 loss: 1.0224 accuracy: 0.5854 val_loss: 0.8111 val_accuracy: 0.8212
Epoch: 5 loss: 0.9882 accuracy: 0.5956 val_loss: 0.9317 val_accuracy: 0.8212
Epoch: 6 loss: 0.9515 accuracy: 0.6067 val_loss: 0.7892 val_accuracy: 0.8212
Epoch: 7 loss: 0.9184 accuracy: 0.6111 val_loss: 0.7028 val_accuracy: 0.8212
Epoch: 8 loss: 0.8896 accuracy: 0.6127 val_loss: 0.6715 val_accuracy: 0.8212
Epoch: 9 loss: 0.8621 accuracy: 0.6094 val_loss: 0.7496 val_accuracy: 0.8212
Epoch: 10 loss: 0.8305 accuracy: 0.6165 val_loss: 0.7071 val_accuracy: 0.8212
Epoch: 11 loss: 0.8054 accuracy: 0.6132 val_loss: 0.5935 val_accuracy: 0.8212
Epoch: 12 loss: 0.7807 accuracy: 0.6193 val_loss: 0.7396 val_accuracy: 0.8212
Epoch: 13 loss: 0.7639 accuracy: 0.6162 val_loss: 0.6238 val_accuracy: 0.8212
Epoch: 14 loss: 0.7478 accuracy: 0.6164 val_loss: 0.6413 val_accuracy: 0.8212
Epoch: 15 loss: 0.7340 accuracy: 0.6185 val_loss: 0.5376 val_accuracy: 0.8212
Epoch: 16 loss: 0.7252 accuracy: 0.6150 val_loss: 0.5574 val_accuracy: 0.8212
Epoch: 17 loss: 0.7156 accuracy: 0.6159 val_loss: 0.6188 val_accuracy: 0.8212
Epoch: 18 loss: 0.7095 accuracy: 0.6132 val_loss: 0.5439 val_accuracy: 0.8212
Epoch: 19 loss: 0.7011 accuracy: 0.6230 val_loss: 0.7551 val_accuracy: 0.1788
Epoch: 20 loss: 0.6984 accuracy: 0.6199 val_loss: 0.5763 val_accuracy: 0.8212

Epoch 00020: ReduceLROnPlateau reducing learning rate to 7.999999797903001e-05.
Epoch: 21 loss: 0.6940 accuracy: 0.6225 val_loss: 0.5416 val_accuracy: 0.8212
Epoch: 22 loss: 0.6906 accuracy: 0.6212 val_loss: 0.6312 val_accuracy: 0.8212
Epoch: 23 loss: 0.6865 accuracy: 0.6272 val_loss: 0.5659 val_accuracy: 0.8212
Epoch: 24 loss: 0.6863 accuracy: 0.6217 val_loss: 0.5575 val_accuracy: 0.8212
Epoch: 25 loss: 0.6848 accuracy: 0.6222 val_loss: 0.5586 val_accuracy: 0.8212

Epoch 00025: ReduceLROnPlateau reducing learning rate to 6.399999838322402e-05.
End of augmented training
Finish
Job ended!
