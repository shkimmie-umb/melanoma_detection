Tue 27 Feb 2024 10:42:55 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'MEDNODE']
IMG_SIZE: [150, 150]
CLASSIFIER: MobileNet
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
mobilenet_1.00_150 (Function (None, 1024)              3228864   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 3,888,578
Trainable params: 658,178
Non-trainable params: 3,230,400
_________________________________________________________________
Fitting ISIC2016+MEDNODE_aug_MobileNet_150h_150w_None model...
model_name: ISIC2016+MEDNODE_aug_MobileNet_150h_150w_None
Epoch: 1 loss: 0.6911 accuracy: 0.5185 val_loss: 0.6724 val_accuracy: 0.7664
Epoch: 2 loss: 0.6983 accuracy: 0.5113 val_loss: 0.6563 val_accuracy: 0.7664
Epoch: 3 loss: 0.6860 accuracy: 0.5563 val_loss: 0.6451 val_accuracy: 0.7664
Epoch: 4 loss: 0.6894 accuracy: 0.5606 val_loss: 0.6410 val_accuracy: 0.7664
Epoch: 5 loss: 0.6839 accuracy: 0.5715 val_loss: 0.6344 val_accuracy: 0.7664
Epoch: 6 loss: 0.6814 accuracy: 0.5911 val_loss: 0.6320 val_accuracy: 0.7664
Epoch: 7 loss: 0.6791 accuracy: 0.5861 val_loss: 0.6320 val_accuracy: 0.7664
Epoch: 8 loss: 0.6826 accuracy: 0.5817 val_loss: 0.6280 val_accuracy: 0.7664
Epoch: 9 loss: 0.6810 accuracy: 0.5846 val_loss: 0.6243 val_accuracy: 0.7664
Epoch: 10 loss: 0.6809 accuracy: 0.5861 val_loss: 0.6207 val_accuracy: 0.7664
Epoch: 11 loss: 0.6802 accuracy: 0.5882 val_loss: 0.6129 val_accuracy: 0.7664
Epoch: 12 loss: 0.6790 accuracy: 0.5875 val_loss: 0.6090 val_accuracy: 0.7664
Epoch: 13 loss: 0.6805 accuracy: 0.5853 val_loss: 0.6204 val_accuracy: 0.7664
Epoch: 14 loss: 0.6803 accuracy: 0.5839 val_loss: 0.6216 val_accuracy: 0.7664
Epoch: 15 loss: 0.6791 accuracy: 0.5875 val_loss: 0.6163 val_accuracy: 0.7664
Epoch: 16 loss: 0.6803 accuracy: 0.5817 val_loss: 0.6196 val_accuracy: 0.7664
Epoch: 17 loss: 0.6794 accuracy: 0.5853 val_loss: 0.6145 val_accuracy: 0.7664
Epoch: 18 loss: 0.6787 accuracy: 0.5846 val_loss: 0.6140 val_accuracy: 0.7664
Epoch: 19 loss: 0.6753 accuracy: 0.5890 val_loss: 0.6209 val_accuracy: 0.7664
Epoch: 20 loss: 0.6793 accuracy: 0.5861 val_loss: 0.6276 val_accuracy: 0.7664
Job ended!
