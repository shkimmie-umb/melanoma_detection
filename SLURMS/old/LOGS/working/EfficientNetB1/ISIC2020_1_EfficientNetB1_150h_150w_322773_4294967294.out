Tue 27 Feb 2024 07:01:45 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2020']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB1
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb1 (Functional)  (None, 1280)              6575239   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,366,025
Trainable params: 789,250
Non-trainable params: 6,576,775
_________________________________________________________________
Fitting ISIC2020_aug_EfficientNetB1_150h_150w_None model...
model_name: ISIC2020_aug_EfficientNetB1_150h_150w_None
Epoch: 1 loss: 0.5060 accuracy: 0.7931 val_loss: 0.2766 val_accuracy: 0.9843
Epoch: 2 loss: 0.4644 accuracy: 0.8114 val_loss: 0.1533 val_accuracy: 0.9843
Epoch: 3 loss: 0.4640 accuracy: 0.8112 val_loss: 0.2430 val_accuracy: 0.9843
Epoch: 4 loss: 0.4621 accuracy: 0.8121 val_loss: 0.1891 val_accuracy: 0.9843
Epoch: 5 loss: 0.4605 accuracy: 0.8120 val_loss: 0.1673 val_accuracy: 0.9843
Epoch: 6 loss: 0.4605 accuracy: 0.8118 val_loss: 0.1836 val_accuracy: 0.9843
Epoch: 7 loss: 0.4608 accuracy: 0.8125 val_loss: 0.1837 val_accuracy: 0.9843
Epoch: 8 loss: 0.4583 accuracy: 0.8128 val_loss: 0.1971 val_accuracy: 0.9843
Epoch: 9 loss: 0.4583 accuracy: 0.8123 val_loss: 0.2100 val_accuracy: 0.9843
Epoch: 10 loss: 0.4564 accuracy: 0.8120 val_loss: 0.1725 val_accuracy: 0.9843
Epoch: 11 loss: 0.4543 accuracy: 0.8128 val_loss: 0.1707 val_accuracy: 0.9843
Epoch: 12 loss: 0.4540 accuracy: 0.8129 val_loss: 0.3327 val_accuracy: 0.9715
Epoch: 13 loss: 0.4528 accuracy: 0.8129 val_loss: 0.1830 val_accuracy: 0.9843
Epoch: 14 loss: 0.4502 accuracy: 0.8123 val_loss: 0.2073 val_accuracy: 0.9843
Epoch: 15 loss: 0.4518 accuracy: 0.8133 val_loss: 0.2382 val_accuracy: 0.9831
Epoch: 16 loss: 0.4498 accuracy: 0.8131 val_loss: 0.1825 val_accuracy: 0.9843
Epoch: 17 loss: 0.4483 accuracy: 0.8125 val_loss: 0.2455 val_accuracy: 0.9832
Epoch: 18 loss: 0.4481 accuracy: 0.8135 val_loss: 0.3445 val_accuracy: 0.9703
Epoch: 19 loss: 0.4494 accuracy: 0.8129 val_loss: 0.1779 val_accuracy: 0.9843
Epoch: 20 loss: 0.4476 accuracy: 0.8127 val_loss: 0.3545 val_accuracy: 0.9519
Job ended!
