Fri 01 Mar 2024 03:54:16 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'KaggleMB']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB1
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb1 (Functional)  (None, 1280)              6575239   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,366,025
Trainable params: 789,250
Non-trainable params: 6,576,775
_________________________________________________________________
Fitting ISIC2016+KaggleMB_aug_EfficientNetB1_150h_150w_None model...
model_name: ISIC2016+KaggleMB_aug_EfficientNetB1_150h_150w_None
Epoch: 1 loss: 0.6736 accuracy: 0.6781 val_loss: 0.4919 val_accuracy: 0.7740
Epoch: 2 loss: 0.5423 accuracy: 0.7553 val_loss: 0.4162 val_accuracy: 0.8037
Epoch: 3 loss: 0.4747 accuracy: 0.7828 val_loss: 0.4074 val_accuracy: 0.7994
Epoch: 4 loss: 0.4527 accuracy: 0.7946 val_loss: 0.3906 val_accuracy: 0.8107
Epoch: 5 loss: 0.4230 accuracy: 0.8144 val_loss: 0.4017 val_accuracy: 0.8206
Epoch: 6 loss: 0.4077 accuracy: 0.8189 val_loss: 0.3992 val_accuracy: 0.8263
Epoch: 7 loss: 0.4121 accuracy: 0.8166 val_loss: 0.4027 val_accuracy: 0.8136
Epoch: 8 loss: 0.3839 accuracy: 0.8313 val_loss: 0.3836 val_accuracy: 0.8291
Epoch: 9 loss: 0.3776 accuracy: 0.8266 val_loss: 0.3841 val_accuracy: 0.8291
Epoch: 10 loss: 0.3627 accuracy: 0.8351 val_loss: 0.3785 val_accuracy: 0.8249
Epoch: 11 loss: 0.3403 accuracy: 0.8537 val_loss: 0.3723 val_accuracy: 0.8333
Epoch: 12 loss: 0.3436 accuracy: 0.8524 val_loss: 0.3629 val_accuracy: 0.8390
Epoch: 13 loss: 0.3306 accuracy: 0.8539 val_loss: 0.3609 val_accuracy: 0.8347
Epoch: 14 loss: 0.3223 accuracy: 0.8622 val_loss: 0.3769 val_accuracy: 0.8362
Epoch: 15 loss: 0.3075 accuracy: 0.8709 val_loss: 0.3693 val_accuracy: 0.8277
Epoch: 16 loss: 0.3008 accuracy: 0.8718 val_loss: 0.3872 val_accuracy: 0.8390
Epoch: 17 loss: 0.3026 accuracy: 0.8699 val_loss: 0.3962 val_accuracy: 0.8319
Epoch: 18 loss: 0.2919 accuracy: 0.8701 val_loss: 0.3940 val_accuracy: 0.8277
Epoch: 19 loss: 0.3015 accuracy: 0.8746 val_loss: 0.3789 val_accuracy: 0.8277
Epoch: 20 loss: 0.2735 accuracy: 0.8857 val_loss: 0.3694 val_accuracy: 0.8291
Job ended!
