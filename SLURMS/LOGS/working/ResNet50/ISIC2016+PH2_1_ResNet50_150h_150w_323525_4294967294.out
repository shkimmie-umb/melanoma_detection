Wed 28 Feb 2024 08:19:48 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'PH2']
IMG_SIZE: [150, 150]
CLASSIFIER: ResNet50
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
resnet50 (Functional)        (None, 2048)              23587712  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 24,771,714
Trainable params: 1,182,466
Non-trainable params: 23,589,248
_________________________________________________________________
Fitting ISIC2016+PH2_aug_ResNet50_150h_150w_None model...
model_name: ISIC2016+PH2_aug_ResNet50_150h_150w_None
Epoch: 1 loss: 0.9123 accuracy: 0.5649 val_loss: 0.6012 val_accuracy: 0.8000
Epoch: 2 loss: 0.8145 accuracy: 0.6163 val_loss: 1.3318 val_accuracy: 0.2000
Epoch: 3 loss: 0.7749 accuracy: 0.6074 val_loss: 0.5648 val_accuracy: 0.7944
Epoch: 4 loss: 0.7422 accuracy: 0.6081 val_loss: 0.8662 val_accuracy: 0.2833
Epoch: 5 loss: 0.7228 accuracy: 0.5978 val_loss: 0.9041 val_accuracy: 0.3278
Epoch: 6 loss: 0.7173 accuracy: 0.6458 val_loss: 0.4843 val_accuracy: 0.8056
Epoch: 7 loss: 0.7049 accuracy: 0.6445 val_loss: 0.6555 val_accuracy: 0.6500
Epoch: 8 loss: 0.6957 accuracy: 0.6424 val_loss: 0.8433 val_accuracy: 0.3833
Epoch: 9 loss: 0.7284 accuracy: 0.6209 val_loss: 0.9187 val_accuracy: 0.2500
Epoch: 10 loss: 0.7085 accuracy: 0.6472 val_loss: 1.3652 val_accuracy: 0.2000
Epoch: 11 loss: 0.6895 accuracy: 0.6630 val_loss: 0.6426 val_accuracy: 0.7000
Epoch: 12 loss: 0.7060 accuracy: 0.6321 val_loss: 0.7960 val_accuracy: 0.3611
Epoch: 13 loss: 0.6771 accuracy: 0.6420 val_loss: 0.6433 val_accuracy: 0.6556
Epoch: 14 loss: 0.7233 accuracy: 0.6335 val_loss: 0.7232 val_accuracy: 0.5500
Epoch: 15 loss: 0.6930 accuracy: 0.6458 val_loss: 0.7564 val_accuracy: 0.3278
Epoch: 16 loss: 0.6895 accuracy: 0.6458 val_loss: 0.6082 val_accuracy: 0.7444
Epoch: 17 loss: 0.6910 accuracy: 0.6335 val_loss: 0.6958 val_accuracy: 0.6000
Epoch: 18 loss: 0.7263 accuracy: 0.6122 val_loss: 1.1736 val_accuracy: 0.3444
Epoch: 19 loss: 0.6843 accuracy: 0.6328 val_loss: 1.0852 val_accuracy: 0.3222
Epoch: 20 loss: 0.7013 accuracy: 0.6383 val_loss: 0.7884 val_accuracy: 0.5000
Job ended!
