Tue 27 Feb 2024 10:20:49 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['PAD_UFES_20']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB3
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb3 (Functional)  (None, 1536)              10783535  
_________________________________________________________________
dense (Dense)                (None, 512)               786944    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 11,705,393
Trainable params: 920,322
Non-trainable params: 10,785,071
_________________________________________________________________
Fitting PAD_UFES_20_aug_EfficientNetB3_150h_150w_None model...
model_name: PAD_UFES_20_aug_EfficientNetB3_150h_150w_None
Epoch: 1 loss: 0.6641 accuracy: 0.6281 val_loss: 0.5907 val_accuracy: 0.9804
Epoch: 2 loss: 0.6015 accuracy: 0.7906 val_loss: 0.4974 val_accuracy: 0.9804
Epoch: 3 loss: 0.5518 accuracy: 0.8238 val_loss: 0.4204 val_accuracy: 0.9804
Epoch: 4 loss: 0.5112 accuracy: 0.8296 val_loss: 0.3501 val_accuracy: 0.9804
Epoch: 5 loss: 0.4851 accuracy: 0.8296 val_loss: 0.3051 val_accuracy: 0.9804
Epoch: 6 loss: 0.4711 accuracy: 0.8288 val_loss: 0.2669 val_accuracy: 0.9804
Epoch: 7 loss: 0.4631 accuracy: 0.8285 val_loss: 0.2205 val_accuracy: 0.9804
Epoch: 8 loss: 0.4636 accuracy: 0.8281 val_loss: 0.2284 val_accuracy: 0.9804
Epoch: 9 loss: 0.4592 accuracy: 0.8285 val_loss: 0.2586 val_accuracy: 0.9804
Epoch: 10 loss: 0.4585 accuracy: 0.8285 val_loss: 0.2085 val_accuracy: 0.9804
Epoch: 11 loss: 0.4566 accuracy: 0.8300 val_loss: 0.1932 val_accuracy: 0.9804
Epoch: 12 loss: 0.4583 accuracy: 0.8296 val_loss: 0.1916 val_accuracy: 0.9804
Epoch: 13 loss: 0.4586 accuracy: 0.8288 val_loss: 0.2106 val_accuracy: 0.9804
Epoch: 14 loss: 0.4580 accuracy: 0.8292 val_loss: 0.2419 val_accuracy: 0.9804
Epoch: 15 loss: 0.4578 accuracy: 0.8292 val_loss: 0.2131 val_accuracy: 0.9804
Epoch: 16 loss: 0.4563 accuracy: 0.8291 val_loss: 0.2017 val_accuracy: 0.9804
Epoch: 17 loss: 0.4566 accuracy: 0.8296 val_loss: 0.2626 val_accuracy: 0.9804
Epoch: 18 loss: 0.4554 accuracy: 0.8296 val_loss: 0.2449 val_accuracy: 0.9804
Epoch: 19 loss: 0.4567 accuracy: 0.8288 val_loss: 0.2248 val_accuracy: 0.9804
Epoch: 20 loss: 0.4601 accuracy: 0.8277 val_loss: 0.2129 val_accuracy: 0.9804
Job ended!
