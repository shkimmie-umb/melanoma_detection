Wed 28 Feb 2024 09:24:53 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'PH2']
IMG_SIZE: [150, 150]
CLASSIFIER: ResNet50V2
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
resnet50v2 (Functional)      (None, 2048)              23564800  
_________________________________________________________________
dense (Dense)                (None, 512)               1049088   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 24,748,802
Trainable params: 1,182,466
Non-trainable params: 23,566,336
_________________________________________________________________
Fitting ISIC2016+PH2_aug_ResNet50V2_150h_150w_None model...
model_name: ISIC2016+PH2_aug_ResNet50V2_150h_150w_None
Epoch: 1 loss: 0.8707 accuracy: 0.5635 val_loss: 0.6196 val_accuracy: 0.8000
Epoch: 2 loss: 0.7733 accuracy: 0.6150 val_loss: 0.5695 val_accuracy: 0.8000
Epoch: 3 loss: 0.7624 accuracy: 0.5978 val_loss: 0.5363 val_accuracy: 0.8000
Epoch: 4 loss: 0.7321 accuracy: 0.6259 val_loss: 0.5112 val_accuracy: 0.8000
Epoch: 5 loss: 0.7424 accuracy: 0.6266 val_loss: 0.4986 val_accuracy: 0.8000
Epoch: 6 loss: 0.7064 accuracy: 0.6445 val_loss: 0.4972 val_accuracy: 0.8000
Epoch: 7 loss: 0.6618 accuracy: 0.6623 val_loss: 0.4827 val_accuracy: 0.8000
Epoch: 8 loss: 0.6558 accuracy: 0.6658 val_loss: 0.4839 val_accuracy: 0.8000
Epoch: 9 loss: 0.6763 accuracy: 0.6685 val_loss: 0.4883 val_accuracy: 0.8000
Epoch: 10 loss: 0.6701 accuracy: 0.6692 val_loss: 0.4961 val_accuracy: 0.8000
Epoch: 11 loss: 0.6793 accuracy: 0.6664 val_loss: 0.5063 val_accuracy: 0.8056
Epoch: 12 loss: 0.6619 accuracy: 0.6651 val_loss: 0.5245 val_accuracy: 0.8000
Epoch: 13 loss: 0.6562 accuracy: 0.6548 val_loss: 0.4919 val_accuracy: 0.8000
Epoch: 14 loss: 0.6636 accuracy: 0.6685 val_loss: 0.5269 val_accuracy: 0.7944
Epoch: 15 loss: 0.6729 accuracy: 0.6630 val_loss: 0.4992 val_accuracy: 0.7889
Epoch: 16 loss: 0.6557 accuracy: 0.6726 val_loss: 0.6020 val_accuracy: 0.7222
Epoch: 17 loss: 0.6502 accuracy: 0.6733 val_loss: 0.4982 val_accuracy: 0.8056
Epoch: 18 loss: 0.6420 accuracy: 0.6733 val_loss: 0.5027 val_accuracy: 0.8056
Epoch: 19 loss: 0.6388 accuracy: 0.6829 val_loss: 0.5658 val_accuracy: 0.7833
Epoch: 20 loss: 0.6290 accuracy: 0.6884 val_loss: 0.6671 val_accuracy: 0.6111
Job ended!
