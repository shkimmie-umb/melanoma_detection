Fri 01 Mar 2024 11:34:46 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'MEDNODE']
IMG_SIZE: [150, 150]
CLASSIFIER: VGG16
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
vgg16 (Functional)           (None, 512)               14714688  
_________________________________________________________________
dense (Dense)                (None, 512)               262656    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 15,112,258
Trainable params: 396,034
Non-trainable params: 14,716,224
_________________________________________________________________
Fitting ISIC2016+MEDNODE_aug_VGG16_150h_150w_None model...
model_name: ISIC2016+MEDNODE_aug_VGG16_150h_150w_None
Epoch: 1 loss: 0.8539 accuracy: 0.6006 val_loss: 0.6176 val_accuracy: 0.7336
Epoch: 2 loss: 0.6619 accuracy: 0.6877 val_loss: 0.5593 val_accuracy: 0.7477
Epoch: 3 loss: 0.5751 accuracy: 0.7284 val_loss: 0.5730 val_accuracy: 0.7617
Epoch: 4 loss: 0.5510 accuracy: 0.7277 val_loss: 0.5576 val_accuracy: 0.7944
Epoch: 5 loss: 0.5004 accuracy: 0.7691 val_loss: 0.5616 val_accuracy: 0.7804
Epoch: 6 loss: 0.4670 accuracy: 0.7800 val_loss: 0.5384 val_accuracy: 0.7850
Epoch: 7 loss: 0.4474 accuracy: 0.7916 val_loss: 0.5351 val_accuracy: 0.7804
Epoch: 8 loss: 0.4169 accuracy: 0.8054 val_loss: 0.5466 val_accuracy: 0.7850
Epoch: 9 loss: 0.3795 accuracy: 0.8196 val_loss: 0.5638 val_accuracy: 0.7804
Epoch: 10 loss: 0.3655 accuracy: 0.8322 val_loss: 0.5705 val_accuracy: 0.7804
Epoch: 11 loss: 0.3576 accuracy: 0.8402 val_loss: 0.5583 val_accuracy: 0.7850
Epoch: 12 loss: 0.3453 accuracy: 0.8439 val_loss: 0.5536 val_accuracy: 0.7944
Epoch: 13 loss: 0.3334 accuracy: 0.8562 val_loss: 0.5588 val_accuracy: 0.7757
Epoch: 14 loss: 0.3239 accuracy: 0.8562 val_loss: 0.5636 val_accuracy: 0.7944
Epoch: 15 loss: 0.2845 accuracy: 0.8722 val_loss: 0.5872 val_accuracy: 0.7944
Epoch: 16 loss: 0.2839 accuracy: 0.8757 val_loss: 0.5762 val_accuracy: 0.7850
Epoch: 17 loss: 0.2826 accuracy: 0.8809 val_loss: 0.5779 val_accuracy: 0.7850
Epoch: 18 loss: 0.2719 accuracy: 0.8773 val_loss: 0.5663 val_accuracy: 0.7850
Epoch: 19 loss: 0.2476 accuracy: 0.8954 val_loss: 0.5910 val_accuracy: 0.7897
Epoch: 20 loss: 0.2490 accuracy: 0.8962 val_loss: 0.6382 val_accuracy: 0.7757
Job ended!
