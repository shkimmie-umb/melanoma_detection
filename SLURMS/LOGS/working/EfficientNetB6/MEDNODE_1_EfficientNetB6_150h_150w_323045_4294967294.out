Tue 27 Feb 2024 05:15:25 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['MEDNODE']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB6
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb6 (Functional)  (None, 2304)              40960143  
_________________________________________________________________
dense (Dense)                (None, 512)               1180160   
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 42,275,217
Trainable params: 1,313,538
Non-trainable params: 40,961,679
_________________________________________________________________
Fitting MEDNODE_aug_EfficientNetB6_150h_150w_None model...
model_name: MEDNODE_aug_EfficientNetB6_150h_150w_None
Epoch: 1 loss: 0.6946 accuracy: 0.4732 val_loss: 0.6940 val_accuracy: 0.4118
Epoch: 2 loss: 0.6881 accuracy: 0.5402 val_loss: 0.6950 val_accuracy: 0.4118
Epoch: 3 loss: 0.6963 accuracy: 0.5357 val_loss: 0.6961 val_accuracy: 0.4118
Epoch: 4 loss: 0.6977 accuracy: 0.5312 val_loss: 0.6974 val_accuracy: 0.4118
Epoch: 5 loss: 0.6937 accuracy: 0.4911 val_loss: 0.6989 val_accuracy: 0.4118
Epoch: 6 loss: 0.6982 accuracy: 0.5089 val_loss: 0.7001 val_accuracy: 0.4118
Epoch: 7 loss: 0.6854 accuracy: 0.5804 val_loss: 0.7011 val_accuracy: 0.4118
Epoch: 8 loss: 0.6872 accuracy: 0.5357 val_loss: 0.7022 val_accuracy: 0.4118
Epoch: 9 loss: 0.6961 accuracy: 0.5312 val_loss: 0.7032 val_accuracy: 0.4118
Epoch: 10 loss: 0.6944 accuracy: 0.5357 val_loss: 0.7043 val_accuracy: 0.4118
Epoch: 11 loss: 0.6837 accuracy: 0.5580 val_loss: 0.7055 val_accuracy: 0.4118
Epoch: 12 loss: 0.6801 accuracy: 0.5714 val_loss: 0.7066 val_accuracy: 0.4118
Epoch: 13 loss: 0.6705 accuracy: 0.5804 val_loss: 0.7079 val_accuracy: 0.4118
Epoch: 14 loss: 0.6552 accuracy: 0.6205 val_loss: 0.7089 val_accuracy: 0.4118
Epoch: 15 loss: 0.6752 accuracy: 0.5893 val_loss: 0.7099 val_accuracy: 0.4118
Epoch: 16 loss: 0.6829 accuracy: 0.5580 val_loss: 0.7110 val_accuracy: 0.4118
Epoch: 17 loss: 0.6700 accuracy: 0.5938 val_loss: 0.7121 val_accuracy: 0.4118
Epoch: 18 loss: 0.6685 accuracy: 0.5714 val_loss: 0.7135 val_accuracy: 0.4118
Epoch: 19 loss: 0.6950 accuracy: 0.5536 val_loss: 0.7144 val_accuracy: 0.4118
Epoch: 20 loss: 0.6715 accuracy: 0.5938 val_loss: 0.7151 val_accuracy: 0.4118
Job ended!
