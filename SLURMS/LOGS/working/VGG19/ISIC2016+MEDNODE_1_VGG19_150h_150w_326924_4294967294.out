Sat 02 Mar 2024 12:16:21 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'MEDNODE']
IMG_SIZE: [150, 150]
CLASSIFIER: VGG19
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
vgg19 (Functional)           (None, 512)               20024384  
_________________________________________________________________
dense (Dense)                (None, 512)               262656    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 20,421,954
Trainable params: 396,034
Non-trainable params: 20,025,920
_________________________________________________________________
Fitting ISIC2016+MEDNODE_aug_VGG19_150h_150w_None model...
model_name: ISIC2016+MEDNODE_aug_VGG19_150h_150w_None
Epoch: 1 loss: 0.8777 accuracy: 0.5861 val_loss: 0.6337 val_accuracy: 0.7243
Epoch: 2 loss: 0.6918 accuracy: 0.6725 val_loss: 0.5480 val_accuracy: 0.7757
Epoch: 3 loss: 0.5989 accuracy: 0.7088 val_loss: 0.4969 val_accuracy: 0.7897
Epoch: 4 loss: 0.5679 accuracy: 0.7364 val_loss: 0.4872 val_accuracy: 0.7710
Epoch: 5 loss: 0.5272 accuracy: 0.7502 val_loss: 0.4639 val_accuracy: 0.7710
Epoch: 6 loss: 0.4706 accuracy: 0.7734 val_loss: 0.4683 val_accuracy: 0.8084
Epoch: 7 loss: 0.4537 accuracy: 0.7756 val_loss: 0.4702 val_accuracy: 0.8178
Epoch: 8 loss: 0.4398 accuracy: 0.7996 val_loss: 0.4594 val_accuracy: 0.8178
Epoch: 9 loss: 0.4237 accuracy: 0.7901 val_loss: 0.4554 val_accuracy: 0.8084
Epoch: 10 loss: 0.3974 accuracy: 0.8112 val_loss: 0.4446 val_accuracy: 0.8224
Epoch: 11 loss: 0.3813 accuracy: 0.8221 val_loss: 0.4549 val_accuracy: 0.7991
Epoch: 12 loss: 0.3676 accuracy: 0.8264 val_loss: 0.4496 val_accuracy: 0.8037
Epoch: 13 loss: 0.3374 accuracy: 0.8460 val_loss: 0.4473 val_accuracy: 0.8084
Epoch: 14 loss: 0.3209 accuracy: 0.8468 val_loss: 0.4426 val_accuracy: 0.8037
Epoch: 15 loss: 0.3217 accuracy: 0.8598 val_loss: 0.4540 val_accuracy: 0.8178
Epoch: 16 loss: 0.2887 accuracy: 0.8700 val_loss: 0.4475 val_accuracy: 0.7991
Epoch: 17 loss: 0.2955 accuracy: 0.8656 val_loss: 0.4860 val_accuracy: 0.8131
Epoch: 18 loss: 0.2713 accuracy: 0.8860 val_loss: 0.4585 val_accuracy: 0.8084
Epoch: 19 loss: 0.2743 accuracy: 0.8809 val_loss: 0.4562 val_accuracy: 0.8224
Epoch: 20 loss: 0.2471 accuracy: 0.8969 val_loss: 0.4599 val_accuracy: 0.8178
Job ended!
