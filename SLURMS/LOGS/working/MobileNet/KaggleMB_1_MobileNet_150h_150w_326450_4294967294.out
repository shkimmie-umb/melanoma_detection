Fri 01 Mar 2024 05:51:39 PM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['KaggleMB']
IMG_SIZE: [150, 150]
CLASSIFIER: MobileNet
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
mobilenet_1.00_224 (Function (None, 1024)              3228864   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 3,888,578
Trainable params: 658,178
Non-trainable params: 3,230,400
_________________________________________________________________
Fitting KaggleMB_aug_MobileNet_150h_150w_None model...
model_name: KaggleMB_aug_MobileNet_150h_150w_None
Epoch: 1 loss: 0.6409 accuracy: 0.7117 val_loss: 0.4291 val_accuracy: 0.8011
Epoch: 2 loss: 0.4533 accuracy: 0.8087 val_loss: 0.3933 val_accuracy: 0.8087
Epoch: 3 loss: 0.3925 accuracy: 0.8299 val_loss: 0.3720 val_accuracy: 0.8220
Epoch: 4 loss: 0.3317 accuracy: 0.8516 val_loss: 0.3810 val_accuracy: 0.8201
Epoch: 5 loss: 0.3021 accuracy: 0.8772 val_loss: 0.3703 val_accuracy: 0.8333
Epoch: 6 loss: 0.2571 accuracy: 0.8887 val_loss: 0.3711 val_accuracy: 0.8239
Epoch: 7 loss: 0.2381 accuracy: 0.8984 val_loss: 0.3556 val_accuracy: 0.8277
Epoch: 8 loss: 0.2150 accuracy: 0.9086 val_loss: 0.3596 val_accuracy: 0.8428
Epoch: 9 loss: 0.1963 accuracy: 0.9152 val_loss: 0.3541 val_accuracy: 0.8504
Epoch: 10 loss: 0.1777 accuracy: 0.9303 val_loss: 0.3700 val_accuracy: 0.8409
Epoch: 11 loss: 0.1649 accuracy: 0.9398 val_loss: 0.3545 val_accuracy: 0.8542
Epoch: 12 loss: 0.1482 accuracy: 0.9386 val_loss: 0.3743 val_accuracy: 0.8617
Epoch: 13 loss: 0.1244 accuracy: 0.9532 val_loss: 0.3845 val_accuracy: 0.8523
Epoch: 14 loss: 0.1319 accuracy: 0.9492 val_loss: 0.3627 val_accuracy: 0.8542
Epoch: 15 loss: 0.1123 accuracy: 0.9560 val_loss: 0.3949 val_accuracy: 0.8598
Epoch: 16 loss: 0.0978 accuracy: 0.9646 val_loss: 0.3981 val_accuracy: 0.8504
Epoch: 17 loss: 0.0862 accuracy: 0.9672 val_loss: 0.4294 val_accuracy: 0.8485
Epoch: 18 loss: 0.0826 accuracy: 0.9706 val_loss: 0.4366 val_accuracy: 0.8580
Epoch: 19 loss: 0.0759 accuracy: 0.9723 val_loss: 0.4370 val_accuracy: 0.8485
Epoch: 20 loss: 0.0758 accuracy: 0.9720 val_loss: 0.4459 val_accuracy: 0.8428
Job ended!
