Fri 01 Mar 2024 01:23:24 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB0
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb0 (Functional)  (None, 1280)              4049571   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 4,840,357
Trainable params: 789,250
Non-trainable params: 4,051,107
_________________________________________________________________
Fitting ISIC2016_aug_EfficientNetB0_150h_150w_None model...
model_name: ISIC2016_aug_EfficientNetB0_150h_150w_None
Epoch: 1 loss: 0.8123 accuracy: 0.6288 val_loss: 0.5021 val_accuracy: 0.8111
Epoch: 2 loss: 0.6721 accuracy: 0.6886 val_loss: 0.4785 val_accuracy: 0.8333
Epoch: 3 loss: 0.6159 accuracy: 0.6956 val_loss: 0.4618 val_accuracy: 0.8167
Epoch: 4 loss: 0.5660 accuracy: 0.7520 val_loss: 0.4480 val_accuracy: 0.8056
Epoch: 5 loss: 0.5357 accuracy: 0.7546 val_loss: 0.4375 val_accuracy: 0.8056
Epoch: 6 loss: 0.4982 accuracy: 0.7693 val_loss: 0.4217 val_accuracy: 0.8167
Epoch: 7 loss: 0.4790 accuracy: 0.7702 val_loss: 0.4301 val_accuracy: 0.8056
Epoch: 8 loss: 0.4543 accuracy: 0.7971 val_loss: 0.4157 val_accuracy: 0.8056
Epoch: 9 loss: 0.4510 accuracy: 0.7927 val_loss: 0.3994 val_accuracy: 0.8167
Epoch: 10 loss: 0.4227 accuracy: 0.8023 val_loss: 0.4201 val_accuracy: 0.8056
Epoch: 11 loss: 0.3963 accuracy: 0.8257 val_loss: 0.4269 val_accuracy: 0.8167
Epoch: 12 loss: 0.4137 accuracy: 0.8127 val_loss: 0.4031 val_accuracy: 0.8222
Epoch: 13 loss: 0.3701 accuracy: 0.8352 val_loss: 0.4123 val_accuracy: 0.8222
Epoch: 14 loss: 0.3395 accuracy: 0.8552 val_loss: 0.4353 val_accuracy: 0.8056
Epoch: 15 loss: 0.3555 accuracy: 0.8352 val_loss: 0.4377 val_accuracy: 0.8111
Epoch: 16 loss: 0.3317 accuracy: 0.8552 val_loss: 0.4553 val_accuracy: 0.8000
Epoch: 17 loss: 0.3155 accuracy: 0.8630 val_loss: 0.4630 val_accuracy: 0.8000
Epoch: 18 loss: 0.3131 accuracy: 0.8664 val_loss: 0.4615 val_accuracy: 0.7944
Epoch: 19 loss: 0.3215 accuracy: 0.8682 val_loss: 0.4818 val_accuracy: 0.7944
Epoch: 20 loss: 0.2777 accuracy: 0.8829 val_loss: 0.4710 val_accuracy: 0.7944
Job ended!
