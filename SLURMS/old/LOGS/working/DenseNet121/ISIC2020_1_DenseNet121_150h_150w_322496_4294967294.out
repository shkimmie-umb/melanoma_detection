Tue 27 Feb 2024 01:23:36 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2020']
IMG_SIZE: [150, 150]
CLASSIFIER: DenseNet121
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
densenet121 (Functional)     (None, 1024)              7037504   
_________________________________________________________________
dense (Dense)                (None, 512)               524800    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 7,697,218
Trainable params: 658,178
Non-trainable params: 7,039,040
_________________________________________________________________
Fitting ISIC2020_aug_DenseNet121_150h_150w_None model...
model_name: ISIC2020_aug_DenseNet121_150h_150w_None
Epoch: 1 loss: 0.5120 accuracy: 0.7524 val_loss: 0.2613 val_accuracy: 0.9334
Epoch: 2 loss: 0.3728 accuracy: 0.8295 val_loss: 0.1604 val_accuracy: 0.9609
Epoch: 3 loss: 0.3554 accuracy: 0.8410 val_loss: 0.0996 val_accuracy: 0.9811
Epoch: 4 loss: 0.3379 accuracy: 0.8468 val_loss: 0.1331 val_accuracy: 0.9759
Epoch: 5 loss: 0.3226 accuracy: 0.8526 val_loss: 0.1847 val_accuracy: 0.9482
Epoch: 6 loss: 0.3135 accuracy: 0.8542 val_loss: 0.0877 val_accuracy: 0.9819
Epoch: 7 loss: 0.3016 accuracy: 0.8588 val_loss: 0.1112 val_accuracy: 0.9765
Epoch: 8 loss: 0.2967 accuracy: 0.8608 val_loss: 0.0940 val_accuracy: 0.9796
Epoch: 9 loss: 0.2921 accuracy: 0.8605 val_loss: 0.0797 val_accuracy: 0.9825
Epoch: 10 loss: 0.2912 accuracy: 0.8646 val_loss: 0.1230 val_accuracy: 0.9765
Epoch: 11 loss: 0.2888 accuracy: 0.8635 val_loss: 0.1237 val_accuracy: 0.9756
Epoch: 12 loss: 0.2863 accuracy: 0.8655 val_loss: 0.1074 val_accuracy: 0.9754
Epoch: 13 loss: 0.2860 accuracy: 0.8670 val_loss: 0.0836 val_accuracy: 0.9813
Epoch: 14 loss: 0.2836 accuracy: 0.8680 val_loss: 0.1099 val_accuracy: 0.9731
Epoch: 15 loss: 0.2821 accuracy: 0.8665 val_loss: 0.0807 val_accuracy: 0.9820
Epoch: 16 loss: 0.2806 accuracy: 0.8681 val_loss: 0.1000 val_accuracy: 0.9762
Epoch: 17 loss: 0.2798 accuracy: 0.8707 val_loss: 0.1005 val_accuracy: 0.9775
Epoch: 18 loss: 0.2785 accuracy: 0.8706 val_loss: 0.1383 val_accuracy: 0.9639
Epoch: 19 loss: 0.2785 accuracy: 0.8696 val_loss: 0.1417 val_accuracy: 0.9688
Epoch: 20 loss: 0.2763 accuracy: 0.8684 val_loss: 0.1000 val_accuracy: 0.9768
Job ended!
